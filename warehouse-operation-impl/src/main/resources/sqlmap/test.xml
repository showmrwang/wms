<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.test.TestDao">
	<resultMap id="TestResult" type="com.baozun.scm.primservice.whoperation.model.test.Test">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="testColumns">
	    <![CDATA[
	        	id as id,
	        	name as name,
	        	cid as cid
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.test.Test" 
			useGeneratedKeys="true" keyProperty="id" 
		 flushCache="true">
	    <![CDATA[
	        INSERT INTO
	        test (
	        	name ,
	        	cid 
	        ) VALUES (
	        	#{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{cid,javaType=java.lang.Long,jdbcType=BIGINT} 
	        )
	    ]]>

		</insert>
	    
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.test.Test">
	    <![CDATA[
	        UPDATE test SET
		        name = #{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        cid = #{cid,javaType=java.lang.Long,jdbcType=BIGINT} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from test where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from test 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="TestResult" flushCache="false">
			select <include refid="testColumns" />
		    <![CDATA[
			    from test 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="TestResult" flushCache="false">
			select <include refid="testColumns" />
			    from test 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="testDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="id!=null and id!=''">
				and id = #{id}
			</if>
	       <if test="name!=null and name!=''">
				and name = #{name}
			</if>
	       <if test="cid!=null and cid!=''">
				and cid = #{cid}
			</if>
		</where>
	</sql>
	
	<select id="getAll" resultMap="TestResult"  flushCache="false">
    	select <include refid="testColumns" />
	    from test 

		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>	
	<select id="getCount" resultType="long">
        select count(*) from test 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from test 
		<include refid="testDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="TestResult">
    	select <include refid="testColumns" />
	    from test 
		<include refid="testDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="TestResult">
    	select <include refid="testColumns" />
	    from test 
		<include refid="testDynamicWhere"/>
		
    </select>

	
</mapper>
