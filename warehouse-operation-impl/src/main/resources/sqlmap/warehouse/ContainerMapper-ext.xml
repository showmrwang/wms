<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.ContainerDao">
	<resultMap id="ContainerResultExt" type="com.baozun.scm.primservice.whoperation.model.warehouse.Container">
	</resultMap>
	<resultMap id="ContainerCommandResultExt" type="com.baozun.scm.primservice.whoperation.command.warehouse.ContainerCommand">
	</resultMap>
	
	<select id="findListByQueryMapWithPageExt" resultMap="ContainerCommandResultExt">
	    	select <include refid="containerColumnsExt" />
		    from t_wh_container as s
		    left join sys_dictionary as syst on s.one_level_type = syst.dic_value AND syst.group_value = 'ONE_LEVEL_TYPE'
		    left join sys_dictionary as sysl on s.two_level_type = sysl.dic_id
			<include refid="containerDynamicWhereExt"/>
    </select>
	    
	<select id="findListCountByQueryMapExt" resultType="long">
	        select count(*) from t_wh_container as s
		    left join sys_dictionary as syst on s.one_level_type = syst.dic_value AND syst.group_value = 'ONE_LEVEL_TYPE'
		    left join sys_dictionary as sysl on s.two_level_type = sysl.id
			<include refid="containerDynamicWhereExt"/> 
	</select>
	
	<select id="findListCountByParamAndId" resultType="long">
        	select count(*) from t_wh_container 
			<include refid="containerDynamicWhereNotIdExt"/>    
    </select>
	
	<sql id="containerDynamicWhereNotIdExt">
		<where>
			<if test="id!=null">
				and id != #{id}
			</if>
			
			<if test="code!=null and code!=''">
				and code like #{code}
			</if>
			<if test="name!=null and name!=''">
				and name like #{name}
			</if>
			<if test="ouId!=null and ouId!=''">
				and ou_id = #{ouId}
			</if>
		</where>
   </sql>
   
	<!-- 用于select查询公用抽取的列 -->
	<sql id="containerColumnsExt">
	    <![CDATA[
	        	s.id as id,
	        	s.name as name,
	        	s.code as code,
	        	s.one_level_type as oneLevelType,
	        	s.two_level_type as twoLevelType,
	        	s.is_full as isFull,
	        	s.create_time as createTime,
	        	s.last_modify_time as lastModifyTime,
	        	s.operator_id as operatorId,
	        	s.lifecycle as lifecycle,
	        	s.ou_id as ouId,
	        	syst.dic_label as oneLevelTypeName,
                sysl.dic_label as twoLevelTypeName,
                s.status as status
	    ]]>
	</sql>
	
	<sql id="containerDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and s.id = #{id}
				</if>
	       
	       
		       <if test="name!=null and name!=''">
					and s.name like #{name}
				</if>
	       
       			<if test="name1!=null and name1!=''">
					and s.name like #{name1}
				</if>
	       
		       <if test="code!=null and code!=''">
					and s.code like #{code}
				</if>
				
				<if test="code1!=null and code1!=''">
					and s.code like #{code1}
				</if>
	       
				<if test="oneLevelType!=null">
					and s.one_level_type like #{oneLevelType}
				</if>
	       
				<if test="twoLevelType!=null">
					and s.two_level_type like #{twoLevelType}
				</if>
	       
				<if test="createTime!=null">
					and s.create_time = #{createTime}
				</if>
	       
				<if test="lastModifyTime!=null">
					and s.last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="operatorId!=null">
					and s.operator_id = #{operatorId}
				</if>
	       
				<if test="lifecycle!=null">
					and s.lifecycle = #{lifecycle}
				</if>
				<if test="ouId!=null">
					and s.ou_id = #{ouId}
				</if>
				<if test="status!=null">
					and s.status = #{status}
				</if>
		</where>
	</sql>
	

		<update id="updateByVersion" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.Container">
		    <![CDATA[
		         UPDATE t_wh_container SET
			        name = #{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        code = #{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        one_level_type = #{oneLevelType,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        two_level_type = #{twoLevelType,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        is_full = #{isFull,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        last_modify_time = now(),
			        operator_id = #{operatorId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        status=#{status,javaType=java.lang.Integer,jdbcType=INTEGER} 
		        WHERE 
			        id = #{id} 
			        and ou_id = #{ouId}
			        and last_modify_time	=  #{lastModifyTime}    
		    ]]>
		</update>
	
		<update id="updateLifeCycle" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.Container">
			UPDATE t_wh_container SET lifecycle = #{lifecycle},operator_id = #{userid},last_modify_time = now()  
			WHERE id in
			<foreach collection="ids" item="id" open="(" separator=","
				close=")">
				#{id}
			</foreach>
			and ou_id = #{ouId}
	    </update>
	    
	    <delete id="deleteExt" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_container where
		        id = #{id} 
		        and ou_id = #{ouId}
	    ]]>
	    </delete>
	    
	    <delete id="deleteByIdsExt" parameterType="list">
	        delete from t_wh_container 
	        where id in
				<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
			#{item}			
			</foreach>	
	  		and ou_id = #{ouId}
	    </delete>
	    
	    <delete id="deleteBoxTypeByIds" parameterType="list">
	        delete from t_wh_container 
	        where ou_id=#{ouId} and id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}			
			</foreach>
	    </delete>  
	    
	    <select id="findByIdExt" parameterType="java.lang.Long" resultMap="ContainerResult" flushCache="false">
			select <include refid="containerColumns" />
		    <![CDATA[
			    from t_wh_container 
		        where 
		        id = #{id} 
		        and ou_id = #{ouId}
		    ]]>
		</select>


        <select id="findContainerCommandByIdExt" resultMap="ContainerCommandResultExt">
            select
                <include refid="containerColumns" />
            <![CDATA[
                from t_wh_container
                where
                id = #{id}
                and ou_id = #{ouId}
            ]]>
        </select>
		
		<update id="updateExt" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.Container">
	    <![CDATA[
	        UPDATE t_wh_container SET
		        name = #{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        code = #{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        one_level_type = #{oneLevelType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        two_level_type = #{twoLevelType,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        is_full = #{isFull,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        operator_id = #{operatorId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        status=#{status,javaType=java.lang.Integer,jdbcType=INTEGER} 
	        WHERE 
		        id = #{id} 
		        and ou_id = #{ouId}
	    ]]>
		</update>
		
		<update id="updateCarTypeByIds" parameterType="list">
	        UPDATE t_wh_container SET
		        is_full = 0 ,
		        lifecycle = 1 ,
		        status=1 
	        WHERE 
		         ou_id=#{ouId} and id in
		        <foreach collection="list" item="id" open="(" separator="," close=")">
				#{id}
			</foreach>
		</update>
		
		<insert id="batchInsert" parameterType="map"> 
			<![CDATA[
				insert into
			    t_wh_container (
			    		id,
			        	name ,
			        	code ,
			        	one_level_type ,
			        	two_level_type ,
			        	is_full ,
			        	create_time ,
			        	last_modify_time ,
			        	operator_id ,
			        	lifecycle ,
			        	ou_id ,
			        	status
				        ) VALUES 
				]]>
				<foreach collection="list" item="item" index="index"
					separator=",">
					(
			        #{item.id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{item.name,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{item.code,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{item.oneLevelType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{item.twoLevelType,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{item.isFull,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        	#{item.createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{item.lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{item.operatorId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{item.lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{item.ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{item.status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
					)
				</foreach>
		</insert>
		
		 <select id="getContainerByCode" parameterType="map" resultMap="ContainerCommandResultExt" flushCache="false">
			select
				s.id as id,
	        	s.name as name,
	        	s.code as code,
	        	s.one_level_type as oneLevelType,
	        	s.two_level_type as twoLevelType,
	        	s.is_full as isFull,
	        	s.create_time as createTime,
	        	s.last_modify_time as lastModifyTime,
	        	s.operator_id as operatorId,
	        	s.lifecycle as lifecycle,
	        	s.ou_id as ouId,
				dic.lifecycle as oneLevelTypeLifecycle,
				c2c.lifecycle as twoLevelTypeLifecycle,
				s.status as status
		    <![CDATA[
			    from t_wh_container s
			    left join sys_dictionary dic on dic.dic_value=s.one_level_type AND dic.group_value = 'ONE_LEVEL_TYPE'
			    left join t_wh_container_2nd_category c2c on c2c.id=s.two_level_type
		        where 
		        s.code = #{code} 
		        and s.ou_id = #{ouId}
		    ]]>
		</select>

		 <select id="getContainerByCodeAndType" parameterType="map" resultMap="ContainerCommandResultExt" flushCache="false">
			select
				s.id as id,
	        	s.name as name,
	        	s.code as code,
	        	s.one_level_type as oneLevelType,
	        	s.two_level_type as twoLevelType,
	        	s.is_full as isFull,
	        	s.create_time as createTime,
	        	s.last_modify_time as lastModifyTime,
	        	s.operator_id as operatorId,
	        	s.lifecycle as lifecycle,
	        	s.ou_id as ouId,
				c2c.lifecycle as twoLevelTypeLifecycle,
				sp.quantity as qty,
				s.status as status
		    <![CDATA[
			    from t_wh_container s
			    left join t_wh_container_2nd_category c2c on c2c.id=s.two_level_type
			    left join t_wh_sku_standard_packing sp on s.two_level_type = sp.container_type
		        where 
		        s.code = #{code} 
		        and s.ou_id = #{ouId}
		        and s.two_level_type = #{twoLevelType}
		        and s.lifecycle = #{lifecycle} 
			    and s.status = #{status}
			    and sp.sku_id = #{skuId}
			    and sp.lifecycle = #{lifecycle}
			    and sp.ou_id = #{ouId}
		    ]]>
		</select>

		 <select id="getContainerByCodeAndType1" parameterType="map" resultMap="ContainerCommandResultExt" flushCache="false">
			select
				s.id as id,
	        	s.name as name,
	        	s.code as code,
	        	s.one_level_type as oneLevelType,
	        	s.two_level_type as twoLevelType,
	        	s.is_full as isFull,
	        	s.create_time as createTime,
	        	s.last_modify_time as lastModifyTime,
	        	s.operator_id as operatorId,
	        	s.lifecycle as lifecycle,
	        	s.ou_id as ouId,
				c2c.lifecycle as twoLevelTypeLifecycle,
				s.status as status
		    <![CDATA[
			    from t_wh_container s left join t_wh_container_2nd_category c2c on c2c.id=s.two_level_type 
			    where (
			    select count(1) as num from t_wh_sku_inventory inv where inv.inside_container_id = 
			    (select s.id as id 
				    from t_wh_container s left join t_wh_container_2nd_category c2c on c2c.id=s.two_level_type
				    where s.code = #{code}  
				    and s.ou_id = #{ouId}
				    and s.two_level_type = #{twoLevelType} 
				    and s.lifecycle = 1 
				    and s.status = 1)) = 0 
			    and s.code = #{code} 
			    and s.ou_id = #{ouId} 
			    and s.two_level_type = #{twoLevelType} 
			    and s.lifecycle = 1 
			    and s.status = 1;
		    ]]>
		</select>
		
		<update id="updateContainerStatusByIdAndOuId">
			update
				t_wh_container
			set 
				status = #{status},
				lifecycle = #{lifecycle},
				last_modify_time = now()
			where
				id = #{id}
				and ou_id = #{ouId}
		</update>
		
		<select id="findContainerListByParam" parameterType="map" resultMap="ContainerResultExt" flushCache="false">
			SELECT
				<include refid="containerColumns" />
			FROM
				t_wh_container
			WHERE
				one_level_type = #{oneLevelType}
				AND two_level_type = #{twoLevelType}
				AND lifecycle = #{lifecycle}
				AND ou_id = #{ouId}
				AND status = #{status};
		</select>
		
</mapper>
