<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper
	namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.WhAsnRcvdSnLogDao">
	<resultMap id="WhAsnRcvdSnLogResult"
		type="com.baozun.scm.primservice.whoperation.model.warehouse.WhAsnRcvdSnLog">
	</resultMap>
	<resultMap id="WhAsnRcvdSnLogPaginationResult" type="lark.common.dao.Pagination">
		<collection property="items" javaType="ArrayList"
			resultMap="WhAsnRcvdSnLogResult" />
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="whAsnRcvdSnLogColumns">
	    <![CDATA[
	        	id as id,
	        	asn_rcvd_id as asnRcvdId,
	        	sn as sn,
	        	defect_ware_barcode as defectWareBarcode,
	        	defect_type as defectType,
	        	defect_reasons as defectReasons,
	        	ou_id as ouId
	    ]]>
	</sql>
	<sql id="whAsnRcvdSnLogConditionWhereExt">
		<where>
			<if test="likeEqualsMap != null">
				<foreach collection="likeEqualsMap" index="key" item="value"
					separator="and" open=" and ">
					${key} like CONCAT('%',#{value},'%')
				</foreach>
			</if>
			<if test="equalsMap != null">
				<foreach collection="equalsMap" index="key" item="value"
					separator="and" open=" and ">
					${key} = #{value}
				</foreach>
			</if>
			<if test="notEqualsMap != null">
				<foreach collection="notEqualsMap" index="key" item="value"
					separator="and" open=" and ">
					${key} != #{value}
				</foreach>
			</if>
			<if test="greateMap != null">
				<foreach collection="greateMap" index="key" item="value"
					separator="and" open=" and ">
					${key} &gt; #{value}
				</foreach>
			</if>
			<if test="greateEqualsMap != null">
				<foreach collection="greateEqualsMap" index="key" item="value"
					separator="and" open=" and ">
					${key} &gt;= #{value}
				</foreach>
			</if>
			<if test="lessMap != null">
				<foreach collection="lessMap" index="key" item="value"
					separator="and" open=" and ">
					${key} &lt; #{value}
				</foreach>
			</if>
			<if test="lessEqualsMap != null">
				<foreach collection="lessEqualsMap" index="key" item="value"
					separator="and" open=" and ">
					${key} &lt;= #{value}
				</foreach>
			</if>
			<if test="nullMap != null">
				<foreach collection="nullMap" index="key" item="value"
					separator="and" open=" and ">
					${key} is null
				</foreach>
			</if>
			<if test="notNullMap != null">
				<foreach collection="notNullMap" index="key" item="value"
					separator="and" open=" and ">
					${key} is not null
				</foreach>
			</if>
			<if test="inMap != null">
				<foreach collection="inMap" index="key" item="value"
					separator="and" open=" and (" close=")">
					<foreach collection="value" item="itemin" index="index"
						separator="or">
						${key} = #{itemin}
					</foreach>
				</foreach>
			</if>
			<if test="notInMap != null">
				<foreach collection="notInMap" index="key" item="value"
					separator="and" open=" and (" close=")">
					<foreach collection="value" item="itemin" index="index"
						separator="and">
						${key} != #{itemin}
					</foreach>
				</foreach>
			</if>
		</where>
		<if test="sortBy != null">
			<foreach collection="sortBy" item="item" separator=","
				open=" order by ">
				${item.field} ${item.type}
			</foreach>
		</if>
	</sql>

	<!-- 如果有自增字段 -->

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert"
		parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.WhAsnRcvdSnLog"
		useGeneratedKeys="true" keyProperty="id" flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_wh_asn_rcvd_sn_log (
		        	asn_rcvd_id ,
		        	sn ,
		        	defect_ware_barcode ,
		        	defect_type ,
		        	defect_reasons ,
		        	ou_id 
		        ) VALUES (
		        	#{asnRcvdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{sn,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{defectWareBarcode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{defectType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{defectReasons,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT} 
		        )
		    ]]>

	</insert>

	<update id="update"
		parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.WhAsnRcvdSnLog">
	    <![CDATA[
	        UPDATE t_wh_asn_rcvd_sn_log SET
		        asn_rcvd_id = #{asnRcvdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        sn = #{sn,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        defect_ware_barcode = #{defectWareBarcode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        defect_type = #{defectType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        defect_reasons = #{defectReasons,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        ou_id = #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} 
	        WHERE 
		        id = #{id} 
	    ]]>
	</update>
	<update id="batchUpdate">
		UPDATE t_wh_asn_rcvd_sn_log SET
		<foreach collection="batchUpdateMap" index="key" item="value"
			separator=",">
			${key} = #{value}
		</foreach>
		<include refid="whAsnRcvdSnLogConditionWhereExt" />
	</update>

	<delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_asn_rcvd_sn_log where
		        id = #{id} 
	    ]]>
	</delete>

	<delete id="deleteByIds" parameterType="list">

		delete from t_wh_asn_rcvd_sn_log
		where id in
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>

	</delete>
	<update id="batchDelete">
		delete from t_wh_asn_rcvd_sn_log
		<include refid="whAsnRcvdSnLogConditionWhereExt" />
	</update>

	<select id="findById" parameterType="java.lang.Long" resultMap="WhAsnRcvdSnLogResult"
		flushCache="false">
		select
		<include refid="whAsnRcvdSnLogColumns" />
		    <![CDATA[
			    from t_wh_asn_rcvd_sn_log 
		        where 
		        id = #{id} 
		    ]]>
	</select>
	<select id="getByIds" parameterType="list" resultMap="WhAsnRcvdSnLogResult"
		flushCache="false">
		select
		<include refid="whAsnRcvdSnLogColumns" />
		from t_wh_asn_rcvd_sn_log
		where id in
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>
	<sql id="whAsnRcvdSnLogDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>

			<if test="id!=null">
				and id = #{id}
			</if>

			<if test="asnRcvdId!=null">
				and asn_rcvd_id = #{asnRcvdId}
			</if>


			<if test="sn!=null and sn!=''">
				and sn = #{sn}
			</if>


			<if test="defectWareBarcode!=null and defectWareBarcode!=''">
				and defect_ware_barcode = #{defectWareBarcode}
			</if>


			<if test="defectType!=null and defectType!=''">
				and defect_type = #{defectType}
			</if>


			<if test="defectReasons!=null and defectReasons!=''">
				and defect_reasons = #{defectReasons}
			</if>

			<if test="ouId!=null">
				and ou_id = #{ouId}
			</if>
		</where>
	</sql>


	<select id="getCount" resultType="long">
		select count(*) from
		t_wh_asn_rcvd_sn_log
	</select>
	<select id="findListCountByQueryMap" resultType="long">
		select count(*) from t_wh_asn_rcvd_sn_log
		<include refid="whAsnRcvdSnLogDynamicWhere" />
	</select>

	<select id="findListCountByParam" resultType="long">
		select count(*) from t_wh_asn_rcvd_sn_log
		<include refid="whAsnRcvdSnLogDynamicWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="findListByQueryMapWithPage" resultMap="WhAsnRcvdSnLogResult">
		select
		<include refid="whAsnRcvdSnLogColumns" />
		from t_wh_asn_rcvd_sn_log
		<include refid="whAsnRcvdSnLogDynamicWhere" />

	</select>

	<select id="findListByQueryMap" resultMap="WhAsnRcvdSnLogResult">
		select
		<include refid="whAsnRcvdSnLogColumns" />
		from t_wh_asn_rcvd_sn_log
		<include refid="whAsnRcvdSnLogDynamicWhere" />

	</select>

	<select id="findListByParam" resultMap="WhAsnRcvdSnLogResult">
		select
		<include refid="whAsnRcvdSnLogColumns" />
		from t_wh_asn_rcvd_sn_log
		<include refid="whAsnRcvdSnLogDynamicWhere" />

	</select>

	<select id="query" resultMap="WhAsnRcvdSnLogResult">
		select
		<include refid="whAsnRcvdSnLogColumns" />
		from t_wh_asn_rcvd_sn_log
		<include refid="whAsnRcvdSnLogConditionWhereExt" />
	</select>

	<select id="queryCount" resultType="long">
		select count(*) from t_wh_asn_rcvd_sn_log
		<include refid="whAsnRcvdSnLogConditionWhereExt" />
	</select>



	<select id="findCountByParams" resultType="long">
		select count(1)
		from
		t_wh_asn_rcvd_sn_log
		where
		asn_rcvd_id = #{asnId}
		<include refid="whAsnRcvdSnLogDynamicWhere" />
	</select>

	<select id="getWhAsnRcvdSnLoglistByParams" resultMap="WhAsnRcvdSnLogResult">
		SELECT
		log.sku_name as skuName,
		log.sku_code as skuCode,
		log.container_code containerCode,
		sn.sn as sn,
		sn.defect_ware_barcode as
		defectWareBarcode,
		sn.defect_type as defectType,
		sn.defect_reasons as
		defectReasons
		FROM
		t_wh_asn_rcvd_sn_log sn
		LEFT JOIN t_wh_asn_rcvd_log
		log ON log.asn_id = sn.asn_rcvd_id
		<where>
			<if test="asnId!=null">
				and log.asn_id = #{asnId}
			</if>

			<if test="asnLineId!=null">
				and log.asn_line_id = #{asnLineId}
			</if>

		</where>
	</select>

</mapper>
