<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.WhWorkDao">
	<resultMap id="WhWorkResult" type="com.baozun.scm.primservice.whoperation.model.warehouse.WhWork">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whWorkColumns">
	    <![CDATA[
	        	id as id,
	        	code as code,
	        	status as status,
	        	ou_id as ouId,
	        	work_type as workType,
	        	work_category as workCategory,
	        	is_locked as isLocked,
	        	is_assign_out as isAssignOut,
	        	is_short_picking as isShortPicking,
	        	is_wave_replenish as isWaveReplenish,
	        	is_picking_tobefilled as isPickingTobefilled,
	        	is_multi_operation as isMultiOperation,
	        	work_area as workArea,
	        	work_priority as workPriority,
	        	batch as batch,
	        	assign_out_batch as assignOutBatch,
	        	distribution_mode as distributionMode,
	        	picking_mode as pickingMode,
	        	checking_mode as checkingMode,
	        	start_time as startTime,
	        	finish_time as finishTime,
	        	wave_id as waveId,
	        	wave_code as waveCode,
	        	order_code as orderCode,
	        	location_code as locationCode,
	        	outer_container_code as outerContainerCode,
	        	container_code as containerCode,
	        	create_time as createTime,
	        	last_modify_time as lastModifyTime,
	        	created_id as createdId,
	        	modified_id as modifiedId,
	        	operator_id as operatorId,
	        	lifecycle as lifecycle
	    ]]>
	</sql>
	
		<!-- 如果有自增字段 -->
		
			<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
			<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.WhWork"
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_wh_work (
		        id,
		        	code ,
		        	status ,
		        	ou_id ,
		        	work_type ,
		        	work_category ,
		        	is_locked ,
		        	is_assign_out ,
		        	is_short_picking ,
		        	is_wave_replenish ,
		        	is_picking_tobefilled ,
		        	is_multi_operation ,
		        	work_area ,
		        	work_priority ,
		        	batch ,
		        	assign_out_batch ,
		        	distribution_mode ,
		        	picking_mode ,
		        	checking_mode ,
		        	start_time ,
		        	finish_time ,
		        	wave_id ,
		        	wave_code ,
		        	order_code ,
		        	location_code ,
		        	outer_container_code ,
		        	container_code ,
		        	create_time ,
		        	last_modify_time ,
		        	created_id ,
		        	modified_id ,
		        	operator_id ,
		        	lifecycle 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{workType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{workCategory,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{isLocked,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        	#{isAssignOut,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        	#{isShortPicking,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        	#{isWaveReplenish,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        	#{isPickingTobefilled,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        	#{isMultiOperation,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        	#{workArea,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{workPriority,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{batch,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{assignOutBatch,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{distributionMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{pickingMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{checkingMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{startTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{finishTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{waveId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{waveCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{orderCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{locationCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{outerContainerCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{containerCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{operatorId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} 
		        )
		    ]]>

		</insert>
		
		
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.WhWork">
	    <![CDATA[
	        UPDATE t_wh_work SET
		        code = #{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        status = #{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        ou_id = #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        work_type = #{workType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        work_category = #{workCategory,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        is_locked = #{isLocked,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        is_assign_out = #{isAssignOut,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        is_short_picking = #{isShortPicking,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        is_wave_replenish = #{isWaveReplenish,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        is_picking_tobefilled = #{isPickingTobefilled,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        is_multi_operation = #{isMultiOperation,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        work_area = #{workArea,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        work_priority = #{workPriority,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        batch = #{batch,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        assign_out_batch = #{assignOutBatch,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        distribution_mode = #{distributionMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        picking_mode = #{pickingMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        checking_mode = #{checkingMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        start_time = #{startTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        finish_time = #{finishTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        wave_id = #{waveId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        wave_code = #{waveCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        order_code = #{orderCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        location_code = #{locationCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        outer_container_code = #{outerContainerCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        container_code = #{containerCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        operator_id = #{operatorId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_work where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_work 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
					#{item}
				</foreach>
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="WhWorkResult" flushCache="false">
			select <include refid="whWorkColumns" />
		    <![CDATA[
			    from t_wh_work 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="WhWorkResult" flushCache="false">
			select <include refid="whWorkColumns" />
			    from t_wh_work 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
					#{item}
				</foreach>
		</select>	
	<sql id="whWorkDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
				<if test="id!=null">
					and id = #{id}
				</if>

		       	<if test="code!=null and code!=''">
					and code = #{code}
				</if>
	       
				<if test="status!=null">
					and status = #{status}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>

		       	<if test="workType!=null and workType!=''">
					and work_type = #{workType}
				</if>

		       	<if test="workCategory!=null and workCategory!=''">
					and work_category = #{workCategory}
				</if>
	       
				<if test="isLocked!=null">
					and is_locked = #{isLocked}
				</if>
	       
				<if test="isAssignOut!=null">
					and is_assign_out = #{isAssignOut}
				</if>
	       
				<if test="isShortPicking!=null">
					and is_short_picking = #{isShortPicking}
				</if>
	       
				<if test="isWaveReplenish!=null">
					and is_wave_replenish = #{isWaveReplenish}
				</if>
	       
				<if test="isPickingTobefilled!=null">
					and is_picking_tobefilled = #{isPickingTobefilled}
				</if>
	       
				<if test="isMultiOperation!=null">
					and is_multi_operation = #{isMultiOperation}
				</if>

		       	<if test="workArea!=null and workArea!=''">
					and work_area = #{workArea}
				</if>
	       
				<if test="workPriority!=null">
					and work_priority = #{workPriority}
				</if>

		       	<if test="batch!=null and batch!=''">
					and batch = #{batch}
				</if>

		       	<if test="assignOutBatch!=null and assignOutBatch!=''">
					and assign_out_batch = #{assignOutBatch}
				</if>

		       	<if test="distributionMode!=null and distributionMode!=''">
					and distribution_mode = #{distributionMode}
				</if>

		       	<if test="pickingMode!=null and pickingMode!=''">
					and picking_mode = #{pickingMode}
				</if>

		       	<if test="checkingMode!=null and checkingMode!=''">
					and checking_mode = #{checkingMode}
				</if>
	       
				<if test="startTime!=null">
					and start_time = #{startTime}
				</if>
	       
				<if test="finishTime!=null">
					and finish_time = #{finishTime}
				</if>
	       
				<if test="waveId!=null">
					and wave_id = #{waveId}
				</if>
	       
		       	<if test="waveCode!=null and waveCode!=''">
					and wave_code = #{waveCode}
				</if>
	       
		       	<if test="orderCode!=null and orderCode!=''">
					and order_code = #{orderCode}
				</if>
	       
		       	<if test="locationCode!=null and locationCode!=''">
					and location_code = #{locationCode}
				</if>
	       
		       	<if test="outerContainerCode!=null and outerContainerCode!=''">
					and outer_container_code = #{outerContainerCode}
				</if>
			
		       	<if test="containerCode!=null and containerCode!=''">
					and container_code = #{containerCode}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="createdId!=null">
					and created_id = #{createdId}
				</if>
	       
				<if test="modifiedId!=null">
					and modified_id = #{modifiedId}
				</if>
	       
				<if test="operatorId!=null">
					and operator_id = #{operatorId}
				</if>
	       
				<if test="lifecycle!=null">
					and lifecycle = #{lifecycle}
				</if>
		</where>
	</sql>
	
	<select id="getCount" resultType="long">
        select count(*) from t_wh_work 
    </select>
    
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_work 
		<include refid="whWorkDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_work 
		<include refid="whWorkDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="WhWorkResult">
    	select <include refid="whWorkColumns" />
	    from t_wh_work 
		<include refid="whWorkDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="WhWorkResult">
    	select <include refid="whWorkColumns" />
	    from t_wh_work 
		<include refid="whWorkDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="WhWorkResult">
    	select <include refid="whWorkColumns" />
	    from t_wh_work 
		<include refid="whWorkDynamicWhere"/>
		
    </select>

	
</mapper>
