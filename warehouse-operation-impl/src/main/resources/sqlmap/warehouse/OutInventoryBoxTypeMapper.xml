<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.OutInventoryBoxTypeDao">
    <resultMap id="OutInventoryBoxTypeResult" type="com.baozun.scm.primservice.whoperation.model.warehouse.OutInventoryBoxType">
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="outInventoryBoxTypeColumns">
        <![CDATA[
                id as id,
                sku_id as skuId,
                ou_id as ouId,
                code as code,
                name as name,
                description as description,
                lifecycle as lifecycle,
                length as length,
                width as width,
                high as high,
                weight as weight,
                volume as volume,
                length_ext as lengthExt,
                width_ext as widthExt,
                high_ext as highExt,
                volume_ext as volumeExt,
                weight_ext as weightExt,
                create_time as createTime,
                last_modify_time as lastModifyTime,
                created_id as createdId,
                modified_id as modifiedId
        ]]>
    </sql>

    <!-- 如果有自增字段 -->

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.OutInventoryBoxType"

            flushCache="true">
        <![CDATA[
                INSERT INTO
                t_wh_outboundbox_type (
                id,
                    sku_id ,
                    ou_id ,
                    code ,
                    name ,
                    description ,
                    lifecycle ,
                    length ,
                    width ,
                    high ,
                    volume ,
                    weight ,
                    length_ext,
                    width_ext,
                    high_ext,
                    volume_ext,
                    weight_ext,
                    create_time ,
                    last_modify_time ,
                    created_id ,
                    modified_id 
                ) VALUES (
                #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
                    #{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                    #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                    #{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
                    #{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
                    #{description,javaType=java.lang.String,jdbcType=VARCHAR} ,
                    #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
                    #{length,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                    #{width,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                    #{high,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                    #{volume,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                    #{weight,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                    #{lengthExt,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                    #{widthExt,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                    #{highExt,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                    #{volumeExt,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                    #{weightExt,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                    #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                    #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                    #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                    #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} 
                )
            ]]>

    </insert>


    <update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.OutInventoryBoxType">
        <![CDATA[
            UPDATE t_wh_outboundbox_type SET
                sku_id = #{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                ou_id = #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                code = #{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
                name = #{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
                description = #{description,javaType=java.lang.String,jdbcType=VARCHAR} ,
                lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
                length = #{length,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                width = #{width,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                high = #{high,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                volume = #{volume,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                weight = #{weight,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                length_ext = #{lengthExt,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                width_ext = #{widthExt,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                high_ext = #{highExt,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                volume_ext = #{volumeExt,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                weight_ext = #{weightExt,javaType=java.lang.Double,jdbcType=DOUBLE} ,
                create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} 
            WHERE 
                id = #{id} 
        ]]>
    </update>
    <delete id="delete" parameterType="java.lang.Long">
        <![CDATA[
            delete from t_wh_outboundbox_type where
                id = #{id} 
        ]]>
    </delete>

    <delete id="deleteByIds" parameterType="list">

        delete from t_wh_outboundbox_type
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>

    </delete>

    <select id="findById" parameterType="java.lang.Long" resultMap="OutInventoryBoxTypeResult" flushCache="false">
        select
        <include refid="outInventoryBoxTypeColumns"/>
        <![CDATA[
                from t_wh_outboundbox_type 
                where 
                id = #{id} 
            ]]>
    </select>
    <select id="getByIds" parameterType="list" resultMap="OutInventoryBoxTypeResult" flushCache="false">
        select
        <include refid="outInventoryBoxTypeColumns"/>
        from t_wh_outboundbox_type
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <sql id="outInventoryBoxTypeDynamicWhere">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>

            <if test="id!=null">
                and id = #{id}
            </if>

            <if test="skuId!=null">
                and sku_id = #{skuId}
            </if>

            <if test="ouId!=null">
                and ou_id = #{ouId}
            </if>


            <if test="code!=null and code!=''">
                and code = #{code}
            </if>


            <if test="name!=null and name!=''">
                and name = #{name}
            </if>


            <if test="description!=null and description!=''">
                and description = #{description}
            </if>

            <if test="lifecycle!=null">
                and lifecycle = #{lifecycle}
            </if>

            <if test="length!=null">
                and length = #{length}
            </if>

            <if test="width!=null">
                and width = #{width}
            </if>

            <if test="high!=null">
                and high = #{high}
            </if>


            <if test="volume!=null">
                and volume = #{volume}
            </if>


            <if test="weight!=null">
                and weight = #{weight}
            </if>

            <if test="lengthExt!=null">
                and length_ext = #{lengthExt}
            </if>

            <if test="widthExt!=null">
                and width_ext = #{widthExt}
            </if>

            <if test="highExt!=null">
                and high_ext = #{highExt}
            </if>

            <if test="volumeExt!=null">
                and volume_ext = #{volumeExt}
            </if>

            <if test="weightExt!=null">
                and weight_ext = #{weightExt}
            </if>

            <if test="createTime!=null">
                and create_time = #{createTime}
            </if>

            <if test="lastModifyTime!=null">
                and last_modify_time = #{lastModifyTime}
            </if>

            <if test="createdId!=null">
                and created_id = #{createdId}
            </if>

            <if test="modifiedId!=null">
                and modified_id = #{modifiedId}
            </if>
        </where>
    </sql>


    <select id="getCount" resultType="long">
        select count(*) from t_wh_outboundbox_type
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_outboundbox_type
        <include refid="outInventoryBoxTypeDynamicWhere"/>
    </select>

    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_outboundbox_type
        <include refid="outInventoryBoxTypeDynamicWhere"/>
    </select>

    <!--
        分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
        因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="OutInventoryBoxTypeResult">
        select
        <include refid="outInventoryBoxTypeColumns"/>
        from t_wh_outboundbox_type
        <include refid="outInventoryBoxTypeDynamicWhere"/>

    </select>

    <select id="findListByQueryMap" resultMap="OutInventoryBoxTypeResult">
        select
        <include refid="outInventoryBoxTypeColumns"/>
        from t_wh_outboundbox_type
        <include refid="outInventoryBoxTypeDynamicWhere"/>

    </select>

    <select id="findListByParam" resultMap="OutInventoryBoxTypeResult">
        select
        <include refid="outInventoryBoxTypeColumns"/>
        from t_wh_outboundbox_type
        <include refid="outInventoryBoxTypeDynamicWhere"/>

    </select>


</mapper>
