<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.WhOdoPackageInfoDao">
	<resultMap id="WhOdoPackageInfoResult" type="com.baozun.scm.primservice.whoperation.model.warehouse.WhOdoPackageInfo">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whOdoPackageInfoColumns">
	    <![CDATA[
	        	id as id,
	        	odo_id as odoId,
	        	outboundbox_id as outboundboxId,
	        	outboundbox_code as outboundboxCode,
	        	status as status,
	        	calc_weight as calcWeight,
	        	floats as floats,
	        	actual_weight as actualWeight,
	        	lifecycle as lifecycle,
	        	create_id as createId,
	        	create_time as createTime,
	        	last_modify_time as lastModifyTime,
	        	modified_id as modifiedId,
	        	ou_id as ouId
	    ]]>
	</sql>
	
		<!-- 如果有自增字段 -->
		
			<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
			<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.WhOdoPackageInfo" 
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_wh_odo_package_info (
		        id,
		        	odo_id ,
		        	outboundbox_id ,
		        	outboundbox_code ,
		        	status ,
		        	calc_weight ,
		        	floats ,
		        	actual_weight ,
		        	lifecycle ,
		        	create_id ,
		        	create_time ,
		        	last_modify_time ,
		        	modified_id,
		        	ou_id 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{odoId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{outboundboxId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{outboundboxCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{calcWeight,javaType=Long,jdbcType=DECIMAL} ,
		        	#{floats,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{actualWeight,javaType=Long,jdbcType=DECIMAL} ,
		        	#{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{createId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT}, 
		        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT}
		        )
		    ]]>

		</insert>
		
		
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.WhOdoPackageInfo">
	    <![CDATA[
	        UPDATE t_wh_odo_package_info SET
		        odo_id = #{odoId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        outboundbox_id = #{outboundboxId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        outboundbox_code = #{outboundboxCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        status = #{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        calc_weight = #{calcWeight,javaType=Long,jdbcType=DECIMAL} ,
		        floats = #{floats,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        actual_weight = #{actualWeight,javaType=Long,jdbcType=DECIMAL} ,
		        lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        create_id = #{createId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} 
	        WHERE 
		        id = #{id} and ou_id = #{ouId}
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_odo_package_info where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_odo_package_info 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="WhOdoPackageInfoResult" flushCache="false">
			select <include refid="whOdoPackageInfoColumns" />
		    <![CDATA[
			    from t_wh_odo_package_info 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="WhOdoPackageInfoResult" flushCache="false">
			select <include refid="whOdoPackageInfoColumns" />
			    from t_wh_odo_package_info 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="whOdoPackageInfoDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="odoId!=null">
					and odo_id = #{odoId}
				</if>
	       
				<if test="outboundboxId!=null">
					and outboundbox_id = #{outboundboxId}
				</if>
	       
	       
		       <if test="outboundboxCode!=null and outboundboxCode!=''">
					and outboundbox_code = #{outboundboxCode}
				</if>
	       
				<if test="status!=null">
					and status = #{status}
				</if>
	       
				<if test="calcWeight!=null">
					and calc_weight = #{calcWeight}
				</if>
	       
				<if test="floats!=null">
					and floats = #{floats}
				</if>
	       
				<if test="actualWeight!=null">
					and actual_weight = #{actualWeight}
				</if>
	       
				<if test="lifecycle!=null">
					and lifecycle = #{lifecycle}
				</if>
	       
				<if test="createId!=null">
					and create_id = #{createId}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="modifiedId!=null">
					and modified_id = #{modifiedId}
				</if>

				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_wh_odo_package_info 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_odo_package_info 
		<include refid="whOdoPackageInfoDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_odo_package_info 
		<include refid="whOdoPackageInfoDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="WhOdoPackageInfoResult">
    	select <include refid="whOdoPackageInfoColumns" />
	    from t_wh_odo_package_info 
		<include refid="whOdoPackageInfoDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="WhOdoPackageInfoResult">
    	select <include refid="whOdoPackageInfoColumns" />
	    from t_wh_odo_package_info 
		<include refid="whOdoPackageInfoDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="WhOdoPackageInfoResult">
    	select <include refid="whOdoPackageInfoColumns" />
	    from t_wh_odo_package_info 
		<include refid="whOdoPackageInfoDynamicWhere"/>
		
    </select>

	
</mapper>
