<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.WhSkuLocationDao">
	<resultMap id="WhSkuLocationResult" type="com.baozun.scm.primservice.whoperation.model.warehouse.WhSkuLocation">
	</resultMap>
	<resultMap id="WhSkuLocationPaginationResult" type="lark.common.dao.Pagination">
    	<collection property="items" javaType="ArrayList" resultMap="WhSkuLocationResult"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whSkuLocationColumns">
	    <![CDATA[
	        	id as id,
	        	sku_id as skuId,
	        	location_id as locationId,
	        	lifecycle as lifecycle,
	        	modified_id as modifiedId,
	        	last_modify_time as lastModifyTime,
	        	ou_id as ouId
	    ]]>
	</sql>
	<sql id="whSkuLocationConditionWhereExt">
		<where>
			<if test="likeEqualsMap != null">
				<foreach collection="likeEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} like CONCAT('%',#{value},'%') 
				</foreach> 
			</if> 
			<if test="equalsMap != null"> 
				<foreach collection="equalsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} = #{value} 
				</foreach> 
			</if> 
			<if test="notEqualsMap != null"> 
				<foreach collection="notEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} != #{value} 
				</foreach> 
			</if> 
			<if test="greateMap != null"> 
				<foreach collection="greateMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &gt; #{value} 
				</foreach> 
			</if> 
			<if test="greateEqualsMap != null"> 
				<foreach collection="greateEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &gt;= #{value} 
				</foreach> 
			</if> 
			<if test="lessMap != null"> 
				<foreach collection="lessMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &lt; #{value} 
				</foreach> 
			</if> 
			<if test="lessEqualsMap != null"> 
				<foreach collection="lessEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &lt;= #{value} 
				</foreach> 
			</if> 
			<if test="nullMap != null"> 
				<foreach collection="nullMap" index="key"  item="value" separator="and" open=" and "> 
					${key} is null 
				</foreach> 
			</if> 
			<if test="notNullMap != null"> 
				<foreach collection="notNullMap" index="key"  item="value" separator="and" open=" and "> 
					${key} is not null 
				</foreach> 
			</if> 
			<if test="inMap != null"> 
				<foreach collection="inMap" index="key"  item="value" separator="and" open=" and (" close=")"> 
					<foreach collection="value" item="itemin" index="index" separator="or"> 
						${key} = #{itemin} 
					</foreach> 
				</foreach> 
			</if> 
			<if test="notInMap != null"> 
				<foreach collection="notInMap" index="key"  item="value" separator="and" open=" and (" close=")"> 
					<foreach collection="value" item="itemin" index="index" separator="and"> 
						${key} != #{itemin} 
					</foreach> 
				</foreach> 
			</if> 
		</where>
		<if test="sortBy != null"> 
			<foreach collection="sortBy" item="item" separator=","  open=" order by "> 
				${item.field} ${item.type}
			</foreach> 
		</if>
	</sql>
	
		<!-- 如果有自增字段 -->
		
			<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
			<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.WhSkuLocation" 
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_wh_sku_location (
		        id,
		        	sku_id ,
		        	location_id ,
		        	lifecycle ,
		        	modified_id ,
		        	last_modify_time ,
		        	ou_id
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{locationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT} 
		        )
		    ]]>

		</insert>
		
		
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.WhSkuLocation">
	    <![CDATA[
	        UPDATE t_wh_sku_location SET
		        sku_id = #{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        location_id = #{locationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} 
	        WHERE 
		        id = #{id} 
		        and ou_id=#{ouId}
	    ]]>
		</update>
		<update id="batchUpdate">
	        UPDATE t_wh_sku_location SET
	        	<foreach collection="batchUpdateMap" index="key"  item="value" separator=",">
	        		${key} = #{value}
	        	</foreach>
	        	<include refid="whSkuLocationConditionWhereExt"/>
		</update>
		
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_sku_location where
		        id = #{id} and ou_id=#{ou_id}
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_sku_location 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	    <update id="batchDelete">
	        delete from t_wh_sku_location <include refid="whSkuLocationConditionWhereExt"/>
		</update>
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="WhSkuLocationResult" flushCache="false">
			select <include refid="whSkuLocationColumns" />
		    <![CDATA[
			    from t_wh_sku_location 
		        where 
		        id = #{id} and ou_id=#{ouId}
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="WhSkuLocationResult" flushCache="false">
			select <include refid="whSkuLocationColumns" />
			    from t_wh_sku_location 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="whSkuLocationDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
	       
				<if test="skuId!=null">
					and sku_id = #{skuId}
				</if>
	       
				<if test="locationId!=null">
					and location_id = #{locationId}
				</if>
	       
				<if test="lifecycle!=null">
					and lifecycle = #{lifecycle}
				</if>
	       
				<if test="modifiedId!=null">
					and modified_id = #{modifiedId}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_wh_sku_location 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_sku_location 
		<include refid="whSkuLocationDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_sku_location 
		<include refid="whSkuLocationDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="WhSkuLocationResult">
    	select <include refid="whSkuLocationColumns" />
	    from t_wh_sku_location 
		<include refid="whSkuLocationDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="WhSkuLocationResult">
    	select <include refid="whSkuLocationColumns" />
	    from t_wh_sku_location 
		<include refid="whSkuLocationDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="WhSkuLocationResult">
    	select <include refid="whSkuLocationColumns" />
	    from t_wh_sku_location 
		<include refid="whSkuLocationDynamicWhere"/>
		
    </select>
    
    <select id="query" resultMap="WhSkuLocationResult">
		select <include refid="whSkuLocationColumns" />
	    from t_wh_sku_location  
		<include refid="whSkuLocationConditionWhereExt"/>
    </select>
    
    <select id="queryCount" resultType="long">
		select count(*) from t_wh_sku_location  
		<include refid="whSkuLocationConditionWhereExt"/>
    </select>

	
</mapper>
