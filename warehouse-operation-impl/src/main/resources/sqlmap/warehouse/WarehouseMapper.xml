<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper
	namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.WarehouseDao">
	<resultMap id="WarehouseResult"
		type="com.baozun.scm.primservice.whoperation.model.warehouse.Warehouse">
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="warehouseColumns">
	    <![CDATA[
	        	id as id,
	        	code as code,
	        	name as name,
	        	op_mode as opMode,
	        	manage_mode as manageMode,
	        	pic as pic,
	        	pic_contact as picContact,
	        	phone as phone,
	        	fax as fax,
	        	other_contact1 as otherContact1,
	        	other_contact2 as otherContact2,
	        	other_contact3 as otherContact3,
	        	country_id as countryId,
	        	province_id as provinceId,
	        	city_id as cityId,
	        	address as address,
	        	zip_code as zipCode,
	        	size as size,
	        	size_uom as sizeUom,
	        	rent_price as rentPrice,
	        	rent_price_uom as rentPriceUom,
	        	description as description,
	        	is_mandatorily_reserved as isMandatorilyReserved,
	        	is_po_overcharge as isPoOvercharge,
	        	po_overcharge_proportion as poOverchargeProportion,
	        	is_asn_overcharge as isAsnOvercharge,
	        	asn_overcharge_proportion as asnOverchargeProportion,
	        	is_po_auto_verify as isPoAutoVerify,
	        	is_asn_auto_verify as isAsnAutoVerify,
	        	goods_receipt_mode as goodsReceiptMode,
	        	is_auto_print_bintag as isAutoPrintBintag,
	        	is_auto_generation_cn as isAutoGenerationCn,
	        	is_allow_blocked as isAllowBlocked,
	        	is_sku_needs_scan as isSkuNeedsScan,
	        	inv_attr_mgmt as invAttrMgmt,
	        	is_auto_print_diff as isAutoPrintDiff,
	        	is_hint_quality_testing as isHintQualityTesting,
	        	is_auto_print_goods_receipt as isAutoPrintGoodsReceipt,
	        	is_auto_print_platformtag as isAutoPrintPlatformtag,
	        	sku_mix_number as skuMixNumber,
	        	create_time as createTime,
	        	last_modify_time as lastModifyTime,
	        	operator_id as operatorId,
	        	
	        	is_sortation_container_assign as isSortationContainerAssign,
	        	is_repeatedly_outbound as isRepeatedlyOutbound, 
	        	is_tabb_inv_total as isTabbInvTotal,

				default_length_uom_type as defaultLengthUomType,
	        	default_weight_uom_type as defaultWeightUomType,
	        	default_volume_uom_type as defaultVolumeUomType,
	        	default_area_uom_type as defaultAreaUomType,
				

	        	lifecycle as lifecycle
	    ]]>
	</sql>
	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert"
		parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.Warehouse"
		flushCache="true">
	    <![CDATA[
	        INSERT INTO
	        t_bi_warehouse (
	        	id,
	        	code ,
	        	name ,
	        	op_mode ,
	        	manage_mode ,
	        	pic ,
	        	pic_contact ,
	        	phone ,
	        	fax ,
	        	other_contact1 ,
	        	other_contact2 ,
	        	other_contact3 ,
	        	country_id ,
	        	province_id ,
	        	city_id ,
	        	address ,
	        	zip_code ,
	        	size ,
	        	size_uom ,
	        	rent_price ,
	        	rent_price_uom ,
	        	description ,
	        	is_mandatorily_reserved ,
	        	is_po_overcharge ,
	        	po_overcharge_proportion ,
	        	is_asn_overcharge ,
	        	asn_overcharge_proportion ,
	        	is_po_auto_verify ,
	        	is_asn_auto_verify ,
	        	goods_receipt_mode ,
	        	is_auto_print_bintag ,
	        	is_auto_generation_cn ,
	        	is_allow_blocked ,
	        	is_sku_needs_scan ,
	        	inv_attr_mgmt ,
	        	is_auto_print_diff ,
	        	is_hint_quality_testing ,
	        	is_auto_print_goods_receipt ,
	        	is_auto_print_platformtag ,
	        	sku_mix_number ,
	        	create_time ,
	        	last_modify_time ,
	        	operator_id ,
	        	is_sortation_container_assign,
	        	is_repeatedly_outbound,
	        	is_tabb_inv_total,
	        	
	        	default_length_uom_type,
	        	default_weight_uom_type,
	        	default_volume_uom_type,
	        	default_area_uom_type,
	        	
	        	lifecycle 
	        ) VALUES (
	        	#{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{opMode,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{manageMode,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{pic,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{picContact,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{phone,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{fax,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{otherContact1,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{otherContact2,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{otherContact3,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{countryId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{provinceId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{cityId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{address,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{zipCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{size,javaType=Double,jdbcType=DECIMAL} ,
	        	#{sizeUom,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{rentPrice,javaType=Double,jdbcType=DECIMAL} ,
	        	#{rentPriceUom,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{description,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{isMandatorilyReserved,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{isPoOvercharge,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{poOverchargeProportion,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{isAsnOvercharge,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{asnOverchargeProportion,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{isPoAutoVerify,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{isAsnAutoVerify,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{goodsReceiptMode,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{isAutoPrintBintag,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{isAutoGenerationCn,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{isAllowBlocked,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{isSkuNeedsScan,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{invAttrMgmt,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{isAutoPrintDiff,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{isHintQualityTesting,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{isAutoPrintGoodsReceipt,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{isAutoPrintPlatformtag,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{skuMixNumber,javaType=java.lang.Integer,jdbcType=INTEGER} ,
        		#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{operatorId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	
	        	#{isSortationContainerAssign,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{isRepeatedlyOutbound,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{isTabbInvTotal,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	
	        	
	        	#{defaultLengthUomType,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        #{defaultWeightUomType,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        #{defaultVolumeUomType,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        #{defaultAreaUomType,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	
	        	#{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} 
	       
	        )
	    ]]>

	</insert>

	<update id="update"
		parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.Warehouse">
	    <![CDATA[
		        UPDATE t_bi_warehouse SET
			        code = #{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        name = #{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        op_mode = #{opMode,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        manage_mode = #{manageMode,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        pic = #{pic,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        pic_contact = #{picContact,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        phone = #{phone,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        fax = #{fax,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        other_contact1 = #{otherContact1,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        other_contact2 = #{otherContact2,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        other_contact3 = #{otherContact3,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        country_id = #{countryId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        province_id = #{provinceId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        city_id = #{cityId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        address = #{address,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        zip_code = #{zipCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        size = #{size,javaType=Double,jdbcType=DECIMAL} ,
			        size_uom = #{sizeUom,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        rent_price = #{rentPrice,javaType=Double,jdbcType=DECIMAL} ,
			        rent_price_uom = #{rentPriceUom,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        description = #{description,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        is_mandatorily_reserved = #{isMandatorilyReserved,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        is_po_overcharge = #{isPoOvercharge,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        po_overcharge_proportion = #{poOverchargeProportion,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        is_asn_overcharge = #{isAsnOvercharge,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        asn_overcharge_proportion = #{asnOverchargeProportion,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        is_po_auto_verify = #{isPoAutoVerify,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        is_asn_auto_verify = #{isAsnAutoVerify,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        goods_receipt_mode = #{goodsReceiptMode,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        is_auto_print_bintag = #{isAutoPrintBintag,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        is_auto_generation_cn = #{isAutoGenerationCn,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        is_allow_blocked = #{isAllowBlocked,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        is_sku_needs_scan = #{isSkuNeedsScan,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        inv_attr_mgmt = #{invAttrMgmt,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        is_auto_print_diff = #{isAutoPrintDiff,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        is_hint_quality_testing = #{isHintQualityTesting,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        is_auto_print_goods_receipt = #{isAutoPrintGoodsReceipt,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        is_auto_print_platformtag = #{isAutoPrintPlatformtag,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        sku_mix_number = #{skuMixNumber,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        operator_id = #{operatorId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			      
			        is_sortation_container_assign = #{isSortationContainerAssign,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        is_repeatedly_outbound = #{isRepeatedlyOutbound,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        is_tabb_inv_total = #{isTabbInvTotal,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        
			        
			        default_length_uom_type = #{defaultLengthUomType,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	default_weight_uom_type = #{defaultWeightUomType,javaType=java.lang.Long,jdbcType=BIGINT} ,
		       		default_volume_uom_type = #{defaultVolumeUomType,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	default_area_uom_type = #{defaultAreaUomType,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        
			        lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} 
	        WHERE 
		        id = #{id} 
	    ]]>
	</update>
	<delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_bi_warehouse where
		        id = #{id} 
	    ]]>
	</delete>

	<delete id="deleteByIds" parameterType="list">

		delete from t_bi_warehouse
		where id in
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>

	</delete>

	<select id="findById" parameterType="java.lang.Long" resultMap="WarehouseResult"
		flushCache="false">
		select
		<include refid="warehouseColumns" />
		    <![CDATA[
			    from t_bi_warehouse 
		        where 
		        id = #{id} 
		    ]]>
	</select>
	<select id="getByIds" parameterType="list" resultMap="WarehouseResult"
		flushCache="false">
		select
		<include refid="warehouseColumns" />
		from t_bi_warehouse
		where id in
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>
	<sql id="warehouseDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>

			<if test="id!=null">
				and id = #{id}
			</if>


			<if test="code!=null and code!=''">
				and code = #{code}
			</if>


			<if test="name!=null and name!=''">
				and name = #{name}
			</if>

			<if test="opMode!=null">
				and op_mode = #{opMode}
			</if>

			<if test="manageMode!=null">
				and manage_mode = #{manageMode}
			</if>


			<if test="pic!=null and pic!=''">
				and pic = #{pic}
			</if>


			<if test="picContact!=null and picContact!=''">
				and pic_contact = #{picContact}
			</if>


			<if test="phone!=null and phone!=''">
				and phone = #{phone}
			</if>


			<if test="fax!=null and fax!=''">
				and fax = #{fax}
			</if>


			<if test="otherContact1!=null and otherContact1!=''">
				and other_contact1 = #{otherContact1}
			</if>


			<if test="otherContact2!=null and otherContact2!=''">
				and other_contact2 = #{otherContact2}
			</if>


			<if test="otherContact3!=null and otherContact3!=''">
				and other_contact3 = #{otherContact3}
			</if>

			<if test="countryId!=null">
				and country_id = #{countryId}
			</if>

			<if test="provinceId!=null">
				and province_id = #{provinceId}
			</if>

			<if test="cityId!=null">
				and city_id = #{cityId}
			</if>


			<if test="address!=null and address!=''">
				and address = #{address}
			</if>


			<if test="zipCode!=null and zipCode!=''">
				and zip_code = #{zipCode}
			</if>

			<if test="size!=null">
				and size = #{size}
			</if>


			<if test="sizeUom!=null and sizeUom!=''">
				and size_uom = #{sizeUom}
			</if>

			<if test="rentPrice!=null">
				and rent_price = #{rentPrice}
			</if>


			<if test="rentPriceUom!=null and rentPriceUom!=''">
				and rent_price_uom = #{rentPriceUom}
			</if>


			<if test="description!=null and description!=''">
				and description = #{description}
			</if>

			<if test="createTime!=null">
				and create_time = #{createTime}
			</if>

			<if test="lastModifyTime!=null">
				and last_modify_time = #{lastModifyTime}
			</if>

			<if test="operatorId!=null">
				and operator_id = #{operatorId}
			</if>
			
			<if test="isSortationContainerAssign!=null">
				and is_sortation_container_assign = #{isSortationContainerAssign}
			</if>

			<if test="isRepeatedlyOutbound!=null">
				and is_repeatedly_outbound = #{isRepeatedlyOutbound}
			</if>

			<if test="isTabbInvTotal!=null">
				and is_tabb_inv_total = #{isTabbInvTotal}
			</if>
			
			
			<if test="defaultLengthUomType!=null">
					and default_length_uom_type = #{defaultLengthUomType}
			</if>
	       
			<if test="defaultWeightUomType!=null">
					and default_weight_uom_type = #{defaultWeightUomType}
			</if>
	       
			<if test="defaultVolumeUomType!=null">
					and default_volume_uom_type = #{defaultVolumeUomType}
			</if>
	       
			<if test="defaultAreaUomType!=null">
					and default_area_uom_type = #{defaultAreaUomType}
			</if>
			
			
			
			
			<if test="lifecycle!=null">
				and lifecycle = #{lifecycle}
			</if>
		</where>
	</sql>


	<select id="getCount" resultType="long">
		select count(*) from t_bi_warehouse
	</select>
	<select id="findListCountByQueryMap" resultType="long">
		select count(*) from t_bi_warehouse
		<include refid="warehouseDynamicWhere" />
	</select>

	<select id="findListCountByParam" resultType="long">
		select count(*) from t_bi_warehouse
		<include refid="warehouseDynamicWhere" />
	</select>

	<!-- 分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页 因为分页查询将传 offset,pageSize,lastRows 
		三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现 -->
	<select id="findListByQueryMapWithPage" resultMap="WarehouseResult">
		select
		<include refid="warehouseColumns" />
		from t_bi_warehouse
		<include refid="warehouseDynamicWhere" />

	</select>

	<select id="findListByQueryMap" resultMap="WarehouseResult">
		select
		<include refid="warehouseColumns" />
		from t_bi_warehouse
		<include refid="warehouseDynamicWhere" />
	</select>

	<select id="findListByParam" resultMap="WarehouseResult">
		select
		<include refid="warehouseColumns" />
		from t_bi_warehouse
		<include refid="warehouseDynamicWhere" />

	</select>


</mapper>
