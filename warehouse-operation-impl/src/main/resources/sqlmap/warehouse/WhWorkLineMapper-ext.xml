<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.WhWorkLineDao">
	<resultMap id="WhWorkLineResultExt" type="com.baozun.scm.primservice.whoperation.model.warehouse.WhWorkLine">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whWorkLineColumnsExt">
	    <![CDATA[
	        	id as id,
	        	line_code as lineCode,
	        	work_id as workId,
	        	ou_id as ouId,
	        	start_time as startTime,
	        	finish_time as finishTime,
	        	sku_id as skuId,
	        	qty as qty,
	        	complete_qty as completeQty,
	        	cancel_qty as cancelQty,
	        	inv_status as invStatus,
	        	inv_type as invType,
	        	batch_number as batchNumber,
	        	mfg_date as mfgDate,
	        	exp_date as expDate,
	        	min_exp_date as minExpDate,
	        	max_exp_date as maxExpDate,
	        	country_of_origin as countryOfOrigin,
	        	inv_attr1 as invAttr1,
	        	inv_attr2 as invAttr2,
	        	inv_attr3 as invAttr3,
	        	inv_attr4 as invAttr4,
	        	inv_attr5 as invAttr5,
	        	uuid as uuid,
	        	from_location_id as fromLocationId,
	        	from_outer_container_id as fromOuterContainerId,
	        	from_inside_container_id as fromInsideContainerId,
	        	use_outboundbox_id as useOutboundboxId,
	        	use_outboundbox_code as useOutboundboxCode,
	        	use_container_id as useContainerId,
	        	use_outer_container_id as useOuterContainerId,
	        	use_container_lattice_no as useContainerLatticeNo,
	        	to_location_id as toLocationId,
	        	to_outer_container_id as toOuterContainerId,
	        	to_inside_container_id as toInsideContainerId,
	        	is_whole_case as isWholeCase,
	        	odo_id as odoId,
	        	odo_line_id as odoLineId,
	        	replenishment_code as replenishmentCode,
	        	inv_move_code as invMoveCode,
	        	create_time as createTime,
	        	last_modify_time as lastModifyTime,
	        	operator_id as operatorId
	    ]]>
	</sql>
	
	<sql id="whWorkLineDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
		
				<if test="id!=null">
					and id = #{id}
				</if>
	       
		       	<if test="lineCode!=null and lineCode!=''">
					and line_code = #{lineCode}
				</if>
	       
				<if test="workId!=null">
					and work_id = #{workId}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
	       
				<if test="startTime!=null">
					and start_time = #{startTime}
				</if>
	       
				<if test="finishTime!=null">
					and finish_time = #{finishTime}
				</if>
	       
				<if test="skuId!=null">
					and sku_id = #{skuId}
				</if>
	       
				<if test="qty!=null">
					and qty = #{qty}
				</if>
	       
				<if test="completeQty!=null">
					and complete_qty = #{completeQty}
				</if>
	       
				<if test="cancelQty!=null">
					and cancel_qty = #{cancelQty}
				</if>
	       
				<if test="invStatus!=null">
					and inv_status = #{invStatus}
				</if>
	       
	       
		       <if test="invType!=null and invType!=''">
					and inv_type = #{invType}
				</if>
	       
	       
		       <if test="batchNumber!=null and batchNumber!=''">
					and batch_number = #{batchNumber}
				</if>
	       
				<if test="mfgDate!=null">
					and mfg_date = #{mfgDate}
				</if>
	       
				<if test="expDate!=null">
					and exp_date = #{expDate}
				</if>
	       
				<if test="minExpDate!=null">
					and min_exp_date = #{minExpDate}
				</if>
	       
				<if test="maxExpDate!=null">
					and max_exp_date = #{maxExpDate}
				</if>
	       
	       
		       <if test="countryOfOrigin!=null and countryOfOrigin!=''">
					and country_of_origin = #{countryOfOrigin}
				</if>
	       
	       
		       <if test="invAttr1!=null and invAttr1!=''">
					and inv_attr1 = #{invAttr1}
				</if>
	       
	       
		       <if test="invAttr2!=null and invAttr2!=''">
					and inv_attr2 = #{invAttr2}
				</if>
	       
	       
		       <if test="invAttr3!=null and invAttr3!=''">
					and inv_attr3 = #{invAttr3}
				</if>
	       
	       
		       <if test="invAttr4!=null and invAttr4!=''">
					and inv_attr4 = #{invAttr4}
				</if>
	       
	       
		       	<if test="invAttr5!=null and invAttr5!=''">
					and inv_attr5 = #{invAttr5}
				</if>
				
				<if test="uuid!=null and uuid!=''">
					and uuid = #{uuid}
				</if>
	       
				<if test="fromLocationId!=null">
					and from_location_id = #{fromLocationId}
				</if>
	       
				<if test="fromOuterContainerId!=null">
					and from_outer_container_id = #{fromOuterContainerId}
				</if>
	       
				<if test="fromInsideContainerId!=null">
					and from_inside_container_id = #{fromInsideContainerId}
				</if>
	       
				<if test="useOutboundboxId!=null">
					and use_outboundbox_id = #{useOutboundboxId}
				</if>
	       
	       
		       <if test="useOutboundboxCode!=null and useOutboundboxCode!=''">
					and use_outboundbox_code = #{useOutboundboxCode}
				</if>
	       
				<if test="useContainerId!=null">
					and use_container_id = #{useContainerId}
				</if>
	       
				<if test="useOuterContainerId!=null">
					and use_outer_container_id = #{useOuterContainerId}
				</if>
	       
				<if test="useContainerLatticeNo!=null">
					and use_container_lattice_no = #{useContainerLatticeNo}
				</if>
	       
				<if test="toLocationId!=null">
					and to_location_id = #{toLocationId}
				</if>
	       
				<if test="toOuterContainerId!=null">
					and to_outer_container_id = #{toOuterContainerId}
				</if>
	       
				<if test="toInsideContainerId!=null">
					and to_inside_container_id = #{toInsideContainerId}
				</if>
	       
	       		<if test="isWholeCase!=null">
					and is_whole_case = #{isWholeCase}
				</if>
	       	
	       		<if test="odoId!=null">
					and odo_id = #{odoId}
				</if>
	       
				<if test="odoLineId!=null">
					and odo_line_id = #{odoLineId}
				</if>
				
				<if test="replenishmentCode!=null and replenishmentCode!=''">
					and replenishment_code = #{replenishmentCode}
				</if>
				
				<if test="invMoveCode!=null and invMoveCode!=''">
					and inv_move_code = #{invMoveCode}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="operatorId!=null">
					and operator_id = #{operatorId}
				</if>
		</where>
	</sql>
	

		<update id="updateByVersion" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.WhWorkLine">
		    <![CDATA[
		        UPDATE t_wh_work_line SET
			        line_code = #{lineCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        work_id = #{workId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        start_time = #{startTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        finish_time = #{finishTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        sku_id = #{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        qty = #{qty,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			        complete_qty = #{completeQty,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			        cancel_qty = #{cancelQty,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			        inv_status = #{invStatus,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        inv_type = #{invType,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        batch_number = #{batchNumber,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        mfg_date = #{mfgDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        exp_date = #{expDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        min_exp_date = #{minExpDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        max_exp_date = #{maxExpDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        country_of_origin = #{countryOfOrigin,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr1 = #{invAttr1,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr2 = #{invAttr2,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr3 = #{invAttr3,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr4 = #{invAttr4,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr5 = #{invAttr5,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        uuid = #{uuid,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        from_location_id = #{fromLocationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        from_outer_container_id = #{fromOuterContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        from_inside_container_id = #{fromInsideContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        use_outboundbox_id = #{useOutboundboxId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        use_outboundbox_code = #{useOutboundboxCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        use_container_id = #{useContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        use_outer_container_id = #{useOuterContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        use_container_lattice_no = #{useContainerLatticeNo,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        to_location_id = #{toLocationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        to_outer_container_id = #{toOuterContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        to_inside_container_id = #{toInsideContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        is_whole_case = #{isWholeCase,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        odo_id = #{odoId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        odo_line_id = #{odoLineId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        replenishment_code = #{replenishmentCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_move_code = #{invMoveCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        last_modify_time =now() ,
			        operator_id = #{operatorId,javaType=java.lang.Long,jdbcType=BIGINT} 
		        WHERE 
			        id = #{id}  and ou_id=#{ouId}
			        
			        and last_modify_time	=  #{lastModifyTime}    
		    ]]>
		</update>
	
	<resultMap id="WhWorkLineCommandResultExt" type="com.baozun.scm.primservice.whoperation.command.warehouse.WhWorkLineCommand">
	</resultMap>
	
	<select id="findWorkLineByWorkId" resultMap="WhWorkLineCommandResultExt">
    	select 
    		<include refid="whWorkLineColumnsExt" />
	    from 
	    	t_wh_work_line
		<where> 
				ou_id = #{ouId}
			<if test="workId!=null">
				and work_id = #{workId}
			</if>
		</where>
    </select>

	<select id="findWorkByLocationId" resultMap="WhWorkLineCommandResultExt">
    	select 
    		<include refid="whWorkLineColumnsExt" />
	    from 
	    	t_wh_work_line
		<where> 
			ou_id = #{ouId}
			<if test="locationId!=null">
				and from_location_id = #{locationId}
			</if>
		</where>
    </select>

    <select id="getTotalQtyByReplenishmentCode" resultType="Double">
		select
			sum(line.qty)
		from
			t_wh_work_line line,
			t_wh_work work
		<where>
			work.id = line.work_id
			<if test="workCategory!=null and workCategory!=''">
				and work.work_category = #{workCategory} 
			</if>
			<if test="replenishmentCode!=null and replenishmentCode!=''">
				and line.replenishment_code = #{replenishmentCode} 
			</if>
			<if test="ouId!=null and ouId!=''">
				and line.ou_id = #{ouId} 
			</if>
		</where>
	</select>


<select id="findWorkLineByLocationId" resultMap="WhWorkLineCommandResultExt">
    	select 
    		    line.id as id,
	        	line.line_code as lineCode,
	        	line.work_id as workId,
	        	line.ou_id as ouId,
	        	line.start_time as startTime,
	        	line.finish_time as finishTime,
	        	line.sku_id as skuId,
	        	line.qty as qty,
	        	line.complete_qty as completeQty,
	        	line.cancel_qty as cancelQty,
	        	line.inv_status as invStatus,
	        	line.inv_type as invType,
	        	line.batch_number as batchNumber,
	        	line.mfg_date as mfgDate,
	        	line.exp_date as expDate,
	        	line.min_exp_date as minExpDate,
	        	line.max_exp_date as maxExpDate,
	        	line.country_of_origin as countryOfOrigin,
	        	line.inv_attr1 as invAttr1,
	        	line.inv_attr2 as invAttr2,
	        	line.inv_attr3 as invAttr3,
	        	line.inv_attr4 as invAttr4,
	        	line.inv_attr5 as invAttr5,
	        	line.uuid as uuid,
	        	line.from_location_id as fromLocationId,
	        	line.from_outer_container_id as fromOuterContainerId,
	        	line.from_inside_container_id as fromInsideContainerId,
	        	line.use_outboundbox_id as useOutboundboxId,
	        	line.use_outboundbox_code as useOutboundboxCode,
	        	line.use_container_id as useContainerId,
	        	line.use_outer_container_id as useOuterContainerId,
	        	line.use_container_lattice_no as useContainerLatticeNo,
	        	line.to_location_id as toLocationId,
	        	line.to_outer_container_id as toOuterContainerId,
	        	line.to_inside_container_id as toInsideContainerId,
	        	line.is_whole_case as isWholeCase,
	        	line.odo_id as odoId,
	        	line.odo_line_id as odoLineId,
	        	line.replenishment_code as replenishmentCode,
	        	line.inv_move_code as invMoveCode,
	        	line.create_time as createTime,
	        	line.last_modify_time as lastModifyTime,
	        	line.operator_id as operatorId
	    from 
	    	t_wh_work_line line
	    	left join t_wh_work work on work.id = line.work_id 
		where
			line.ou_id = #{ouId}
			and work.work_category="PICKING"
			and line.replenishment_code =#{replenishmentCode}
			and (WORK.STATUS = 1 or WORK.STATUS = 9)
			and line.from_outer_container_id is null
	        and line.from_inside_container_id is null
			<if test="locationId!=null">
				and line.from_location_id = #{locationId}
			</if>
    </select>
    
	<select id="findWorkLineByWorkIdOuId" resultMap="WhWorkLineResultExt">
    	select 
    		<include refid="whWorkLineColumns" />
	    from 
	    	t_wh_work_line
		<where> 
			ou_id = #{ouId} and work_id=#{workId}
		</where>
    </select>
    
   	<delete id="deleteByIdExt" parameterType="java.lang.Long">
	        delete from t_wh_work_line  where
		        id = #{id} and ou_id=#{ouId}
	</delete> 
	
	<select id="findWorkLineByToLocationId" resultMap="WhWorkLineCommandResultExt">
		SELECT
			line.id AS id,
			line.lineCode AS lineCode,
			line.workId AS workId,
			line.ouId AS ouId,
			line.startTime AS startTime,
			line.finishTime AS finishTime,
			line.skuId AS skuId,
			CASE
			WHEN line.qty - line.operationQty IS NULL THEN
				0
			ELSE
				line.qty - line.operationQty
			END AS qty,
			 line.completeQty AS completeQty,
			 line.cancelQty AS cancelQty,
			 line.invStatus AS invStatus,
			 line.invType AS invType,
			 line.batchNumber AS batchNumber,
			 line.mfgDate AS mfgDate,
			 line.expDate AS expDate,
			 line.minExpDate AS minExpDate,
			 line.maxExpDate AS maxExpDate,
			 line.countryOfOrigin AS countryOfOrigin,
			 line.invAttr1 AS invAttr1,
			 line.invAttr2 AS invAttr2,
			 line.invAttr3 AS invAttr3,
			 line.invAttr4 AS invAttr4,
			 line.invAttr5 AS invAttr5,
			 line.uuid AS uuid,
			 line.fromLocationId AS fromLocationId,
			 line.fromOuterContainerId AS fromOuterContainerId,
			 line.fromInsideContainerId AS fromInsideContainerId,
			 line.useOutboundboxId AS useOutboundboxId,
			 line.useOutboundboxCode AS useOutboundboxCode,
			 line.useContainerId AS useContainerId,
			 line.useOuterContainerId AS useOuterContainerId,
			 line.useContainerLatticeNo AS useContainerLatticeNo,
			 line.toLocationId AS toLocationId,
			 line.toOuterContainerId AS toOuterContainerId,
			 line.toInsideContainerId AS toInsideContainerId,
			 line.isWholeCase AS isWholeCase,
			 line.odoId AS odoId,
			 line.odoLineId AS odoLineId,
			 line.replenishmentCode AS replenishmentCode,
			 line.invMoveCode AS invMoveCode,
			 line.createTime AS createTime,
			 line.lastModifyTime AS lastModifyTime,
			 line.operatorId AS operatorId
		FROM
			(
				SELECT
					line.id AS id,
					line.line_code AS lineCode,
					line.work_id AS workId,
					line.ou_id AS ouId,
					line.start_time AS startTime,
					line.finish_time AS finishTime,
					line.sku_id AS skuId,
					line.qty AS qty,
					line.complete_qty AS completeQty,
					line.cancel_qty AS cancelQty,
					line.inv_status AS invStatus,
					line.inv_type AS invType,
					line.batch_number AS batchNumber,
					line.mfg_date AS mfgDate,
					line.exp_date AS expDate,
					line.min_exp_date AS minExpDate,
					line.max_exp_date AS maxExpDate,
					line.country_of_origin AS countryOfOrigin,
					line.inv_attr1 AS invAttr1,
					line.inv_attr2 AS invAttr2,
					line.inv_attr3 AS invAttr3,
					line.inv_attr4 AS invAttr4,
					line.inv_attr5 AS invAttr5,
					line.uuid AS uuid,
					line.from_location_id AS fromLocationId,
					line.from_outer_container_id AS fromOuterContainerId,
					line.from_inside_container_id AS fromInsideContainerId,
					line.use_outboundbox_id AS useOutboundboxId,
					line.use_outboundbox_code AS useOutboundboxCode,
					line.use_container_id AS useContainerId,
					line.use_outer_container_id AS useOuterContainerId,
					line.use_container_lattice_no AS useContainerLatticeNo,
					line.to_location_id AS toLocationId,
					line.to_outer_container_id AS toOuterContainerId,
					line.to_inside_container_id AS toInsideContainerId,
					line.is_whole_case AS isWholeCase,
					line.odo_id AS odoId,
					line.odo_line_id AS odoLineId,
					line.replenishment_code AS replenishmentCode,
					line.inv_move_code AS invMoveCode,
					line.create_time AS createTime,
					line.last_modify_time AS lastModifyTime,
					line.operator_id AS operatorId,
					operation.id AS operationId,
					CASE
					WHEN SUM(operation.qty) IS NULL THEN
						0
					ELSE
						SUM(operation.qty)
					END AS operationQty
				FROM
					t_wh_work_line line
				LEFT JOIN t_wh_operation_line operation ON line.id = operation.work_line_id
				WHERE
					line.ou_id = #{ouId} 
					<if test="toLocationId!=null">
						and line.to_location_id=#{toLocationId}
					</if>
				GROUP BY
					line.id
				HAVING
					operation.id IS NULL
				OR line.qty > SUM(operation.qty)
			) line
    </select>
    
    <select id="findWorkLineCount" resultType="java.lang.Integer">
    	select 
    		sum(qty)
	    from 
	    	t_wh_work_line
	    where
			ou_id = #{ouId} and work_id=#{workId}
    </select>
</mapper>
