<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.inventory.WhSkuInventoryAllocatedDao">
	<resultMap id="WhSkuInventoryAllocatedResultExt" type="com.baozun.scm.primservice.whoperation.model.warehouse.inventory.WhSkuInventoryAllocated">
	</resultMap>
	<resultMap id="WhSkuInventoryAllocatedCommandResultExt" type="com.baozun.scm.primservice.whoperation.command.warehouse.inventory.WhSkuInventoryAllocatedCommand">
	</resultMap>
	
	<resultMap id="WhSkuInventoryAllocatedCommandSnResultExt" type="com.baozun.scm.primservice.whoperation.command.warehouse.inventory.WhSkuInventoryAllocatedCommand">
		<result property="id" column="alloctedId"/>
		<result property="skuId" column="skuId"/>
		<result property="locationId" column="locationId"/>
		<result property="outerContainerId" column="outerContainerId"/>
		<result property="insideContainerId" column="insideContainerId"/>
		<result property="customerId" column="customerId"/>
		<result property="storeId" column="storeId"/>
		<result property="occupationCode" column="invOccupationCode"/>
		<result property="occupationLineId" column="invOccupationLineId"/>
		<result property="replenishmentCode" column="invReplenishmentCode"/>
		<result property="qty" column="qty"/>
		<result property="invStatus" column="invStatus"/>
		<result property="invType" column="invType"/>
		<result property="batchNumber" column="batchNumber"/>
		<result property="mfgDate" column="mfgDate"/>
		<result property="expDate" column="expDate"/>
		<result property="countryOfOrigin" column="countryOfOrigin"/>
		<result property="invAttr1" column="invAttr1"/>
		<result property="invAttr2" column="invAttr2"/>
		<result property="invAttr3" column="invAttr3"/>
		<result property="invAttr4" column="invAttr4"/>
		<result property="invAttr5" column="invAttr5"/>
		<result property="uuid" column="alloctedUuid"/>
		<result property="ouId" column="alloctedOuId"/>
		<result property="lastModifyTime" column="lastModifyTime"/>
		<result property="replenishmentRuleId" column="replenishmentRuleId"/>
		<result property="occupationCodeSource" column="occupationCodeSource"/>
		<collection property="whSkuInventorySnCommandList"
			ofType="com.baozun.scm.primservice.whoperation.command.warehouse.inventory.WhSkuInventorySnCommand">
			<id property="id" column="snId"/>
			<result property="sn" column="snSn" />
			<result property="occupationCode" column="snOccupationCode" />
			<result property="defectWareBarcode" column="snDefectWareBarcode" />
			<result property="defectSource" column="snDefectSource" />
			<result property="defectTypeId" column="snDefectTypeId" />
			<result property="defectReasonsId" column="snDefectReasonsId" />
			<result property="replenishmentCode" column="snReplenishmentCode" />
			<result property="status" column="snStatus" />
			<result property="invAttr" column="snInvAttr" />
			<result property="uuid" column="snUuid" />
			<result property="ouId" column="snOuId" />
			<result property="sysUuid" column="snSysUuid" />
		</collection>
	</resultMap>	
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whSkuInventoryAllocatedColumnsExt">
	    <![CDATA[
	        	id as id,
	        	sku_id as skuId,
	        	location_id as locationId,
	        	outer_container_id as outerContainerId,
	        	inside_container_id as insideContainerId,
	        	customer_id as customerId,
	        	store_id as storeId,
	        	occupation_code as occupationCode,
	        	occupation_line_id as occupationLineId,
	        	replenishment_code as replenishmentCode,
	        	qty as qty,
	        	inv_status as invStatus,
	        	inv_type as invType,
	        	batch_number as batchNumber,
	        	mfg_date as mfgDate,
	        	exp_date as expDate,
	        	country_of_origin as countryOfOrigin,
	        	inv_attr1 as invAttr1,
	        	inv_attr2 as invAttr2,
	        	inv_attr3 as invAttr3,
	        	inv_attr4 as invAttr4,
	        	inv_attr5 as invAttr5,
	        	uuid as uuid,
	        	ou_id as ouId,
	        	last_modify_time as lastModifyTime,
	        	occupation_code_source as occupationCodeSource,
	        	replenishment_rule_id as replenishmentRuleId
	    ]]>
	</sql>
	
	<sql id="whSkuInventoryAllocatedDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="skuId!=null">
					and sku_id = #{skuId}
				</if>
	       
				<if test="locationId!=null">
					and location_id = #{locationId}
				</if>
	       
				<if test="outerContainerId!=null">
					and outer_container_id = #{outerContainerId}
				</if>
	       
				<if test="insideContainerId!=null">
					and inside_container_id = #{insideContainerId}
				</if>
	       
				<if test="customerId!=null">
					and customer_id = #{customerId}
				</if>
	       
				<if test="storeId!=null">
					and store_id = #{storeId}
				</if>
	       
	       
		       <if test="occupationCode!=null and occupationCode!=''">
					and occupation_code = #{occupationCode}
				</if>
	       
				<if test="occupationLineId!=null">
					and occupation_line_id = #{occupationLineId}
				</if>
	       
	       
		       <if test="replenishmentCode!=null and replenishmentCode!=''">
					and replenishment_code = #{replenishmentCode}
				</if>
	       
				<if test="qty!=null">
					and qty = #{qty}
				</if>
	       
				<if test="invStatus!=null">
					and inv_status = #{invStatus}
				</if>
	       
	       
		       <if test="invType!=null and invType!=''">
					and inv_type = #{invType}
				</if>
	       
	       
		       <if test="batchNumber!=null and batchNumber!=''">
					and batch_number = #{batchNumber}
				</if>
	       
				<if test="mfgDate!=null">
					and mfg_date = #{mfgDate}
				</if>
	       
				<if test="expDate!=null">
					and exp_date = #{expDate}
				</if>
	       
	       
		       <if test="countryOfOrigin!=null and countryOfOrigin!=''">
					and country_of_origin = #{countryOfOrigin}
				</if>
	       
	       
		       <if test="invAttr1!=null and invAttr1!=''">
					and inv_attr1 = #{invAttr1}
				</if>
	       
	       
		       <if test="invAttr2!=null and invAttr2!=''">
					and inv_attr2 = #{invAttr2}
				</if>
	       
	       
		       <if test="invAttr3!=null and invAttr3!=''">
					and inv_attr3 = #{invAttr3}
				</if>
	       
	       
		       <if test="invAttr4!=null and invAttr4!=''">
					and inv_attr4 = #{invAttr4}
				</if>
	       
	       
		       <if test="invAttr5!=null and invAttr5!=''">
					and inv_attr5 = #{invAttr5}
				</if>
	       
	       
		       <if test="uuid!=null and uuid!=''">
					and uuid = #{uuid}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
				
				<if test="replenishmentRuleId!=null">
					and replenishment_rule_id = #{replenishmentRuleId}
				</if>
		</where>
	</sql>
	
	<update id="updateByVersion" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.inventory.WhSkuInventoryAllocated">
	    <![CDATA[
	        UPDATE t_wh_sku_inventory_allocated SET
		        sku_id = #{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        location_id = #{locationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        outer_container_id = #{outerContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        inside_container_id = #{insideContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        customer_id = #{customerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        store_id = #{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        occupation_code = #{occupationCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        occupation_line_id = #{occupationLineId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        replenishment_code = #{replenishmentCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        qty = #{qty,javaType=Double,jdbcType=DECIMAL} ,
		        inv_status = #{invStatus,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        inv_type = #{invType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        batch_number = #{batchNumber,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        mfg_date = #{mfgDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        exp_date = #{expDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        country_of_origin = #{countryOfOrigin,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr1 = #{invAttr1,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr2 = #{invAttr2,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr3 = #{invAttr3,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr4 = #{invAttr4,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr5 = #{invAttr5,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        uuid = #{uuid,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        occupation_code_source = #{occupationCodeSource,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        replenishment_rule_id = #{replenishmentRuleId,javaType=java.lang.Long,jdbcType=BIGINT} 
	        WHERE 
		        id = #{id} 
		        and ou_id = #{ouId}
		        and last_modify_time = #{lastModifyTime}
	    ]]>
	</update>
	
	<select id="findNotOccupyListBySkuIdAndBhCode" resultMap="WhSkuInventoryAllocatedResultExt">
		select 
			<include refid="whSkuInventoryAllocatedColumnsExt"/> 
		from 
			t_wh_sku_inventory_allocated t 
		where 
			t.occupation_code is null 
			and t.occupation_line_id is null 
			and t.sku_id = #{skuId}
			and t.replenishment_code = #{bhCode}
			and t.ou_id = #{ouId}
		order by 
			t.qty
	</select>
	
	<select id="findbyOccupationCode" resultMap="WhSkuInventoryAllocatedResult" flushCache="false">
			select <include refid="whSkuInventoryAllocatedColumns" />
		    <![CDATA[
			    from t_wh_sku_inventory_allocated
		        where
		        occupation_code = #{occupationCode} and ou_id=#{ouId}
		    ]]>
	</select>
	
	<select id="findSkuInventoryAllocatedByUuid" resultMap="WhSkuInventoryAllocatedResult" flushCache="false">
			select 
				<include refid="whSkuInventoryAllocatedColumns" />
		    <![CDATA[
				from 
			    	t_wh_sku_inventory_allocated
		        where
		        	uuid = #{uuid} 
		        	and ou_id=#{ouId}
		    ]]>
	</select>
		
	<delete id="deleteExt">
	    <![CDATA[
	        delete from t_wh_sku_inventory_allocated where
		        id = #{id} and ou_id=#{ouId}
	    ]]>
    </delete>
    
    <select id="getInAllReplenishmentLst" resultMap="WhSkuInventoryAllocatedCommandResultExt">
    	select
    		invAllocated.id AS id,
			invAllocated.skuId AS skuId,
			invAllocated.locationId AS locationId,
			invAllocated.outerContainerId AS outerContainerId,
			invAllocated.insideContainerId AS insideContainerId,
			invAllocated.customerId AS customerId,
			invAllocated.storeId AS storeId,
			invAllocated.occupationCode AS occupationCode,
			invAllocated.occupationLineId AS occupationLineId,
			invAllocated.replenishmentCode AS replenishmentCode,
			invAllocated.qty as qty,
			invAllocated.invStatus AS invStatus,
			invAllocated.invType AS invType,
			invAllocated.batchNumber AS batchNumber,
			invAllocated.mfgDate AS mfgDate,
			invAllocated.expDate AS expDate,
			invAllocated.countryOfOrigin AS countryOfOrigin,
			invAllocated.invAttr1 AS invAttr1,
			invAllocated.invAttr2 AS invAttr2,
			invAllocated.invAttr3 AS invAttr3,
			invAllocated.invAttr4 AS invAttr4,
			invAllocated.invAttr5 AS invAttr5,
			invAllocated.uuid AS uuid,
			invAllocated.ouId AS ouId,
			invAllocated.lastModifyTime AS lastModifyTime,
			invAllocated.replenishmentRuleId AS replenishmentRuleId,
			invAllocated.toLocationId as toLocationId,
			invAllocated.toQty as toQty
    	from(
			select 
				invAllocated.id AS id,
				invAllocated.sku_id AS skuId,
				invAllocated.location_id AS locationId,
				invAllocated.outer_container_id AS outerContainerId,
				invAllocated.inside_container_id AS insideContainerId,
				invAllocated.customer_id AS customerId,
				invAllocated.store_id AS storeId,
				invAllocated.occupation_code AS occupationCode,
				invAllocated.occupation_line_id AS occupationLineId,
				invAllocated.replenishment_code AS replenishmentCode,
				sum(invAllocated.qty) as qty,
				invAllocated.inv_status AS invStatus,
				invAllocated.inv_type AS invType,
				invAllocated.batch_number AS batchNumber,
				invAllocated.mfg_date AS mfgDate,
				invAllocated.exp_date AS expDate,
				invAllocated.country_of_origin AS countryOfOrigin,
				invAllocated.inv_attr1 AS invAttr1,
				invAllocated.inv_attr2 AS invAttr2,
				invAllocated.inv_attr3 AS invAttr3,
				invAllocated.inv_attr4 AS invAttr4,
				invAllocated.inv_attr5 AS invAttr5,
				invAllocated.uuid AS uuid,
				invAllocated.ou_id AS ouId,
				invAllocated.last_modify_time AS lastModifyTime,
				invAllocated.replenishment_rule_id AS replenishmentRuleId,
				invTobefilled.location_id as toLocationId,
				sum(invTobefilled.qty) as toQty
			from 
				t_wh_wave wave, 
				t_wh_wave_template waveTemplate, 
				t_wh_wave_phase wavePhase, 
				t_wh_wave_master waveMaster, 
				t_wh_replenishment_task replenishTask, 
				(select
					id,
					sku_id,
					location_id,
					outer_container_id,
					inside_container_id,
					customer_id,
					store_id,
					occupation_code,
					occupation_line_id,
					replenishment_code,
					sum(qty) AS qty,
					inv_status,
					inv_type,
					batch_number,
					mfg_date,
					exp_date,
					country_of_origin,
					inv_attr1,
					inv_attr2,
					inv_attr3,
					inv_attr4,
					inv_attr5,
					uuid,
					ou_id,
					last_modify_time,
					replenishment_rule_id
				from
					t_wh_sku_inventory_allocated
				group by
					uuid, 
					occupation_code, 
					occupation_line_id, 
					replenishment_code 
				) invAllocated,
				(select
					id,
					sku_id,
					location_id,
					outer_container_id,
					inside_container_id,
					customer_id,
					store_id,
					occupation_code,
					occupation_line_id,
					replenishment_code,
					sum(qty) AS qty,
					inv_status,
					inv_type,
					batch_number,
					mfg_date,
					exp_date,
					country_of_origin,
					inv_attr1,
					inv_attr2,
					inv_attr3,
					inv_attr4,
					inv_attr5,
					uuid,
					ou_id,
					last_modify_time
				from
					t_wh_sku_inventory_tobefilled
				group by
					uuid, 
					occupation_code, 
					occupation_line_id, 
					replenishment_code
				) invTobefilled,
				t_wh_replenishment_rule replenishRule 
			where 
				replenishTask.wave_id = wave.id 
				and replenishTask.is_create_work != 1 
				and wave.wave_master_id = waveMaster.id 
				and waveTemplate.id = waveMaster.wave_template_id 
				and wavePhase.wave_template_id = waveTemplate.id 
				and wavePhase.phase_code = 'CREATE_WORK' 
				and replenishTask.replenishment_code = invAllocated.replenishment_code 
				and replenishTask.replenishment_code = invTobefilled.replenishment_code 
				and invAllocated.sku_id = invTobefilled.sku_id 
				and (invAllocated.occupation_code = invTobefilled.occupation_code or (invAllocated.occupation_code is null and invTobefilled.occupation_code is null)) 
				and (invAllocated.occupation_line_id = invTobefilled.occupation_line_id or (invAllocated.occupation_line_id is null and invTobefilled.occupation_line_id is null))
				and invAllocated.replenishment_rule_id = replenishRule.id
				and invAllocated.inv_status = invTobefilled.inv_status
				and (invAllocated.inv_type = invTobefilled.inv_type or (invAllocated.inv_type is null and invTobefilled.inv_type is null))
				and (invAllocated.batch_number = invTobefilled.batch_number or (invAllocated.batch_number is null and invTobefilled.batch_number is null))
				and (invAllocated.mfg_date = invTobefilled.mfg_date or (invAllocated.mfg_date is null and invTobefilled.mfg_date is null))
				and (invAllocated.exp_date = invTobefilled.exp_date or (invAllocated.exp_date is null and invTobefilled.exp_date is null))
				and (invAllocated.country_of_origin = invTobefilled.country_of_origin or (invAllocated.country_of_origin is null and invTobefilled.country_of_origin is null))
				and (invAllocated.inv_attr1 = invTobefilled.inv_attr1 or (invAllocated.inv_attr1 is null and invTobefilled.inv_attr1 is null))
				and (invAllocated.inv_attr2 = invTobefilled.inv_attr2 or (invAllocated.inv_attr2 is null and invTobefilled.inv_attr2 is null))
				and (invAllocated.inv_attr3 = invTobefilled.inv_attr3 or (invAllocated.inv_attr3 is null and invTobefilled.inv_attr3 is null))
				and (invAllocated.inv_attr4 = invTobefilled.inv_attr4 or (invAllocated.inv_attr4 is null and invTobefilled.inv_attr4 is null))
				and (invAllocated.inv_attr5 = invTobefilled.inv_attr5 or (invAllocated.inv_attr5 is null and invTobefilled.inv_attr5 is null))
				<if test="waveId!=null and waveId!=''">
					and wave.id = #{waveId} 
				</if>
				<if test="taskOuId!=null and taskOuId!=''">
					and wave.ou_id = #{taskOuId} 
				</if>
				<if test="releaseWorkWay!=null and releaseWorkWay!=''">
					and replenishRule.release_work_way = #{releaseWorkWay} 
				</if>
				<if test="isFromLocationSplitWork!=null">
					and replenishRule.is_from_location_split_work = #{isFromLocationSplitWork} 
				</if>
				<if test="isFromOuterContainerSplitWork!=null">
					and replenishRule.is_from_outer_container_split_work = #{isFromOuterContainerSplitWork} 
				</if>
				<if test="isFromInsideContainerSplitWork!=null">
					and replenishRule.is_from_inside_container_split_work = #{isFromInsideContainerSplitWork} 
				</if>
				<if test="isToLocationSplitWork!=null">
					and replenishRule.is_to_location_split_work = #{isToLocationSplitWork} 
				</if>
			group by
				uuid,
				occupationCode,
				occupationLineId,
				replenishmentCode,
				locationId, 
				outerContainerId, 
				insideContainerId,
				toLocationId ) invAllocated
		order by 
			invAllocated.skuId, 
			invAllocated.locationId,
			invAllocated.outerContainerId,
			invAllocated.insideContainerId,
			invAllocated.invAllocated.qty, 
			invAllocated.toLocationId,
			invAllocated.toQty
	</select>
	
	<select id="getOutAllReplenishmentLst" resultMap="WhSkuInventoryAllocatedCommandResultExt">
    	select
    		invAllocated.id AS id,
			invAllocated.skuId AS skuId,
			invAllocated.locationId AS locationId,
			invAllocated.outerContainerId AS outerContainerId,
			invAllocated.insideContainerId AS insideContainerId,
			invAllocated.customerId AS customerId,
			invAllocated.storeId AS storeId,
			invAllocated.occupationCode AS occupationCode,
			invAllocated.occupationLineId AS occupationLineId,
			invAllocated.replenishmentCode AS replenishmentCode,
			invAllocated.qty as qty,
			invAllocated.invStatus AS invStatus,
			invAllocated.invType AS invType,
			invAllocated.batchNumber AS batchNumber,
			invAllocated.mfgDate AS mfgDate,
			invAllocated.expDate AS expDate,
			invAllocated.countryOfOrigin AS countryOfOrigin,
			invAllocated.invAttr1 AS invAttr1,
			invAllocated.invAttr2 AS invAttr2,
			invAllocated.invAttr3 AS invAttr3,
			invAllocated.invAttr4 AS invAttr4,
			invAllocated.invAttr5 AS invAttr5,
			invAllocated.uuid AS uuid,
			invAllocated.ouId AS ouId,
			invAllocated.lastModifyTime AS lastModifyTime,
			invAllocated.replenishmentRuleId AS replenishmentRuleId,
			invAllocated.toLocationId as toLocationId,
			invAllocated.toQty as toQty
    	from(
			select 
				invAllocated.id AS id,
				invAllocated.sku_id AS skuId,
				invAllocated.location_id AS locationId,
				invAllocated.outer_container_id AS outerContainerId,
				invAllocated.inside_container_id AS insideContainerId,
				invAllocated.customer_id AS customerId,
				invAllocated.store_id AS storeId,
				invAllocated.occupation_code AS occupationCode,
				invAllocated.occupation_line_id AS occupationLineId,
				invAllocated.replenishment_code AS replenishmentCode,
				sum(invAllocated.qty) as qty,
				invAllocated.inv_status AS invStatus,
				invAllocated.inv_type AS invType,
				invAllocated.batch_number AS batchNumber,
				invAllocated.mfg_date AS mfgDate,
				invAllocated.exp_date AS expDate,
				invAllocated.country_of_origin AS countryOfOrigin,
				invAllocated.inv_attr1 AS invAttr1,
				invAllocated.inv_attr2 AS invAttr2,
				invAllocated.inv_attr3 AS invAttr3,
				invAllocated.inv_attr4 AS invAttr4,
				invAllocated.inv_attr5 AS invAttr5,
				invAllocated.uuid AS uuid,
				invAllocated.ou_id AS ouId,
				invAllocated.last_modify_time AS lastModifyTime,
				invAllocated.replenishment_rule_id AS replenishmentRuleId,
				invTobefilled.location_id as toLocationId,
				sum(invTobefilled.qty) as toQty
			from
				t_wh_replenishment_task replenishTask,
				(select
					id,
					sku_id,
					location_id,
					outer_container_id,
					inside_container_id,
					customer_id,
					store_id,
					occupation_code,
					occupation_line_id,
					replenishment_code,
					sum(qty) AS qty,
					inv_status,
					inv_type,
					batch_number,
					mfg_date,
					exp_date,
					country_of_origin,
					inv_attr1,
					inv_attr2,
					inv_attr3,
					inv_attr4,
					inv_attr5,
					uuid,
					ou_id,
					last_modify_time,
					replenishment_rule_id
				from
					t_wh_sku_inventory_allocated
				group by
					uuid, 
					occupation_code, 
					occupation_line_id,
					replenishment_code
				) invAllocated,
				(select
					id,
					sku_id,
					location_id,
					outer_container_id,
					inside_container_id,
					customer_id,
					store_id,
					occupation_code,
					occupation_line_id,
					replenishment_code,
					sum(qty) AS qty,
					inv_status,
					inv_type,
					batch_number,
					mfg_date,
					exp_date,
					country_of_origin,
					inv_attr1,
					inv_attr2,
					inv_attr3,
					inv_attr4,
					inv_attr5,
					uuid,
					ou_id,
					last_modify_time
				from
					t_wh_sku_inventory_tobefilled
				group by
					uuid,
					occupation_code, 
					occupation_line_id, 
					replenishment_code
				) invTobefilled,
				t_wh_replenishment_rule replenishRule
			where
				replenishTask.is_create_work != 1
				and replenishTask.replenishment_code = invAllocated.replenishment_code
				and replenishTask.replenishment_code = invTobefilled.replenishment_code
				and replenishTask.location_id = invTobefilled.location_id
				and invAllocated.sku_id = invTobefilled.sku_id
				and invAllocated.replenishment_rule_id = replenishRule.id
				and invAllocated.inv_status = invTobefilled.inv_status
				and (invAllocated.inv_type = invTobefilled.inv_type or (invAllocated.inv_type is null and invTobefilled.inv_type is null))
				and (invAllocated.batch_number = invTobefilled.batch_number or (invAllocated.batch_number is null and invTobefilled.batch_number is null))
				and (invAllocated.mfg_date = invTobefilled.mfg_date or (invAllocated.mfg_date is null and invTobefilled.mfg_date is null))
				and (invAllocated.exp_date = invTobefilled.exp_date or (invAllocated.exp_date is null and invTobefilled.exp_date is null))
				and (invAllocated.country_of_origin = invTobefilled.country_of_origin or (invAllocated.country_of_origin is null and invTobefilled.country_of_origin is null))
				and (invAllocated.inv_attr1 = invTobefilled.inv_attr1 or (invAllocated.inv_attr1 is null and invTobefilled.inv_attr1 is null))
				and (invAllocated.inv_attr2 = invTobefilled.inv_attr2 or (invAllocated.inv_attr2 is null and invTobefilled.inv_attr2 is null))
				and (invAllocated.inv_attr3 = invTobefilled.inv_attr3 or (invAllocated.inv_attr3 is null and invTobefilled.inv_attr3 is null))
				and (invAllocated.inv_attr4 = invTobefilled.inv_attr4 or (invAllocated.inv_attr4 is null and invTobefilled.inv_attr4 is null))
				and (invAllocated.inv_attr5 = invTobefilled.inv_attr5 or (invAllocated.inv_attr5 is null and invTobefilled.inv_attr5 is null))
				<if test="taskOuId!=null and taskOuId!=''">
					and replenishTask.ou_id = #{taskOuId} 
				</if>
				<if test="releaseWorkWay!=null and releaseWorkWay!=''">
					and replenishRule.release_work_way = #{releaseWorkWay} 
				</if>
				<if test="isFromLocationSplitWork!=null">
					and replenishRule.is_from_location_split_work = #{isFromLocationSplitWork} 
				</if>
				<if test="isFromOuterContainerSplitWork!=null">
					and replenishRule.is_from_outer_container_split_work = #{isFromOuterContainerSplitWork} 
				</if>
				<if test="isFromInsideContainerSplitWork!=null">
					and replenishRule.is_from_inside_container_split_work = #{isFromInsideContainerSplitWork} 
				</if>
				<if test="isToLocationSplitWork!=null">
					and replenishRule.is_to_location_split_work = #{isToLocationSplitWork} 
				</if>
			group by
				uuid,
				occupationCode,
				occupationLineId,
				replenishmentCode,
				locationId, 
				outerContainerId, 
				insideContainerId,
				toLocationId ) invAllocated
		order by 
			invAllocated.skuId, 
			invAllocated.locationId,
			invAllocated.outerContainerId,
			invAllocated.insideContainerId,
			invAllocated.invAllocated.qty, 
			invAllocated.toLocationId,
			invAllocated.toQty
	</select>
	
	<select id="skuInventoryAllocatedQty" resultType="Double">
		select
			sum(invAllocated.qty)
		from
			t_wh_sku_inventory_allocated invAllocated
		<where>
			<if test="outerContainerId!=null and outerContainerId!=''">
				and invAllocated.outer_container_id = #{outerContainerId} 
			</if>
			<if test="insideContainerId!=null and insideContainerId!=''">
				and invAllocated.inside_container_id = #{insideContainerId} 
			</if>
			<if test="occupationCode!=null and occupationCode!=''">
				and occupation_code = #{occupationCode}
			</if>
			<if test="occupationLineId!=null and occupationLineId!=''">
				and occupation_line_id = #{occupationLineId}
			</if>
			<if test="replenishmentCode!=null and replenishmentCode!=''">
				and invAllocated.replenishment_code = #{replenishmentCode} 
			</if>
			<if test="replenishmentRuleId!=null and replenishmentRuleId!=''">
				and invAllocated.replenishment_rule_id = #{replenishmentRuleId} 
			</if>
			<if test="uuid!=null and uuid!=''">
				and uuid = #{uuid}
			</if>
		</where>
	</select>
	
	<select id="getInReplenishmentLst" resultMap="WhSkuInventoryAllocatedCommandResultExt">
	    SELECT
			invAllocated.id AS id,
			invAllocated.sku_id AS skuId,
			invAllocated.location_id AS locationId,
			invAllocated.outer_container_id AS outerContainerId,
			invAllocated.inside_container_id AS insideContainerId,
			invAllocated.customer_id AS customerId,
			invAllocated.store_id AS storeId,
			invAllocated.occupation_code AS occupationCode,
			invAllocated.occupation_line_id AS occupationLineId,
			invAllocated.replenishment_code AS replenishmentCode,
			invAllocated.qty AS qty,
			invAllocated.inv_status AS invStatus,
			invAllocated.inv_type AS invType,
			invAllocated.batch_number AS batchNumber,
			invAllocated.mfg_date AS mfgDate,
			invAllocated.exp_date AS expDate,
			invAllocated.country_of_origin AS countryOfOrigin,
			invAllocated.inv_attr1 AS invAttr1,
			invAllocated.inv_attr2 AS invAttr2,
			invAllocated.inv_attr3 AS invAttr3,
			invAllocated.inv_attr4 AS invAttr4,
			invAllocated.inv_attr5 AS invAttr5,
			invAllocated.uuid AS uuid,
			invAllocated.ou_id AS ouId,
			invAllocated.last_modify_time AS lastModifyTime,
			invAllocated.replenishment_rule_id AS replenishmentRuleId
		FROM
			t_wh_wave wave,
			t_wh_wave_template waveTemplate,
			t_wh_wave_phase wavePhase,
			t_wh_wave_master waveMaster,
			t_wh_replenishment_task replenishTask,
			t_wh_sku_inventory_allocated invAllocated,
			t_wh_replenishment_rule replenishRule
		WHERE
			replenishTask.wave_id = wave.id
		AND replenishTask.is_create_work != 1
		AND wave.wave_master_id = waveMaster.id
		AND waveTemplate.id = waveMaster.wave_template_id
		AND wavePhase.wave_template_id = waveTemplate.id
		AND wavePhase.phase_code = 'CREATE_WORK'
		AND replenishTask.replenishment_code = invAllocated.replenishment_code
		AND invAllocated.replenishment_rule_id = replenishRule.id
		AND wave.id = #{waveId} 
		AND wave.ou_id = #{taskOuId} 
		AND replenishRule.release_work_way = #{releaseWorkWay} 
		AND replenishRule.is_from_location_split_work = #{isFromLocationSplitWork} 
		AND replenishRule.is_from_outer_container_split_work = #{isFromOuterContainerSplitWork} 
		AND replenishRule.is_from_inside_container_split_work = #{isFromInsideContainerSplitWork} 
		AND replenishRule.is_to_location_split_work = #{isToLocationSplitWork} 
	</select>	
	
	<select id="getOutReplenishmentLst" resultMap="WhSkuInventoryAllocatedCommandResultExt">
	    SELECT
			invAllocated.id AS id,
			invAllocated.sku_id AS skuId,
			invAllocated.location_id AS locationId,
			invAllocated.outer_container_id AS outerContainerId,
			invAllocated.inside_container_id AS insideContainerId,
			invAllocated.customer_id AS customerId,
			invAllocated.store_id AS storeId,
			invAllocated.occupation_code AS occupationCode,
			invAllocated.occupation_line_id AS occupationLineId,
			invAllocated.replenishment_code AS replenishmentCode,
			invAllocated.qty AS qty,
			invAllocated.inv_status AS invStatus,
			invAllocated.inv_type AS invType,
			invAllocated.batch_number AS batchNumber,
			invAllocated.mfg_date AS mfgDate,
			invAllocated.exp_date AS expDate,
			invAllocated.country_of_origin AS countryOfOrigin,
			invAllocated.inv_attr1 AS invAttr1,
			invAllocated.inv_attr2 AS invAttr2,
			invAllocated.inv_attr3 AS invAttr3,
			invAllocated.inv_attr4 AS invAttr4,
			invAllocated.inv_attr5 AS invAttr5,
			invAllocated.uuid AS uuid,
			invAllocated.ou_id AS ouId,
			invAllocated.last_modify_time AS lastModifyTime,
			invAllocated.replenishment_rule_id AS replenishmentRuleId
		FROM
			t_wh_replenishment_task replenishTask,
			t_wh_sku_inventory_allocated invAllocated,
			t_wh_replenishment_rule replenishRule
		WHERE
			replenishTask.is_create_work != 1
		AND replenishTask.replenishment_code = invAllocated.replenishment_code
		AND invAllocated.replenishment_rule_id = replenishRule.id
		AND replenishTask.ou_id = #{taskOuId} 
		AND replenishRule.release_work_way = #{releaseWorkWay} 
		AND replenishRule.is_from_location_split_work = #{isFromLocationSplitWork} 
		AND replenishRule.is_from_outer_container_split_work = #{isFromOuterContainerSplitWork} 
		AND replenishRule.is_from_inside_container_split_work = #{isFromInsideContainerSplitWork} 
		AND replenishRule.is_to_location_split_work = #{isToLocationSplitWork} 
	</select>	
	
	<select id="getWhSkuInventoryCommandByInvMove" resultMap="WhSkuInventoryAllocatedCommandSnResultExt">
	    select
	          distinct inv.id as alloctedId,
	          inv.sku_id as skuId,
	          inv.location_id as locationId,
	          inv.outer_container_id as outerContainerId,
	          inv.inside_container_id as insideContainerId,
	          inv.customer_id as customerId,
	          inv.store_id as storeId,
	          inv.occupation_code as occupationCode,
	          inv.occupation_line_id as occupationLineId,
	          inv.replenishment_code as replenishmentCode,
	          inv.qty as qty,
	          inv.inv_status as invStatus,
	          inv.inv_type as invType,
	          inv.batch_number as batchNumber,
	          inv.mfg_date as mfgDate,
	          inv.exp_date as expDate,
	          inv.country_of_origin as countryOfOrigin,
	          inv.inv_attr1 as invAttr1,
	          inv.inv_attr2 as invAttr2,
	          inv.inv_attr3 as invAttr3,
	          inv.inv_attr4 as invAttr4,
	          inv.inv_attr5 as invAttr5,
	          inv.uuid as uuid,
	          inv.ou_id as ouId,
	          inv.last_modify_time as lastModifyTime,
	          inv.replenishment_rule_id as replenishmentRuleId,
	          sn.id AS snId,
	          sn.sn AS snSn,
	          sn.occupation_code AS snOccupationCode,
	          sn.defect_ware_barcode AS snDefectWareBarcode,
	          sn.defect_source AS snDefectSource,
	          sn.defect_type_id AS snDefectTypeId,
	          sn.defect_reasons_id AS snDefectReasonsId,
	          sn.status AS snStatus,
	          sn.inv_attr AS snInvAttr,
	          sn.uuid AS snUuid,
	          sn.ou_id AS snOuId,
	          sn.sys_uuid AS snSysUuid
	      from 
				t_wh_operation_line operLine, 
				t_wh_sku_inventory_allocated inv
				left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid 
		  where
		    operLine.inv_move_code = inv.occupation_code
		    and inv.occupation_code IS NOT NULL
			and inv.ou_id = #{ouId}
			and operLine.operation_id = #{operationId}
			and  inv.location_id = #{locationId}
			<if test="outerContainerId!=null and outerContainerId!=''">
				 and inv.outer_container_id = #{outerContainerId}
			</if>
			<if test="insideContainerId!=null and insideContainerId!=''">
				and inv.inside_container_id=#{insideContainerId}
			</if>
			<if test="outerContainerId==null">
				and inv.outer_container_id is null
			</if>
			<if test="insideContainerId==null">
				and inv.inside_container_id is null
			</if>
	</select>
	
	<select id="getWhSkuInventorySNCommandByOccupationLineId" resultMap="WhSkuInventoryAllocatedCommandSnResultExt">
	    select
	          allocated.alloctedId,
	          allocated.skuId,
	          allocated.locationId,
	          allocated.outerContainerId,
	          allocated.insideContainerId,
	          allocated.customerId,
	          allocated.storeId,
	          allocated.invOccupationCode,
	          allocated.invOccupationLineId,
	          allocated.invReplenishmentCode,
	          allocated.qty,
	          allocated.invStatus,
	          allocated.invType,
	          allocated.batchNumber,
	          allocated.mfgDate,
	          allocated.expDate,
	          allocated.countryOfOrigin,
	          allocated.invAttr1,
	          allocated.invAttr2,
	          allocated.invAttr3,
	          allocated.invAttr4,
	          allocated.invAttr5,
	          allocated.alloctedUuid,
	          allocated.alloctedOuId,
	          allocated.lastModifyTime,
	          allocated.replenishmentRuleId,
	          allocated.occupationCodeSource,
	          sn.id AS snId,
	          sn.sn AS snSn,
	          sn.occupation_code AS snOccupationCode,
	          sn.defect_ware_barcode AS snDefectWareBarcode,
	          sn.defect_source AS snDefectSource,
	          sn.defect_type_id AS snDefectTypeId,
	          sn.defect_reasons_id AS snDefectReasonsId,
	          sn.status AS snStatus,
	          sn.inv_attr AS snInvAttr,
	          sn.uuid AS snUuid,
	          sn.ou_id AS snOuId,
	          sn.replenishment_code as snReplenishmentCode,
	          sn.sys_uuid AS snSysUuid
			      from (SELECT
							inv.id AS alloctedId,
							inv.sku_id AS skuId,
							inv.location_id AS locationId,
							inv.outer_container_id AS outerContainerId,
							inv.inside_container_id AS insideContainerId,
							inv.customer_id AS customerId,
							inv.store_id AS storeId,
							inv.occupation_code AS invOccupationCode,
							inv.replenishment_code as invReplenishmentCode,
							sum(inv.qty) AS qty,
							inv.inv_status AS invStatus,
							inv.inv_type AS invType,
							inv.batch_number AS batchNumber,
							inv.mfg_date AS mfgDate,
							inv.exp_date AS expDate,
							inv.country_of_origin AS countryOfOrigin,
							inv.inv_attr1 AS invAttr1,
							inv.inv_attr2 AS invAttr2,
							inv.inv_attr3 AS invAttr3,
							inv.inv_attr4 AS invAttr4,
							inv.inv_attr5 AS invAttr5,
							inv.uuid AS alloctedUuid,
							inv.ou_id AS alloctedOuId,
							inv.occupation_code_source AS occupationCodeSource,
							inv.replenishment_rule_id as replenishmentRuleId,
							inv.last_modify_time AS lastModifyTime,
							inv.occupation_line_id AS invOccupationLineId
						FROM
						    t_wh_operation_line operLine,
							t_wh_sku_inventory_allocated inv
						WHERE
							 inv.ou_id = #{ouId}
							 and operLine.replenishment_code = inv.replenishment_code
				             and inv.replenishment_code IS NOT NULL
				             and operLine.operation_id = #{operationId}
							 and inv.uuid=#{uuid}
							 <if test="occupationCode!=null and occupationCode!=''">
					          and inv.occupation_code = #{occupationCode}
				             </if>
				             <if test="occupationLineId!=null">
					          and inv.occupation_line_id = #{occupationLineId}
				             </if>
						GROUP BY inv.uuid
				     ) allocated 
					left join t_wh_sku_inventory_sn sn on allocated.alloctedUuid = sn.uuid 
	</select>
	
	<select id="getWhSkuInventorySNCommandByInvMove" resultMap="WhSkuInventoryAllocatedCommandSnResultExt">
	    select
	          allocated.alloctedId,
	          allocated.skuId,
	          allocated.locationId,
	          allocated.outerContainerId,
	          allocated.insideContainerId,
	          allocated.customerId,
	          allocated.storeId,
	          allocated.invOccupationCode,
	          allocated.invOccupationLineId,
	          allocated.replenishmentCode,
	          allocated.qty,
	          allocated.invStatus,
	          allocated.invType,
	          allocated.batchNumber,
	          allocated.mfgDate,
	          allocated.expDate,
	          allocated.countryOfOrigin,
	          allocated.invAttr1,
	          allocated.invAttr2,
	          allocated.invAttr3,
	          allocated.invAttr4,
	          allocated.invAttr5,
	          allocated.alloctedUuid,
	          allocated.alloctedOuId,
	          allocated.lastModifyTime,
	          allocated.replenishmentRuleId,
	          allocated.occupationCodeSource,
	          sn.id AS snId,
	          sn.sn AS snSn,
	          sn.occupation_code AS snOccupationCode,
	          sn.defect_ware_barcode AS snDefectWareBarcode,
	          sn.defect_source AS snDefectSource,
	          sn.defect_type_id AS snDefectTypeId,
	          sn.defect_reasons_id AS snDefectReasonsId,
	          sn.status AS snStatus,
	          sn.inv_attr AS snInvAttr,
	          sn.uuid AS snUuid,
	          sn.ou_id AS snOuId,
	          sn.sys_uuid AS snSysUuid
			      from (SELECT
							inv.id AS alloctedId,
							inv.sku_id AS skuId,
							inv.location_id AS locationId,
							inv.outer_container_id AS outerContainerId,
							inv.inside_container_id AS insideContainerId,
							inv.customer_id AS customerId,
							inv.store_id AS storeId,
							inv.occupation_code AS invOccupationCode,
							inv.replenishment_code as replenishmentCode,
							sum(inv.qty) AS qty,
							inv.inv_status AS invStatus,
							inv.inv_type AS invType,
							inv.batch_number AS batchNumber,
							inv.mfg_date AS mfgDate,
							inv.exp_date AS expDate,
							inv.country_of_origin AS countryOfOrigin,
							inv.inv_attr1 AS invAttr1,
							inv.inv_attr2 AS invAttr2,
							inv.inv_attr3 AS invAttr3,
							inv.inv_attr4 AS invAttr4,
							inv.inv_attr5 AS invAttr5,
							inv.uuid AS alloctedUuid,
							inv.ou_id AS alloctedOuId,
							inv.occupation_code_source AS occupationCodeSource,
							inv.replenishment_rule_id as replenishmentRuleId,
							inv.last_modify_time AS lastModifyTime,
							inv.occupation_line_id AS invOccupationLineId
						FROM
						    t_wh_operation_line operLine,
							t_wh_sku_inventory_allocated inv
						WHERE
							 inv.ou_id = #{ouId}
							 and operLine.inv_move_code = inv.occupation_code
				             and inv.occupation_code IS NOT NULL
				             and operLine.operation_id = #{operationId}
							 and inv.uuid=#{uuid}
						GROUP BY inv.uuid
				     ) allocated 
					left join t_wh_sku_inventory_sn sn on allocated.alloctedUuid = sn.uuid 
	</select>
	
	<select id="getWhSkuInventoryCommandByOccupationLineId" resultMap="WhSkuInventoryAllocatedCommandResultExt">
	    select
	          distinct inv.id as id,
	          inv.sku_id as skuId,
	          inv.location_id as locationId,
	          inv.outer_container_id as outerContainerId,
	          inv.inside_container_id as insideContainerId,
	          inv.customer_id as customerId,
	          inv.store_id as storeId,
	          inv.occupation_code as occupationCode,
	          inv.occupation_line_id as occupationLineId,
	          inv.replenishment_code as replenishmentCode,
	          inv.qty as qty,
	          inv.inv_status as invStatus,
	          inv.inv_type as invType,
	          inv.batch_number as batchNumber,
	          inv.mfg_date as mfgDate,
	          inv.exp_date as expDate,
	          inv.country_of_origin as countryOfOrigin,
	          inv.inv_attr1 as invAttr1,
	          inv.inv_attr2 as invAttr2,
	          inv.inv_attr3 as invAttr3,
	          inv.inv_attr4 as invAttr4,
	          inv.inv_attr5 as invAttr5,
	          inv.uuid as uuid,
	          inv.ou_id as ouId,
	          inv.last_modify_time as lastModifyTime,
	          inv.replenishment_rule_id as replenishmentRuleId,
	          inv.occupation_code_source AS occupationCodeSource
		      from 
					t_wh_operation_line operLine, 
					t_wh_sku_inventory_allocated inv
			  where
				    operLine.replenishment_code = inv.replenishment_code
				and inv.replenishment_code IS NOT NULL
				and inv.ou_id = #{ouId}
				and operLine.operation_id = #{operationId}
				and  inv.location_id = #{locationId}
				<if test="outerContainerId!=null and outerContainerId!=''">
					 and inv.outer_container_id = #{outerContainerId}
				</if>
				<if test="insideContainerId!=null and insideContainerId!=''">
								 and inv.inside_container_id=#{insideContainerId}
				</if>
				<if test="outerContainerId==null">
					 and inv.outer_container_id is null
				</if>
				<if test="insideContainerId==null">
					 and inv.inside_container_id is null
				</if>
	</select>
	
	<select id="getTotalQtyByReplenishmentCode" resultType="Double">
		select
			sum(invAllocated.qty)
		from
			t_wh_sku_inventory_allocated invAllocated
		<where>
			<if test="replenishmentCode!=null and replenishmentCode!=''">
				and invAllocated.replenishment_code = #{replenishmentCode} 
			</if>
			<if test="ouId!=null and ouId!=''">
				and invAllocated.ou_id = #{ouId} 
			</if>
		</where>
	</select>
	
	<select id="findskuInventoryAllocateds" resultMap="WhSkuInventoryAllocatedResultExt">
		select 
			<include refid="whSkuInventoryAllocatedColumnsExt"/>
		from 
			t_wh_sku_inventory_allocated
			<include refid="whSkuInventoryAllocatedDynamicWhereExt"/>
	</select>
	
	<select id="findByIdExt" parameterType="java.lang.Long" resultMap="WhSkuInventoryAllocatedResultExt" flushCache="false">
		select <include refid="whSkuInventoryAllocatedColumnsExt" />
	    <![CDATA[
		    from t_wh_sku_inventory_allocated 
	        where 
	        id = #{id} 
	        and ou_id = #{ouId}
	    ]]>
	</select>
	
	<delete id="deleteByReplenishmentCode">
		delete from
			t_wh_sku_inventory_allocated
		where 
			replenishment_code = #{replenishmentCode}
			and ou_id = #{ouId}
	</delete>
	
	<select id="getSkuAllocatedQtyByUuid" resultType="double">
		select
			IFNULL(sum(a.qty), 0)
		from
			t_wh_sku_inventory_allocated a
		where
			a.uuid in 
			<foreach item="item" collection="uuids" open="(" separator="," close=")">
	            #{item}
	        </foreach>
			and a.ou_id = #{ouId}
	</select>
</mapper>
