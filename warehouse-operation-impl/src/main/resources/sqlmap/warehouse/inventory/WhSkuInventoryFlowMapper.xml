<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.inventory.WhSkuInventoryFlowDao">
	<resultMap id="WhSkuInventoryFlowResult" type="com.baozun.scm.primservice.whoperation.model.warehouse.inventory.WhSkuInventoryFlow">
	</resultMap>
	<resultMap id="WhSkuInventoryFlowPaginationResult" type="lark.common.dao.Pagination">
    	<collection property="items" javaType="ArrayList" resultMap="WhSkuInventoryFlowResult"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whSkuInventoryFlowColumns">
	    <![CDATA[
	        	id as id,
	        	upc as upc,
	        	customer_code as customerCode,
	        	store_code as storeCode,
	        	ec_order_code as ecOrderCode,
	        	odo_type as odoType,
	        	revision_qty as revisionQty,
	        	inv_status as invStatus,
	        	inv_type as invType,
	        	batch_number as batchNumber,
	        	mfg_date as mfgDate,
	        	exp_date as expDate,
	        	country_of_origin as countryOfOrigin,
	        	inv_attr1 as invAttr1,
	        	inv_attr2 as invAttr2,
	        	inv_attr3 as invAttr3,
	        	inv_attr4 as invAttr4,
	        	inv_attr5 as invAttr5,
	        	create_time as createTime,
	        	inv_transaction_type as invTransactionType,
	        	ou_id as ouId
	    ]]>
	</sql>
	<sql id="whSkuInventoryFlowConditionWhereExt">
		<where>
			<if test="likeEqualsMap != null">
				<foreach collection="likeEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} like CONCAT('%',#{value},'%') 
				</foreach> 
			</if> 
			<if test="equalsMap != null"> 
				<foreach collection="equalsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} = #{value} 
				</foreach> 
			</if> 
			<if test="notEqualsMap != null"> 
				<foreach collection="notEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} != #{value} 
				</foreach> 
			</if> 
			<if test="greateMap != null"> 
				<foreach collection="greateMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &gt; #{value} 
				</foreach> 
			</if> 
			<if test="greateEqualsMap != null"> 
				<foreach collection="greateEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &gt;= #{value} 
				</foreach> 
			</if> 
			<if test="lessMap != null"> 
				<foreach collection="lessMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &lt; #{value} 
				</foreach> 
			</if> 
			<if test="lessEqualsMap != null"> 
				<foreach collection="lessEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &lt;= #{value} 
				</foreach> 
			</if> 
			<if test="nullMap != null"> 
				<foreach collection="nullMap" index="key"  item="value" separator="and" open=" and "> 
					${key} is null 
				</foreach> 
			</if> 
			<if test="notNullMap != null"> 
				<foreach collection="notNullMap" index="key"  item="value" separator="and" open=" and "> 
					${key} is not null 
				</foreach> 
			</if> 
			<if test="inMap != null"> 
				<foreach collection="inMap" index="key"  item="value" separator="and" open=" and (" close=")"> 
					<foreach collection="value" item="itemin" index="index" separator="or"> 
						${key} = #{itemin} 
					</foreach> 
				</foreach> 
			</if> 
			<if test="notInMap != null"> 
				<foreach collection="notInMap" index="key"  item="value" separator="and" open=" and (" close=")"> 
					<foreach collection="value" item="itemin" index="index" separator="and"> 
						${key} != #{itemin} 
					</foreach> 
				</foreach> 
			</if> 
		</where>
		<if test="sortBy != null"> 
			<foreach collection="sortBy" item="item" separator=","  open=" order by "> 
				${item.field} ${item.type}
			</foreach> 
		</if>
	</sql>
	
		<!-- 如果有自增字段 -->
		
			<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
			<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.inventory.WhSkuInventoryFlow" 
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_wh_sku_inventory_flow (
		        	id,
		        	upc ,
		        	customer_code ,
		        	store_code ,
		        	ec_order_code ,
		        	odo_type ,
		        	revision_qty ,
		        	inv_status ,
		        	inv_type ,
		        	batch_number ,
		        	mfg_date ,
		        	exp_date ,
		        	country_of_origin ,
		        	inv_attr1 ,
		        	inv_attr2 ,
		        	inv_attr3 ,
		        	inv_attr4 ,
		        	inv_attr5 ,
		        	create_time ,
		        	inv_transaction_type ,
		        	ou_id 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{upc,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{customerCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{storeCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{ecOrderCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{odoType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{revisionQty,javaType=Long,jdbcType=DECIMAL} ,
		        	#{invStatus,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{batchNumber,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{mfgDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{expDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{countryOfOrigin,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invAttr1,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invAttr2,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invAttr3,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invAttr4,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invAttr5,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{invTransactionType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT} 
		        )
		    ]]>

		</insert>
		
		
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.inventory.WhSkuInventoryFlow">
	    <![CDATA[
	        UPDATE t_wh_sku_inventory_flow SET
		        upc = #{upc,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        customer_code = #{customerCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        store_code = #{storeCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        ec_order_code = #{ecOrderCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        odo_type = #{odoType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        revision_qty = #{revisionQty,javaType=Long,jdbcType=DECIMAL} ,
		        inv_status = #{invStatus,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_type = #{invType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        batch_number = #{batchNumber,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        mfg_date = #{mfgDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        exp_date = #{expDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        country_of_origin = #{countryOfOrigin,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr1 = #{invAttr1,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr2 = #{invAttr2,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr3 = #{invAttr3,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr4 = #{invAttr4,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr5 = #{invAttr5,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        inv_transaction_type = #{invTransactionType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        ou_id = #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
		<update id="batchUpdate">
	        UPDATE t_wh_sku_inventory_flow SET
	        	<foreach collection="batchUpdateMap" index="key"  item="value" separator=",">
	        		${key} = #{value}
	        	</foreach>
	        	<include refid="whSkuInventoryFlowConditionWhereExt"/>
		</update>
		
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_sku_inventory_flow where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_sku_inventory_flow 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	    <update id="batchDelete">
	        delete from t_wh_sku_inventory_flow <include refid="whSkuInventoryFlowConditionWhereExt"/>
		</update>
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="WhSkuInventoryFlowResult" flushCache="false">
			select <include refid="whSkuInventoryFlowColumns" />
		    <![CDATA[
			    from t_wh_sku_inventory_flow 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="WhSkuInventoryFlowResult" flushCache="false">
			select <include refid="whSkuInventoryFlowColumns" />
			    from t_wh_sku_inventory_flow 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="whSkuInventoryFlowDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
	       
		       <if test="upc!=null and upc!=''">
					and upc = #{upc}
				</if>
	       
	       
		       <if test="customerCode!=null and customerCode!=''">
					and customer_code = #{customerCode}
				</if>
	       
	       
		       <if test="storeCode!=null and storeCode!=''">
					and store_code = #{storeCode}
				</if>
	       
	       
		       <if test="ecOrderCode!=null and ecOrderCode!=''">
					and ec_order_code = #{ecOrderCode}
				</if>
	       
	       
		       <if test="odoType!=null and odoType!=''">
					and odo_type = #{odoType}
				</if>
	       
				<if test="revisionQty!=null">
					and revision_qty = #{revisionQty}
				</if>
	       
	       
		       <if test="invStatus!=null and invStatus!=''">
					and inv_status = #{invStatus}
				</if>
	       
	       
		       <if test="invType!=null and invType!=''">
					and inv_type = #{invType}
				</if>
	       
	       
		       <if test="batchNumber!=null and batchNumber!=''">
					and batch_number = #{batchNumber}
				</if>
	       
				<if test="mfgDate!=null">
					and mfg_date = #{mfgDate}
				</if>
	       
				<if test="expDate!=null">
					and exp_date = #{expDate}
				</if>
	       
	       
		       <if test="countryOfOrigin!=null and countryOfOrigin!=''">
					and country_of_origin = #{countryOfOrigin}
				</if>
	       
	       
		       <if test="invAttr1!=null and invAttr1!=''">
					and inv_attr1 = #{invAttr1}
				</if>
	       
	       
		       <if test="invAttr2!=null and invAttr2!=''">
					and inv_attr2 = #{invAttr2}
				</if>
	       
	       
		       <if test="invAttr3!=null and invAttr3!=''">
					and inv_attr3 = #{invAttr3}
				</if>
	       
	       
		       <if test="invAttr4!=null and invAttr4!=''">
					and inv_attr4 = #{invAttr4}
				</if>
	       
	       
		       <if test="invAttr5!=null and invAttr5!=''">
					and inv_attr5 = #{invAttr5}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
	       
		       <if test="invTransactionType!=null and invTransactionType!=''">
					and inv_transaction_type = #{invTransactionType}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_wh_sku_inventory_flow 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_sku_inventory_flow 
		<include refid="whSkuInventoryFlowDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_sku_inventory_flow 
		<include refid="whSkuInventoryFlowDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="WhSkuInventoryFlowResult">
    	select <include refid="whSkuInventoryFlowColumns" />
	    from t_wh_sku_inventory_flow 
		<include refid="whSkuInventoryFlowDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="WhSkuInventoryFlowResult">
    	select <include refid="whSkuInventoryFlowColumns" />
	    from t_wh_sku_inventory_flow 
		<include refid="whSkuInventoryFlowDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="WhSkuInventoryFlowResult">
    	select <include refid="whSkuInventoryFlowColumns" />
	    from t_wh_sku_inventory_flow 
		<include refid="whSkuInventoryFlowDynamicWhere"/>
		
    </select>
    
    <select id="query" resultMap="WhSkuInventoryFlowResult">
		select <include refid="whSkuInventoryFlowColumns" />
	    from t_wh_sku_inventory_flow  
		<include refid="whSkuInventoryFlowConditionWhereExt"/>
    </select>
    
    <select id="queryCount" resultType="long">
		select count(*) from t_wh_sku_inventory_flow  
		<include refid="whSkuInventoryFlowConditionWhereExt"/>
    </select>

	
</mapper>
