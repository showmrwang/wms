<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.inventory.WhSkuInventorySnDao">
	<resultMap id="WhSkuInventorySnResultExt" type="com.baozun.scm.primservice.whoperation.model.warehouse.inventory.WhSkuInventorySn">
	</resultMap>
	<resultMap id="WhSkuInventorySnCommandResultExt" type="com.baozun.scm.primservice.whoperation.command.warehouse.inventory.WhSkuInventorySnCommand">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whSkuInventorySnColumnsExt">
	    <![CDATA[
	        	id as id,
	        	sn as sn,
	        	occupation_code as occupationCode,
	        	occupation_line_id as occupationLineId,
	        	defect_ware_barcode as defectWareBarcode,
	        	defect_source as defectSource,
	        	defect_type_id as defectTypeId,
	        	defect_reasons_id as defectReasonsId,
	        	status as status,
	        	inv_attr as invAttr,
	        	uuid as uuid,
	        	ou_id as ouId,
	        	sys_uuid as sysUuid
	    ]]>
	</sql>
	
	
	<sql id="findListByQueryMapWithPageWhereExt">
		<where>
	       		sn.ou_id = #{ouId}
				<if test="uuid!=null and uuid!=''">
					and sn.uuid = #{uuid}
				</if>
				<if test="sn!=null and sn!=''">
					and sn.sn like #{sn}
				</if>
				<if test="snData!=null and snData!=''">
					and sn.sn like #{snData}
				</if>
				<if test="defectWareBarcode!=null and defectWareBarcode!=''">
					and sn.defect_ware_barcode like #{defectWareBarcode}
				</if>
				<if test="defectWareBarcodeData!=null and defectWareBarcodeData!=''">
					and sn.defect_ware_barcode like #{defectWareBarcodeData}
				</if>
				<if test="occupationCode!=null and occupationCode!=''">
					and sn.occupation_code like #{occupationCode}
				</if>
				<if test="occupationCodeData!=null and occupationCodeData!=''">
					and sn.occupation_code like #{occupationCodeData}
				</if>
				<if test="defectSource!=null and defectSource!=''">
					and sn.defect_source = #{defectSource} and sn.defect_type_id = #{typeId}
				</if>
				<if test="defectReasons!=null and defectReasons!=''">
					and sn.defect_reasons_id = #{defectReasons}
				</if>
				<if test="status!=null ">
					and sn.status = #{status}
				</if>
		</where> 
	</sql>
	
	<sql id="findListByQueryMapWithPageCommandExt">
	    <![CDATA[
				sn.id as id,
				sn.sn as sn,
				sn.occupation_code as occupationCode,
				sn.occupation_line_id as occupationLineId,
				sn.defect_ware_barcode as defectWareBarcode,
				sn.defect_source as defectSource,
				sn.defect_type_id as defectTypeId,
				sn.defect_reasons_id as defectReasonsId,
				sn.status as status,
				sn.inv_attr as invAttr,
				sn.uuid as uuid,
				sn.ou_id as ouId,
				sn.sys_uuid as sysUuid,
				sku.code as skuCode,
				sku.name as skuName,
				sys.dic_label as statusStr,
				stype.name as storeDefectTypeName,
				srea.name as storeDefectReasonsName,
				wtype.name as whDefectTypeName,
				wrea.name as whDefectReasonsName
	    ]]>
	</sql>

    <update id="updateByVersion" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.inventory.WhSkuInventorySn">
        <![CDATA[
            UPDATE t_wh_sku_inventory_sn SET
                sn = #{sn,javaType=java.lang.String,jdbcType=VARCHAR} ,
                occupation_code = #{occupationCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
                defect_ware_barcode = #{defectWareBarcode,javaType=java.lang.String,jdbcType=VARCHAR} ,
                defect_source = #{defectSource,javaType=java.lang.String,jdbcType=VARCHAR} ,
                defect_type_id = #{defectTypeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                defect_reasons_id = #{defectReasonsId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                status = #{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
                inv_attr = #{invAttr,javaType=java.lang.String,jdbcType=VARCHAR} ,
                uuid = #{uuid,javaType=java.lang.String,jdbcType=VARCHAR} ,
                sys_uuid = #{sysUuid,javaType=java.lang.String,jdbcType=VARCHAR},
                occupation_line_id= #{occupationLineId,javaType=java.lang.Long,jdbcType=BIGINT}
            WHERE
                id = #{id}
                and ou_id = #{ouId}
        ]]>
    </update>


	
	<select id="findListCountByQueryMapExt" resultType="long">
        select count(*) 
			from t_wh_sku_inventory_sn sn 
			left join t_wh_sku_inventory inv 
			left join t_wh_sku sku on inv.sku_id = sku.id
			on inv.uuid = sn.uuid 
			left join sys_dictionary sys on sn.status = sys.dic_value and sys.group_value = 'INVENTORY_SN_STATUS' 
			left join t_bi_store_defect_type stype on stype.id = sn.defect_type_id 
			left join t_bi_store_defect_reasons srea on srea.id = sn.defect_reasons_id
			left join t_wh_defect_type wtype on wtype.id = sn.defect_type_id 
			left join t_wh_defect_reasons wrea on wrea.id = sn.defect_reasons_id
		<include refid="findListByQueryMapWithPageWhereExt"/>    
			group by sn.sn
    </select>
	
	<select id="findListByQueryMapWithPageExt" resultMap="WhSkuInventorySnCommandResultExt">
    	select <include refid="findListByQueryMapWithPageCommandExt" />
			from t_wh_sku_inventory_sn sn 
			left join t_wh_sku_inventory inv 
			left join t_wh_sku sku on inv.sku_id = sku.id
			on inv.uuid = sn.uuid 
			left join sys_dictionary sys on sn.status = sys.dic_value and sys.group_value = 'INVENTORY_SN_STATUS' 
			left join t_bi_store_defect_type stype on stype.id = sn.defect_type_id 
			left join t_bi_store_defect_reasons srea on srea.id = sn.defect_reasons_id
			left join t_wh_defect_type wtype on wtype.id = sn.defect_type_id 
			left join t_wh_defect_reasons wrea on wrea.id = sn.defect_reasons_id
		<include refid="findListByQueryMapWithPageWhereExt"/> 
			group by sn.sn
    </select>

    <select id="findCheckingSkuInvSnByCheckingId" resultMap="WhSkuInventorySnCommandResultExt">
        select <include refid="findListByQueryMapWithPageCommandExt" />
            from t_wh_sku_inventory_sn sn
            left join t_wh_sku_inventory inv on inv.uuid = sn.uuid
            left join t_wh_sku sku on inv.sku_id = sku.id
            left join sys_dictionary sys on sn.status = sys.dic_value and sys.group_value = 'INVENTORY_SN_STATUS'
            left join t_bi_store_defect_type stype on stype.id = sn.defect_type_id
            left join t_bi_store_defect_reasons srea on srea.id = sn.defect_reasons_id
            left join t_wh_defect_type wtype on wtype.id = sn.defect_type_id
            left join t_wh_defect_reasons wrea on wrea.id = sn.defect_reasons_id
            left join t_wh_checking_line as checkingLine on checkingLine.uuid = sn.uuid and checkingLine.odo_line_id = inv.occupation_line_id
        where
            checkingLine.checking_id = #{checkingId}
            and sn.ou_id = #{ouId}
    </select>

    
    <select id="findWhSkuInventoryByUuid" resultMap="WhSkuInventorySnCommandResultExt">
    	select <include refid="whSkuInventorySnColumnsExt" />
				from 
				t_wh_sku_inventory_sn
				where 
				uuid = #{uuid}
				and ou_id = #{ouid} 
    </select>
    <select id="findUseableInvSnByUuid" resultMap="WhSkuInventorySnResultExt">
    	select <include refid="whSkuInventorySnColumnsExt" />
				from 
				t_wh_sku_inventory_sn
				where 
				uuid = #{uuid}
				and ou_id = #{ouid} 
				and (occupation_code is null or occupation_code ='')
				and (occupation_line_id is null or occupation_line_id ='')
				and status='1'
    </select>
    
    <select id="findWhSkuInventoryByUuidLeftJoinForeignKey" resultMap="WhSkuInventorySnCommandResultExt">
	    	select 
				sn.sn as sn,
				sn.occupation_code as occupationCode,
				sn.defect_ware_barcode as defectWareBarcode,
				sn.defect_source as defectSource,
				sn.defect_type_id as defectTypeId,
				sn.defect_reasons_id as defectReasonsId,
				sn.status as status,
				sn.inv_attr as invAttr,
				sn.uuid as uuid,
				sn.ou_id as ouId,
				sn.sys_uuid as sysUuid,
				stype.name as storeDefectTypeName,
				srea.name as storeDefectReasonsName,
				wtype.name as whDefectTypeName,
				wrea.name as whDefectReasonsName
				from t_wh_sku_inventory_sn sn 
				left join t_bi_store_defect_type stype on stype.id = sn.defect_type_id 
				left join t_bi_store_defect_reasons srea on srea.id = sn.defect_reasons_id
				left join t_wh_defect_type wtype on wtype.id = sn.defect_type_id 
				left join t_wh_defect_reasons wrea on wrea.id = sn.defect_reasons_id
				where 
				sn.uuid = #{uuid}
				and sn.ou_id = #{ouid} 
    </select>
    
    <select id="findWhSkuInventorySnByIdAndOuId" resultMap="WhSkuInventorySnCommandResultExt">
	    	select 
				sn.sn as sn,
				sn.occupation_code as occupationCode,
				sn.defect_ware_barcode as defectWareBarcode,
				sn.defect_source as defectSource,
				sn.defect_type_id as defectTypeId,
				sn.defect_reasons_id as defectReasonsId,
				sn.status as status,
				sn.inv_attr as invAttr,
				sn.uuid as uuid,
				sn.ou_id as ouId,
				sn.sys_uuid as sysUuid,
				stype.name as storeDefectTypeName,
				srea.name as storeDefectReasonsName,
				wtype.name as whDefectTypeName,
				wrea.name as whDefectReasonsName
				from t_wh_sku_inventory_sn sn 
				left join t_bi_store_defect_type stype on stype.id = sn.defect_type_id 
				left join t_bi_store_defect_reasons srea on srea.id = sn.defect_reasons_id
				left join t_wh_defect_type wtype on wtype.id = sn.defect_type_id 
				left join t_wh_defect_reasons wrea on wrea.id = sn.defect_reasons_id
				where 
				sn.id = #{id}
				and sn.ou_id = #{ouId} 
    </select>
    
    <update id="updateWhSkuInventorySnUuid">
		update t_wh_sku_inventory_sn sn 
			set sn.uuid = #{newuuid},
			sn.sys_uuid = null 
			where 
			sn.uuid = #{uuid} 
			and sn.ou_id = #{ouid}
			and sn.sys_uuid = #{sysuuid}
	</update>
	
	<select id="findWhSkuInventoryByUuidAndSnOrDefectWareBarcode" resultMap="WhSkuInventorySnResultExt">
    	select <include refid="whSkuInventorySnColumnsExt" />
				from 
				t_wh_sku_inventory_sn
				where 
				uuid = #{uuid}
				and ou_id = #{ouid} 
				and (sn = #{snCode} or defect_ware_barcode = #{snCode})
    </select>
    
    <select id="findWhSkuInventorySnByUuidAndSysUuid" resultMap="WhSkuInventorySnResultExt">
    	select <include refid="whSkuInventorySnColumnsExt" />
				from 
				t_wh_sku_inventory_sn
				where 
				uuid = #{uuid}
				and ou_id = #{ouid} 
				and sys_uuid = #{sysuuid}
    </select>

    <select id="findInvSnIdStrByInsideContainerId" resultType="string">
        select
            CONCAT_WS(',', IFNULL(t_wh_sku_inventory.id,"null"), IFNULL(t_wh_sku_inventory_sn.id, "null")) as str
        from t_wh_sku_inventory
            #残次库存
        left join t_wh_sku_inventory_sn
            on t_wh_sku_inventory.uuid = t_wh_sku_inventory_sn.uuid
        where t_wh_sku_inventory.ou_id = #{ouId}
            and t_wh_sku_inventory.inside_container_id in
        <foreach item="insideContainerId" index="index" collection="insideContainerIdList" open="(" separator="," close=")">
            #{insideContainerId}
        </foreach>
	</select>
	
	<select id="findInvSnByAsnCodeAndUuid" resultMap="WhSkuInventorySnCommandResultExt">
		select 
			sn.id as id,
			sn.sn as sn,
			sn.occupation_code as occupationCode,
			sn.defect_ware_barcode as defectWareBarcode,
			sn.defect_source as defectSource,
			sn.defect_type_id as defectTypeId,
			sn.defect_reasons_id as defectReasonsId,
			sn.status as status,
			sn.inv_attr as invAttr,
			sn.uuid as uuid,
			sn.ou_id as ouId,
			sn.sys_uuid as sysUuid,
			stype.code as storeDefectTypeCode,
			srea.code as storeDefectReasonsCode,
			wtype.code as whDefectTypeCode,
			wrea.code as whDefectReasonsCode
		from 
			t_wh_sku_inventory_sn sn
			left join t_bi_store_defect_type stype on stype.id = sn.defect_type_id 
			left join t_bi_store_defect_reasons srea on srea.id = sn.defect_reasons_id
			left join t_wh_defect_type wtype on wtype.id = sn.defect_type_id 
			left join t_wh_defect_reasons wrea on wrea.id = sn.defect_reasons_id
		where 
			sn.occupation_code = #{asnCode}
			and sn.uuid = #{uuid}
			and sn.ou_id = #{ouId} 
	</select>
	
	<select id="findInvSnByOccupationCodeAndUuid" resultMap="WhSkuInventorySnCommandResultExt">
    	select 
    		<include refid="whSkuInventorySnColumnsExt" />
		from 
			t_wh_sku_inventory_sn
		where 
			<if test="occupationCode!=null and occupationCode!=''">
				occupation_code = #{occupationCode}
			</if>
			<if test="occupationCode==null or occupationCode==''">
				occupation_code is null
			</if>
			and uuid = #{uuid} 
			and ou_id = #{ouid} 
    </select>
	
	<select id="findCountSnByuuid" resultType="long">
	    select count(1)
	    from t_wh_sku_inventory_sn
	    where uuid = #{uuid}
	          ou_id = #{ouId}
	 </select>
</mapper>
