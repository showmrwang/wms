<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.inventory.WhSkuInventoryDao">
	<resultMap id="WhSkuInventoryResultExt" type="com.baozun.scm.primservice.whoperation.model.warehouse.inventory.WhSkuInventory">
	</resultMap>
	<resultMap id="RcvdContainerCacheCommand" type="com.baozun.scm.primservice.whoperation.command.pda.rcvd.RcvdContainerCacheCommand">
	</resultMap>
	<resultMap id="locationCommandResultExt" type="com.baozun.scm.primservice.whoperation.command.warehouse.LocationCommand">
	</resultMap>
	<resultMap id="ContainerCommandResultExt" type="com.baozun.scm.primservice.whoperation.command.warehouse.ContainerCommand">
	</resultMap>
		
	<resultMap id="WhSkuInventoryCommandResultExt" type="com.baozun.scm.primservice.whoperation.command.warehouse.inventory.WhSkuInventoryCommand">
	</resultMap>
	
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whSkuInventoryColumnsExt">
	    <![CDATA[
	        	id as id,
	        	sku_id as skuId,
	        	location_id as locationId,
	        	outer_container_id as outerContainerId,
	        	inside_container_id as insideContainerId,
	        	customer_id as customerId,
	        	store_id as storeId,
	        	occupation_code as occupationCode,
	        	occupation_line_id as occupationLineId,
	        	on_hand_qty as onHandQty,
	        	allocated_qty as allocatedQty,
	        	to_be_filled_qty as toBeFilledQty,
	        	frozen_qty as frozenQty,
	        	inv_status as invStatus,
	        	inv_type as invType,
	        	batch_number as batchNumber,
	        	mfg_date as mfgDate,
	        	exp_date as expDate,
	        	country_of_origin as countryOfOrigin,
	        	inv_attr1 as invAttr1,
	        	inv_attr2 as invAttr2,
	        	inv_attr3 as invAttr3,
	        	inv_attr4 as invAttr4,
	        	inv_attr5 as invAttr5,
	        	uuid as uuid,
	        	is_locked as isLocked,
	        	ou_id as ouId,
	        	occupation_code_source as occupationCodeSource,
	        	inbound_time as inboundTime,
	        	last_modify_time as lastModifyTime
	    ]]>
	</sql>
	
	<sql id="whSkuInventoryColumnsInvExt">
	    <![CDATA[
			inv.id as id,
			inv.sku_id as skuId,
			inv.location_id as locationId,
			inv.outer_container_id as outerContainerId,
			inv.inside_container_id as insideContainerId,
			inv.customer_id as customerId,
			inv.store_id as storeId,
			inv.occupation_code as occupationCode,
			inv.occupation_line_id as occupationLineId,
			inv.on_hand_qty as onHandQty,
			inv.allocated_qty as allocatedQty,
	        inv.to_be_filled_qty as toBeFilledQty,
			inv.frozen_qty as frozenQty,
			inv.inv_status as invStatus,
			inv.inv_type as invType,
			inv.batch_number as batchNumber,
			inv.mfg_date as mfgDate,
			inv.exp_date as expDate,
			inv.country_of_origin as countryOfOrigin,
			inv.inv_attr1 as invAttr1,
			inv.inv_attr2 as invAttr2,
			inv.inv_attr3 as invAttr3,
			inv.inv_attr4 as invAttr4,
			inv.inv_attr5 as invAttr5,
			inv.uuid as uuid,
			inv.is_locked as isLocked,
			inv.ou_id as ouId,
			inv.occupation_code_source as occupationCodeSource,
			inv.inbound_time as inboundTime,
	       	inv.last_modify_time as lastModifyTime
	    ]]>
	</sql>
	
	<sql id="whSkuInventoryDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="skuId!=null">
					and sku_id = #{skuId}
				</if>
	       
				<if test="locationId!=null">
					and location_id = #{locationId}
				</if>
	       
				<if test="outerContainerId!=null">
					and outer_container_id = #{outerContainerId}
				</if>
	       
				<if test="insideContainerId!=null">
					and inside_container_id = #{insideContainerId}
				</if>
	       
				<if test="customerId!=null">
					and customer_id = #{customerId}
				</if>
	       
				<if test="storeId!=null">
					and store_id = #{storeId}
				</if>
	       
	       
		       <if test="occupationCode!=null and occupationCode!=''">
					and occupation_code = #{occupationCode}
				</if>
				
				<if test="occupationLineId!=null and occupationLineId!=''">
					and occupation_line_id = #{occupationLineId}
				</if>
	       
				<if test="onHandQty!=null">
					and on_hand_qty = #{onHandQty}
				</if>
	       
				<if test="allocatedQty!=null">
					and allocated_qty = #{allocatedQty}
				</if>
	       
				<if test="toBeFilledQty!=null">
					and to_be_filled_qty = #{toBeFilledQty}
				</if>
	       
				<if test="frozenQty!=null">
					and frozen_qty = #{frozenQty}
				</if>
	       
				<if test="invStatus!=null">
					and inv_status = #{invStatus}
				</if>
	       
	       
		       <if test="invType!=null and invType!=''">
					and inv_type = #{invType}
				</if>
	       
	       
		       <if test="batchNumber!=null and batchNumber!=''">
					and batch_number = #{batchNumber}
				</if>
	       
				<if test="mfgDate!=null">
					and mfg_date = #{mfgDate}
				</if>
	       
				<if test="expDate!=null">
					and exp_date = #{expDate}
				</if>
	       
	       
		       <if test="countryOfOrigin!=null and countryOfOrigin!=''">
					and country_of_origin = #{countryOfOrigin}
				</if>
	       
	       
		       <if test="invAttr1!=null and invAttr1!=''">
					and inv_attr1 = #{invAttr1}
				</if>
	       
	       
		       <if test="invAttr2!=null and invAttr2!=''">
					and inv_attr2 = #{invAttr2}
				</if>
	       
	       
		       <if test="invAttr3!=null and invAttr3!=''">
					and inv_attr3 = #{invAttr3}
				</if>
	       
	       
		       <if test="invAttr4!=null and invAttr4!=''">
					and inv_attr4 = #{invAttr4}
				</if>
	       
	       
		       <if test="invAttr5!=null and invAttr5!=''">
					and inv_attr5 = #{invAttr5}
				</if>
	       
	       
		       <if test="uuid!=null and uuid!=''">
					and uuid = #{uuid}
				</if>
	       
				<if test="isLocked!=null">
					and is_locked = #{isLocked}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
		</where>
	</sql>
	
	
	<sql id="whSkuInventoryCommandMapExt">
	    <![CDATA[
			t.id as id,
			t.sku_id as sku_id,
			t.location_id as location_id,
			t.outer_container_id as outer_container_id,
			t.inside_container_id as inside_container_id,
			t.customer_id as customer_id,
			t.store_id as store_id,
			t.occupation_code as occupation_code,
			t.on_hand_qty as on_hand_qty,
			t.allocated_qty as allocated_qty,
			t.to_be_filled_qty as to_be_filled_qty,
			t.frozen_qty as frozen_qty,
			t.inv_status as inv_status,
			t.on_hand_qty+t.to_be_filled_qty+t.allocated_qty+t.frozen_qty as qty,
			t.inv_type as inv_type,
			t.batch_number as batch_number,
			t.mfg_date as mfg_date,
			t.exp_date as exp_date,
			t.country_of_origin as country_of_origin,
			t.inv_attr1 as inv_attr1,
			t.inv_attr2 as inv_attr2,
			t.inv_attr3 as inv_attr3,
			t.inv_attr4 as inv_attr4,
			t.inv_attr5 as inv_attr5,
			t.uuid as uuid,
			t.is_locked as is_locked,
			t.ou_id as ou_id,
			t.occupation_code_source as occupation_code_source,
			t.inbound_time as inbound_time,
	        t.last_modify_time as last_modify_time,
			sku.code as skuCode,
			sku.name as skuName,
			l.code as locationCode,
			cout.code as outerContainerCode,
			iout.code as insideContainerCode,
			invstatus.name as invstatusName
	    ]]>
	</sql>
	
	<sql id="whSkuInventoryCommandMergeExt">
	    <![CDATA[
	    	t.id as id,
			t.sku_id as skuId,
			t.location_id as locationId,
			t.outer_container_id as outerContainerId,
			t.inside_container_id as insideContainerId,
			t.customer_id as customerId,
			t.store_id as storeId,
			t.occupation_code as occupationCode,
			sum(t.on_hand_qty) as onHandQty,
			sum(t.allocated_qty) as allocatedQty,
			sum(t.to_be_filled_qty) as toBeFilledQty,
			sum(t.frozen_qty) as frozenQty,
			t.inv_status as invStatus,
			sum(t.qty) as qty,
			t.inv_type as invType,
			t.batch_number as batchNumber,
			date_format(t.mfg_date,'%Y-%m-%d %T') as mfgDateStr,
			date_format(t.exp_date,'%Y-%m-%d %T') as expDateStr,
			t.mfg_date as mfgDate,
			t.exp_date as expDate,
			t.country_of_origin as countryOfOrigin,
			t.inv_attr1 as invAttr1,
			t.inv_attr2 as invAttr2,
			t.inv_attr3 as invAttr3,
			t.inv_attr4 as invAttr4,
			t.inv_attr5 as invAttr5,
			t.uuid as uuid,
			t.is_locked as isLocked,
			t.ou_id as ouId,
			t.occupation_code_source as occupationCodeSource,
			t.inbound_time as inboundTime,
	        t.last_modify_time as lastModifyTime,
			t.skuCode as skuCode,
			t.skuName as skuName,
			t.locationCode as locationCode,
			t.outerContainerCode as outerContainerCode,
			t.insideContainerCode as insideContainerCode,
			t.invstatusName as invstatusName
	    ]]>
	</sql>
	
		<sql id="findListByQueryMapWithPageWhereExt">
		<where>
	       		t.ou_id = #{ouId}
	       		<!-- 库位号 -->
				<if test="locationCode!=null and locationCode!=''">
					 and l.code like #{locationCode}
				</if>
	       		<!-- 库位号 -->
				<if test="locationCodeData!=null and locationCodeData!=''">
					 and l.code like #{locationCodeData}
				</if>
				<!-- 外部容器号 -->
				<if test="outerContainer!=null and outerContainer!=''">
					 and cout.code like #{outerContainer}
				</if>
				<!-- 外部容器号 -->
				<if test="outerContainerData!=null and outerContainerData!=''">
					 and cout.code like #{outerContainerData}
				</if>
				<!-- 内部容器号 -->
				<if test="insideContainer!=null and insideContainer!=''">
					 and iout.code like #{insideContainer}
				</if>
				<!-- 内部容器号 -->
				<if test="insideContainerData!=null and insideContainerData!=''">
					 and iout.code like #{insideContainerData}
				</if>
				<!-- 商品编码 -->
				<if test="skuCode!=null and skuCode!=''">
					 and sku.code like #{skuCode}
				</if>
				<!-- 商品名称 -->
				<if test="skuName!=null  and skuName!=''">
					 and sku.name like #{skuName}
				</if>
				<!-- 客户名称 -->
				<if test="customerName!=null and customerName!=''">
					 and t.customer_id = #{customerName}
				</if>
				<!-- 店铺名称 -->
				<if test="storeName!=null and storeName!=''">
					 and t.store_id = #{storeName}
				</if>
				<!-- 库存状态 -->
				<if test="invsStatus!=null and invsStatus!=''">
					 and t.inv_status = #{invsStatus}
				</if>
				<!-- 库存类型 -->
				<if test="invType!=null and invType!=''">
					 and t.inv_type = #{invType}
				</if>
				<!-- 批次号 -->
				<if test="batchNumber!=null and batchNumber!=''">
					 and t.batch_number like #{batchNumber}
				</if>
				<!-- 生产日期 -->
				<if test="mfgDate!=null and mfgDate!=''">
					 and t.mfg_date &gt;= #{mfgDate}
				</if>
				<!-- 失效日期 -->
				<if test="expDate!=null and expDate!=''">
					 and t.exp_date &lt;= #{expDate}
				</if>
				<!-- 原产地 -->
				<if test="countryOfOrigin!=null and countryOfOrigin!=''">
					 and t.country_of_origin = #{countryOfOrigin}
				</if>
				<!-- 库存属性1 -->
				<if test="invattr1!=null and invattr1!=''">
					 and t.inv_attr1 = #{invattr1}
				</if>
				<!-- 库存属性2 -->
				<if test="invattr2!=null and invattr2!=''">
					 and t.inv_attr2 = #{invattr2}
				</if>
				<!-- 库存属性3 -->
				<if test="invattr3!=null and invattr3!=''">
					 and t.inv_attr3 = #{invattr3}
				</if>
				<!-- 库存属性4 -->
				<if test="invattr4!=null and invattr4!=''">
					 and t.inv_attr4 = #{invattr4}
				</if>
				<!-- 库存属性5 -->
				<if test="invattr5!=null and invattr5!=''">
					 and t.inv_attr5 = #{invattr5}
				</if>
		</where>
	</sql>
	

	<select id="findListCountByQueryMapExt" resultType="long">
		select count(t.uuid) from (
			select <include refid="whSkuInventoryCommandMergeExt" />
		from (
		    	select <include refid="whSkuInventoryCommandMapExt" />
					from 
						t_wh_sku_inventory t 
						left join t_wh_sku sku on t.sku_id = sku.id 
						left join t_wh_location l on t.location_id = l.id 
						left join t_wh_container cout on t.outer_container_id = cout.id 
						left join t_wh_container iout on t.inside_container_id = iout.id 
						left join t_wh_inventory_status invstatus on t.inv_status = invstatus.id
						<include refid="findListByQueryMapWithPageWhereExt"/> )
			t group by t.uuid) t
    </select>
	
	
	<select id="findListByQueryMapWithPageExt" resultMap="WhSkuInventoryCommandResultExt">
		select <include refid="whSkuInventoryCommandMergeExt" />
			from (
			    	select <include refid="whSkuInventoryCommandMapExt" />
						from 
							t_wh_sku_inventory t 
							left join t_wh_sku sku on t.sku_id = sku.id 
							left join t_wh_location l on t.location_id = l.id 
							left join t_wh_container cout on t.outer_container_id = cout.id 
							left join t_wh_container iout on t.inside_container_id = iout.id 
							left join t_wh_inventory_status invstatus on t.inv_status = invstatus.id
						<include refid="findListByQueryMapWithPageWhereExt"/> )
			t group by t.uuid
    </select>
    
    <sql id="findWhSkuInventoryByIdAndUuidColumns">
	    <![CDATA[
			inv.id as id,
			inv.sku_id as skuId,
			inv.location_id as locationId,
			inv.outer_container_id as outerContainerId,
			inv.inside_container_id as insideContainerId,
			inv.customer_id as customerId,
			inv.store_id as storeId,
			inv.occupation_code as occupationCode,
			inv.on_hand_qty as onHandQty,
			inv.allocated_qty as allocatedQty,
			inv.to_be_filled_qty as toBeFilledQty,
			inv.frozen_qty as frozenQty,
			inv.inv_status as invStatus,
			inv.inv_type as invType,
			inv.batch_number as batchNumber,
			inv.mfg_date as mfgDate,
			inv.exp_date as expDate,
			inv.country_of_origin as countryOfOrigin,
			inv.inv_attr1 as invAttr1,
			inv.inv_attr2 as invAttr2,
			inv.inv_attr3 as invAttr3,
			inv.inv_attr4 as invAttr4,
			inv.inv_attr5 as invAttr5,
			inv.uuid as uuid,
			inv.is_locked as isLocked,
			inv.ou_id as ouId,
			inv.occupation_code_source as occupationCodeSource,
			inv.inbound_time as inboundTime,
	        inv.last_modify_time as lastModifyTime,
			l.code as locationCode,
			cout.code as outerContainerCode,
			iout.code as insideContainerCode,
			cust.customer_name as customerName,
			store.store_name as storeName,
			sku.code as skuCode,
			sku.name as skuName
	    ]]>
	</sql>
    
    
	<select id="findWhSkuInventoryByIdAndUuid" resultMap="WhSkuInventoryCommandResultExt">
		select <include refid="findWhSkuInventoryByIdAndUuidColumns" />
			from t_wh_sku_inventory inv 
				left join t_wh_location l on inv.location_id = l.id 
				left join t_wh_container cout on inv.outer_container_id = cout.id 
				left join t_wh_container iout on inv.inside_container_id = iout.id 
				left join t_bi_customer cust on inv.customer_id = cust.id 
				left join t_bi_store store on inv.store_id = store.id 
				left join t_wh_sku sku on inv.sku_id = sku.id 
				<where>
				inv.id = #{id} 
	       		and inv.ou_id = #{ouid} 
				<if test="uuid!=null and uuid!=''">
					 and inv.uuid = #{uuid}
				</if>
		</where>
    </select>
    
    <select id="findWhSkuInventoryByContainerId" resultMap="WhSkuInventoryCommandResultExt">
		select <include refid="findWhSkuInventoryByIdAndUuidColumns" />
			from t_wh_sku_inventory inv 
				left join t_wh_location l on inv.location_id = l.id 
				left join t_wh_container cout on inv.outer_container_id = cout.id 
				left join t_wh_container iout on inv.inside_container_id = iout.id 
				left join t_bi_customer cust on inv.customer_id = cust.id 
				left join t_bi_store store on inv.store_id = store.id 
				left join t_wh_sku sku on inv.sku_id = sku.id 
				<where>
	       		inv.ou_id = #{ouid}
	       		<if test="containerId!=null and containerId!=''">
	       			<!-- containerFlag==0查询外部容器 -->
		       		<if test="containerFlag==0">
						 and inv.outer_container_id = #{containerId}
					</if>
					<!-- containerFlag==0查询内部容器 -->
					<if test="containerFlag==1">
						 and inv.inside_container_id = #{containerId}
					</if>
	       		</if>
				</where>
    </select>
    
    <select id="findWhSkuInventoryByContainerCode" resultMap="WhSkuInventoryCommandResultExt">
			select 
					inv.id as id,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as occupationCode,
					inv.on_hand_qty as onHandQty,
					inv.frozen_qty as frozenQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as uuid,
					inv.is_locked as isLocked,
					inv.ou_id as ouId,
					inv.occupation_code_source as occupationCodeSource,
					inv.inbound_time as inboundTime,
	        		inv.last_modify_time as lastModifyTime
					from 
					t_wh_sku_inventory inv 
					left join t_wh_container c on c.id = inv.outer_container_id
					where 
					inv.ou_id = #{ouid}
					and c.code in 
					<foreach item="item" index="index" collection="containerList" open="(" separator="," close=")">
			            #{item}
			        </foreach>
    </select>
    
    <select id="findWhSkuInventoryByOuterContainerCode" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.on_hand_qty as onHandQty,
					inv.frozen_qty as frozenQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.is_locked as isLocked,
					inv.ou_id as invOuId,
					inv.occupation_code_source as occupationCodeSource,
					inv.inbound_time as inboundTime,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,	
					t_wh_sku_inventory inv
					left join t_wh_container c on c.id = inv.outer_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null 
						and inv.location_id is null 
						and asn.asn_code = inv.occupation_code
						and (asn.status=5 or asn.status=10)
					    and inv.ou_id = #{ouid}
					and c.code in 
					<foreach item="item" index="index" collection="containerList" open="(" separator="," close=")">
			            #{item}
			        </foreach>
    </select>
    
    <select id="findLocToBeFilledInventoryByOuterContainerCode" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.on_hand_qty as onHandQty,
					inv.allocated_qty as allocatedQty,
					inv.to_be_filled_qty as toBeFilledQty,
					inv.frozen_qty as frozenQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.is_locked as isLocked,
					inv.ou_id as invOuId,
					inv.occupation_code_source as occupationCodeSource,
					inv.inbound_time as inboundTime,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,	
					t_wh_sku_inventory inv
					left join t_wh_container c on c.id = inv.outer_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null and inv.location_id is not null
						and asn.asn_code = inv.occupation_code
						and (asn.status=5 or asn.status=10)
						and inv.to_be_filled_qty > 0.0
					    and inv.ou_id = #{ouid}
					and c.code in 
					<foreach item="item" index="index" collection="containerList" open="(" separator="," close=")">
			            #{item}
			        </foreach>
    </select>


	<resultMap id="WhSkuInventoryCommandSnResultExt"
		type="com.baozun.scm.primservice.whoperation.command.warehouse.inventory.WhSkuInventoryCommand">
		<result property="id" column="invId"/>
		<result property="skuId" column="skuId"/>
		<result property="locationId" column="locationId"/>
		<result property="outerContainerId" column="outerContainerId"/>
		<result property="insideContainerId" column="insideContainerId"/>
		<result property="customerId" column="customerId"/>
		<result property="storeId" column="storeId"/>
		<result property="occupationCode" column="invOccupationCode"/>
		<result property="occupationLineId" column="invOccupationLineId"/>
		<result property="onHandQty" column="onHandQty"/>
		<result property="allocatedQty" column="allocatedQty"/>
		<result property="toBeFilledQty" column="toBeFilledQty"/>
		<result property="frozenQty" column="frozenQty"/>
		<result property="invStatus" column="invStatus"/>
		<result property="invType" column="invType"/>
		<result property="batchNumber" column="batchNumber"/>
		<result property="mfgDate" column="mfgDate"/>
		<result property="expDate" column="expDate"/>
		<result property="countryOfOrigin" column="countryOfOrigin"/>
		<result property="invAttr1" column="invAttr1"/>
		<result property="invAttr2" column="invAttr2"/>
		<result property="invAttr3" column="invAttr3"/>
		<result property="invAttr4" column="invAttr4"/>
		<result property="invAttr5" column="invAttr5"/>
		<result property="uuid" column="invUuid"/>
		<result property="isLocked" column="isLocked"/>
		<result property="ouId" column="invOuId"/>
		<result property="occupationCodeSource" column="occupationCodeSource"/>
		<result property="inboundTime" column="inboundTime"/>
		<result property="lastModifyTime" column="lastModifyTime"/>
		<collection property="whSkuInventorySnCommandList"
			ofType="com.baozun.scm.primservice.whoperation.command.warehouse.inventory.WhSkuInventorySnCommand">
			<id property="id" column="snId"/>
			<result property="sn" column="snSn" />
			<result property="occupationCode" column="snOccupationCode" />
			<result property="defectWareBarcode" column="snDefectWareBarcode" />
			<result property="defectSource" column="snDefectSource" />
			<result property="defectTypeId" column="snDefectTypeId" />
			<result property="defectReasonsId" column="snDefectReasonsId" />
			<result property="status" column="snStatus" />
			<result property="invAttr" column="snInvAttr" />
			<result property="uuid" column="snUuid" />
			<result property="ouId" column="snOuId" />
			<result property="sysUuid" column="snSysUuid" />
		</collection>
	</resultMap>
    
    <select id="findWhSkuInventoryByInsideContainerCode" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.on_hand_qty as onHandQty,
					inv.allocated_qty as allocatedQty,
					inv.to_be_filled_qty as toBeFilledQty,
					inv.frozen_qty as frozenQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.is_locked as isLocked,
					inv.ou_id as invOuId,
					inv.occupation_code_source as occupationCodeSource,
					inv.inbound_time as inboundTime,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,	
					t_wh_sku_inventory inv
					left join t_wh_container c on c.id = inv.inside_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null
						and asn.asn_code = inv.occupation_code
						and (asn.status=5 or asn.status=10)
					    and inv.ou_id = #{ouid}
					and c.code in 
					<foreach item="item" index="index" collection="containerList" open="(" separator="," close=")">
			            #{item}
			        </foreach>
    </select>
    
    <select id="findContainerOnHandInventoryByOuterContainerId" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.occupation_line_id as invOccupationLineId,
					inv.on_hand_qty as onHandQty,
					inv.frozen_qty as frozenQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.is_locked as isLocked,
					inv.ou_id as invOuId,
					inv.occupation_code_source as occupationCodeSource,
					inv.inbound_time as inboundTime,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,	
					t_wh_sku_inventory inv
					left join t_wh_container c on c.id = inv.outer_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null and inv.location_id is null
						and asn.asn_code = inv.occupation_code
						and (asn.status=5 or asn.status=10)
						and inv.on_hand_qty > 0.0
					    and inv.ou_id = #{ouId}
						and c.id = #{outerContainerId}
    </select>
    
    <select id="findLocToBeFilledInventoryByOuterContainerId" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.occupation_line_id as invOccupationLineId,
					inv.qty as toBeFilledQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.ou_id as invOuId,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,	
					t_wh_sku_inventory_tobefilled inv
					left join t_wh_container c on c.id = inv.outer_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null and inv.location_id is not null
						and asn.asn_code = inv.occupation_code
						and (asn.status=5 or asn.status=10)
						and inv.qty > 0.0
					    and inv.ou_id = #{ouId}
						and c.id = #{outerContainerId}
    </select>
    
    <select id="findLocToBeFilledInventoryByOuterContainerIdAndLocId" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.occupation_line_id as invOccupationLineId,
					inv.qty as toBeFilledQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.ou_id as invOuId,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,	
					t_wh_location loc,
					t_wh_sku_inventory_tobefilled inv
					left join t_wh_container c on c.id = inv.outer_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null and inv.location_id is not null
						and asn.asn_code = inv.occupation_code
						and (asn.status=5 or asn.status=10)
						and inv.location_id = loc.id
						and inv.ou_id = loc.ou_id
						and inv.qty > 0.0
					    and inv.ou_id = #{ouId}
					    and loc.id = #{locId}
						and c.id = #{outerContainerId}
    </select>
    
     <select id="findLocToBeFilledInventoryCountsByOuterContainerId" resultType="Integer">
		select count(1) from t_wh_sku_inventory_tobefilled inv,t_wh_asn asn where inv.occupation_code is not null and inv.location_id is not null and inv.qty > 0.0 
			and inv.ou_id=#{ouId}
			and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
			and inv.outer_container_id=#{outerContainerId}
	</select>
    
    <select id="findContainerOnHandInventoryByInsideContainerCode" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.on_hand_qty as onHandQty,
					inv.frozen_qty as frozenQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.is_locked as isLocked,
					inv.ou_id as invOuId,
					inv.occupation_code_source as occupationCodeSource,
					inv.inbound_time as inboundTime,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,	
					t_wh_sku_inventory inv
					left join t_wh_container c on c.id = inv.inside_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null and inv.location_id is null 
						and asn.asn_code = inv.occupation_code
						and (asn.status=5 or asn.status=10)
						and inv.on_hand_qty > 0.0
					    and inv.ou_id = #{ouid}
					and c.code in 
					<foreach item="item" index="index" collection="containerList" open="(" separator="," close=")">
			            #{item}
			        </foreach>
    </select>
    
    <select id="findLocToBeFilledInventoryByInsideContainerCode" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.on_hand_qty as onHandQty,
					inv.allocated_qty as allocatedQty,
					inv.to_be_filled_qty as toBeFilledQty,
					inv.frozen_qty as frozenQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.is_locked as isLocked,
					inv.ou_id as invOuId,
					inv.occupation_code_source as occupationCodeSource,
					inv.inbound_time as inboundTime,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,	
					t_wh_sku_inventory inv
					left join t_wh_container c on c.id = inv.inside_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null and inv.location_id is not null 
						and asn.asn_code = inv.occupation_code
						and (asn.status=5 or asn.status=10)
						and inv.to_be_filled_qty > 0.0
					    and inv.ou_id = #{ouid}
					and c.code in 
					<foreach item="item" index="index" collection="containerList" open="(" separator="," close=")">
			            #{item}
			        </foreach>
    </select>
    
    <select id="findContainerOnHandInventoryByInsideContainerId" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.occupation_line_id as invOccupationLineId,
					inv.on_hand_qty as onHandQty,
					inv.frozen_qty as frozenQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.is_locked as isLocked,
					inv.ou_id as invOuId,
					inv.occupation_code_source as occupationCodeSource,
					inv.inbound_time as inboundTime,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,	
					t_wh_sku_inventory inv
					left join t_wh_container c on c.id = inv.inside_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null and inv.location_id is null 
						and asn.asn_code = inv.occupation_code
						and (asn.status=5 or asn.status=10)
						and inv.on_hand_qty > 0.0
					    and inv.ou_id = #{ouId}
						and c.id = #{insideContainerId}
    </select>
    
    <select id="findLocToBeFilledInventoryByInsideContainerId" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.occupation_line_id as invOccupationLineId,
					inv.qty as toBeFilledQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.ou_id as invOuId,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,	
					t_wh_sku_inventory_tobefilled inv
					left join t_wh_container c on c.id = inv.inside_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null and inv.location_id is not null 
						and asn.asn_code = inv.occupation_code
						and (asn.status=5 or asn.status=10)
						and inv.qty > 0.0
					    and inv.ou_id = #{ouId}
						and c.id = #{insideContainerId}
    </select>
    
    <select id="findLocToBeFilledInventoryCountsByInsideContainerId" resultType="Integer">
		select count(1) from t_wh_sku_inventory_tobefilled inv,t_wh_asn asn where inv.occupation_code is not null and inv.location_id is not null and inv.qty > 0.0 
			and inv.ou_id=#{ouId}
			and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
			and inv.inside_container_id=#{insideContainerId}
	</select>
    
    <select id="findWhSkuInventoryByInsideContainerCodeAndLoc" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.on_hand_qty as onHandQty,
					inv.allocated_qty as allocatedQty,
					inv.to_be_filled_qty as toBeFilledQty,
					inv.frozen_qty as frozenQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.is_locked as isLocked,
					inv.ou_id as invOuId,
					inv.occupation_code_source as occupationCodeSource,
					inv.inbound_time as inboundTime,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,
					t_wh_location loc,	
					t_wh_sku_inventory inv
					left join t_wh_container c on c.id = inv.inside_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null 
						and asn.asn_code = inv.occupation_code
						and inv.location_id = loc.id
						and inv.ou_id = loc.ou_id
						and (asn.status=5 or asn.status=10)
					    and inv.ou_id = #{ouid}
					    and loc.id = #{locid}
					and c.code in 
					<foreach item="item" index="index" collection="containerList" open="(" separator="," close=")">
			            #{item}
			        </foreach>
    </select>
    
    <select id="findLocToBeFilledInventoryByInsideContainerCodeAndLoc" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.on_hand_qty as onHandQty,
					inv.allocated_qty as allocatedQty,
					inv.to_be_filled_qty as toBeFilledQty,
					inv.frozen_qty as frozenQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.is_locked as isLocked,
					inv.ou_id as invOuId,
					inv.occupation_code_source as occupationCodeSource,
					inv.inbound_time as inboundTime,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,
					t_wh_location loc,	
					t_wh_sku_inventory inv
					left join t_wh_container c on c.id = inv.inside_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null 
						and asn.asn_code = inv.occupation_code
						and inv.location_id = loc.id
						and inv.ou_id = loc.ou_id
						and (asn.status=5 or asn.status=10)
						and inv.to_be_filled_qty > 0.0
					    and inv.ou_id = #{ouid}
					    and loc.id = #{locid}
					and c.code in 
					<foreach item="item" index="index" collection="containerList" open="(" separator="," close=")">
			            #{item}
			        </foreach>
    </select>
    
    <select id="findLocToBeFilledInventoryByInsideContainerIdAndLocId" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.occupation_line_id as invOccupationLineId,
					inv.qty as toBeFilledQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.ou_id as invOuId,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,
					t_wh_location loc,	
					t_wh_sku_inventory_tobefilled inv
					left join t_wh_container c on c.id = inv.inside_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null 
						and asn.asn_code = inv.occupation_code
						and inv.location_id = loc.id
						and inv.ou_id = loc.ou_id
						and (asn.status=5 or asn.status=10)
						and inv.qty > 0.0
					    and inv.ou_id = #{ouId}
					    and loc.id = #{locId}
					    and c.id = #{insideContainerId}
    </select>
    
     <select id="findWhSkuInventoryLocByOuterContainerCode" resultMap="locationCommandResultExt">
			select 
					loc.id as id,
					inv.outer_container_id as outerContainerId,
					inv.occupation_code as occupationCode,
					loc.code as code
					from 
					t_wh_sku_inventory inv 
					left join t_wh_container c on c.id = inv.outer_container_id
					left join t_wh_location loc on inv.location_id = loc.id
					where 
					inv.ou_id = #{ouid}
					and c.code in 
					<foreach item="item" index="index" collection="containerList" open="(" separator="," close=")">
			            #{item}
			        </foreach>
			        group by loc.id,inv.outer_container_id,inv.occupation_code,loc.code
    </select>
    
    <select id="findWhSkuInventoryBySkuCodeAndContainerId" resultMap="WhSkuInventoryCommandResultExt">
				select  <include refid="whSkuInventoryColumnsInvExt" />
					from 
					t_wh_sku_inventory inv 
					left join t_wh_sku sku on inv.sku_id = sku.id
					where 
					sku.bar_code = #{skuCode}
					and inv.inside_container_id = #{containerId}  
					and inv.ou_id = #{ouid}
					and inv.location_id is null
				union all
				select  <include refid="whSkuInventoryColumnsInvExt" />
					from 
					t_wh_sku_inventory inv 
					left join t_wh_sku_barcode sku on inv.sku_id = sku.sku_id
					where 
					sku.bar_code = #{skuCode}
					and inv.inside_container_id = #{containerId} 
					and inv.ou_id = #{ouid}
					and inv.location_id is null
    </select>

    
    <select id="findWhSkuInventoryByIdGroupByUuid" resultMap="WhSkuInventoryCommandResultExt">
		select inv.sku_id as skuId, inv.ou_id as ouId, inv.uuid as uuid, 
			sum(inv.on_hand_qty) as onHandQty, sum(inv.allocated_qty) as allocatedQty,
			sum(inv.to_be_filled_qty) as toBeFilledQty,
			sum(inv.frozen_qty) as frozenQty,
			from t_wh_sku_inventory inv 
				<where>
				inv.sku_id = #{skuId} 
	       		and inv.ou_id = #{ouId} 
				<if test="uuid!=null and uuid!=''">
					 and inv.uuid = #{uuid}
				</if>
				and inv.is_locked != 1
				and (inv.occupation_code is null or inv.occupation_code = '')
				</where>
				group by inv.sku_id,inv.ou_id,inv.uuid
    </select>
    
    <select id="findAllValidInventoryBySkuAndUuid" resultMap="WhSkuInventoryCommandResultExt">
		select inv.*,(inv.on_hand_qty) as qty,concat_ws('-',sku.id, store.id, l.id, iout.id) as occupyKey, #{expectQty} as expectQty
			from t_wh_sku_inventory inv 
				left join t_wh_location l on inv.location_id = l.id 
				left join t_wh_container cout on inv.outer_container_id = cout.id 
				left join t_wh_container iout on inv.inside_container_id = iout.id 
				left join t_bi_customer cust on inv.customer_id = cust.id 
				left join t_bi_store store on inv.store_id = store.id 
				left join t_wh_sku sku on inv.sku_id = sku.id 
				<where>
				inv.sku_id = #{skuId} 
	       		and inv.ou_id = #{ouId} 
				<if test="uuid!=null and uuid!=''">
					 and inv.uuid = #{uuid}
				</if>
				and inv.is_locked != 1
				and (inv.occupation_code is null or inv.occupation_code = '')
				</where>
				order by sku.id,store.id,l.id,iout.id,cout.id,cust.id
    </select>
    
    <select id="occupyInvByCodeAndId" resultType="long">
    	update t_wh_sku_inventory inv set inv.on_hand_qty = #{eQty},inv.occupation_code = #{occupyCode}
    	where inv.id = #{id}
    </select>
      
    <select id="validateOccupyByExpectQty" resultMap="WhSkuInventoryCommandResultExt">
    	
    </select>
    
    <select id="releaseOccupiedInventory" resultType="long">
    	
    </select>
    
	<select id="findWhSkuInventoryById" resultMap="WhSkuInventoryResultExt">
				select  <include refid="whSkuInventoryColumnsExt" />
					from 
					t_wh_sku_inventory 
					where 
					id = #{id} 
					and ou_id = #{ouid}
    </select>
    
    <select id="findWhSkuInventoryByUuid" resultMap="WhSkuInventoryResultExt">
				select  <include refid="whSkuInventoryColumnsExt" />
					from 
					t_wh_sku_inventory 
					where 
					uuid = #{uuid} 
					and ou_id = #{ouid}
    </select>
	
	<update id="updateWhSkuInventoryByContainerId" parameterType="com.baozun.scm.primservice.whoperation.command.warehouse.inventory.WhSkuInventoryCommand">
			UPDATE t_wh_sku_inventory SET outer_container_id = #{outerContainerId}
			WHERE inside_container_id  = #{insideContainerId}
			and ou_id = #{ouId}
	</update>
	
			<update id="updateByVersion" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.inventory.WhSkuInventory">
		    <![CDATA[
		        UPDATE t_wh_sku_inventory SET
			       			 sku_id = #{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			       			 location_id = #{locationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			       			 outer_container_id = #{outerContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			       			 inside_container_id = #{insideContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			       			 customer_id = #{customerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			       			 store_id = #{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			       			 occupation_code = #{occupationCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       			 occupation_line_id = #{occupationLineId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			       			 on_hand_qty = #{onHandQty,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			       			 frozen_qty = #{frozenQty,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			       			 inv_status = #{invStatus,javaType=java.lang.Long,jdbcType=BIGINT} ,
			       			 inv_type = #{invType,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       			 batch_number = #{batchNumber,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       			 mfg_date = #{mfgDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			       			 exp_date = #{expDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			       			 country_of_origin = #{countryOfOrigin,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       			 inv_attr1 = #{invAttr1,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       			 inv_attr2 = #{invAttr2,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       			 inv_attr3 = #{invAttr3,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       			 inv_attr4 = #{invAttr4,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       			 inv_attr5 = #{invAttr5,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       			 uuid = #{uuid,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       			 is_locked = #{isLocked,javaType=java.lang.Boolean,jdbcType=BIT} ,
			       			 occupation_code_source = #{occupationCodeSource,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       			 inbound_time = #{inboundTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			       		 	 last_modify_time = now() 	
		        WHERE 
			        id = #{id} 
			        and last_modify_time	=  #{lastModifyTime}
			        and ou_id = #{ouId}
		    ]]>
		</update>
		
		<delete id="deleteWhSkuInventoryById" >
	        delete from t_wh_sku_inventory where
		        id = #{id} and ou_id = #{ouid}
		</delete>
		
		<select id="getUniqueSkuAttrFromWhSkuInventory" resultMap="RcvdContainerCacheCommand">
			SELECT
				INV.inside_container_id as insideContainerId,
				INV.ou_id as ouId,
				INV.sku_id as skuId,
				group_concat(distinct INV.batch_number) as batchNumber,
				group_concat(distinct INV.country_of_origin) as countryOfOrigin,
				group_concat(distinct date_format(INV.exp_date,'%Y-%m-%d')) as expDate,
				group_concat(distinct date_format(INV.mfg_date,'%Y-%m-%d')) as mfgDate,
				group_concat(distinct INV.inv_attr1) as invAttr1,
				group_concat(distinct INV.inv_attr2) as invAttr2,
				group_concat(distinct INV.inv_attr3) as invAttr3,
				group_concat(distinct INV.inv_attr4) as invAttr4,
				group_concat(distinct INV.inv_attr5) as invAttr5,
				group_concat(distinct INV.inv_status) as invStatus,
				group_concat(distinct INV.inv_type) as invType
				from t_wh_sku_inventory INV
			where INV.inside_container_id=#{insideContainerId} and INV.ou_id=#{ouId}
			<if test='skuId!=null'>
			and INV.sku_id=#{skuId}
			</if>
			group by INV.sku_id
		</select>
		
		<select id="findSkuIdListFromInventory" resultType="long">
			SELECT inv.sku_id
				from t_wh_sku_inventory INV
			where INV.inside_container_id=#{insideContainerId} and INV.ou_id=#{ouId}
		</select>
		
		
		<select id="getUniqueSkuAttrCountFromWhSkuInventory" resultType="long">
			SELECT count(*) from (
				select INV.sku_id
					from t_wh_sku_inventory INV
				where INV.inside_container_id=#{insideContainerId} and INV.ou_id=#{ouId}
				<if test='skuId!=null'>
				and INV.sku_id=#{skuId}
				</if>
				group by INV.sku_id
			) skuInv
		</select>
		
	<select id="findWhSkuInventoryBySkuIdAndContainerid" resultMap="WhSkuInventoryCommandResultExt">
		select 	    	
					t.id as id,
					t.sku_id as skuId,
					t.location_id as locationId,
					t.outer_container_id as outerContainerId,
					t.inside_container_id as insideContainerId,
					t.customer_id as customerId,
					t.store_id as storeId,
					t.occupation_code as occupationCode,
					t.on_hand_qty as onHandQty,
					t.allocated_qty as allocatedQty,
					t.to_be_filled_qty as toBeFilledQty,
					t.frozen_qty as frozenQty,
					t.inv_status as invStatus,
					t.inv_type as invType,
					t.batch_number as batchNumber,
					date_format(t.mfg_date,'%Y-%m-%d') as mfgDateStr,
					date_format(t.exp_date,'%Y-%m-%d') as expDateStr,
					t.mfg_date as mfgDate,
					t.exp_date as expDate,
					t.country_of_origin as countryOfOrigin,
					t.inv_attr1 as invAttr1,
					t.inv_attr2 as invAttr2,
					t.inv_attr3 as invAttr3,
					t.inv_attr4 as invAttr4,
					t.inv_attr5 as invAttr5,
					t.uuid as uuid,
					t.is_locked as isLocked,
					t.ou_id as ouId,
					t.occupation_code_source as occupationCodeSource,
					t.inbound_time as inboundTime,
			 	    t.last_modify_time as lastModifyTime,
					sys.dic_label as invTypeName,
					invstatus.name as invstatusName,
					inva1.dic_label as invAttr1Str,
					inva2.dic_label as invAttr2Str,
					inva3.dic_label as invAttr3Str,
					inva4.dic_label as invAttr4Str,
					inva5.dic_label as invAttr5Str			
					from 
						t_wh_sku_inventory t 
						left join t_wh_inventory_status invstatus on t.inv_status = invstatus.id
						left join sys_dictionary sys on t.inv_type = sys.dic_value and sys.group_value = 'INVENTORY_TYPE'
						left join sys_dictionary inva1 on t.inv_attr1 = inva1.dic_value and inva1.group_value = 'INVENTORY_ATTR_1' 
						left join sys_dictionary inva2 on t.inv_attr2 = inva2.dic_value and inva2.group_value = 'INVENTORY_ATTR_2' 
						left join sys_dictionary inva3 on t.inv_attr3 = inva3.dic_value and inva3.group_value = 'INVENTORY_ATTR_3' 
						left join sys_dictionary inva4 on t.inv_attr4 = inva4.dic_value and inva4.group_value = 'INVENTORY_ATTR_4' 
						left join sys_dictionary inva5 on t.inv_attr5 = inva5.dic_value and inva5.group_value = 'INVENTORY_ATTR_5' 
					<where>
						t.sku_id = #{skuid} 
						and t.ou_id = #{ouid} 
						and t.location_id is null 
						<if test="insideContainerid != null">
							and t.inside_container_id = #{insideContainerid} 
						</if>
						<if test="outerContainerid != null">
							and t.outer_container_id = #{outerContainerid} 
						</if>
					</where>
    </select>
    
   <select id="findWhSkuInventoryBySkuAttr" resultMap="WhSkuInventoryCommandResultExt" parameterType="com.baozun.scm.primservice.whoperation.command.warehouse.inventory.WhSkuInventoryCommand">
				select  <include refid="whSkuInventoryColumnsExt" />
					from 
					t_wh_sku_inventory 
				<where>
					ou_id = #{ouId} 
					and sku_id = #{skuId} 
					and inside_container_id = #{insideContainerId} 
					and location_id is null 
					<if test="countryOfOrigin != null and countryOfOrigin!=''">
						and country_of_origin = #{countryOfOrigin}
					</if>
					<if test="mfgDateStr != null and mfgDateStr !=''">
						and mfg_date = #{mfgDateStr}
					</if>
					<if test="expDateStr != null and expDateStr !=''">
						and exp_date = #{expDateStr}
					</if>
					<if test="batchNumber != null and batchNumber!=''">
						and batch_number = #{batchNumber}
					</if>
					<if test="invAttr1 != null and invAttr1!=''">
						and inv_attr1 = #{invAttr1}
					</if>
					<if test="invAttr2 != null and invAttr2!=''">
						and inv_attr2 = #{invAttr2}
					</if>
					<if test="invAttr3 != null and invAttr3!=''">
						and inv_attr3 = #{invAttr3}
					</if>
					<if test="invAttr4 != null and invAttr4!=''">
						and inv_attr4 = #{invAttr4}
					</if>
					<if test="invAttr5 != null and invAttr5!=''">
						and inv_attr5 = #{invAttr5}
					</if>
					<if test="invStatus != null and invStatus!=''">
						and inv_status = #{invStatus}
					</if>
					<if test="invType != null and invType!=''">
						and inv_type = #{invType}
					</if>
				</where>
    </select>
    
    <select id="findRcvdInventoryCountsByOuterContainerId" resultType="Integer">
		select count(1) from t_wh_sku_inventory inv,t_wh_asn asn where inv.occupation_code is not null
			and inv.ou_id=#{ouId}
			and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
			and inv.outer_container_id=#{outerContainerId}
	</select>
	
	 <select id="findRcvdInventoryCountsByInsideContainerId" resultType="Integer">
		select count(1) from t_wh_sku_inventory inv,t_wh_asn asn where inv.occupation_code is not null 
			and inv.ou_id=#{ouId}
			and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
			and inv.inside_container_id=#{insideContainerId}
	</select>
	
	<select id="findAllInventoryCountsByInsideContainerId"  resultType="Integer">
		select count(*)
		from
		t_wh_sku_inventory as inv
		where
		inv.ou_id = #{ouId}
		and inv.inside_container_id = #{insideContainerId}
	</select>
	
	 <select id="findRcvdInventoryCountsByInsideContainerId1" resultType="Integer">
		select count(1) from t_wh_sku_inventory inv,t_wh_asn asn where inv.occupation_code is not null and inv.outer_container_id is not null
			and inv.ou_id=#{ouId}
			and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
			and inv.inside_container_id=#{insideContainerId} 
	</select>
	
	 <select id="findLocTobefilledInventoryCountsByInsideContainerId1" resultType="Integer">
		select count(1) from t_wh_sku_inventory_tobefilled inv,t_wh_asn asn where inv.occupation_code is not null and inv.outer_container_id is not null
			and inv.ou_id=#{ouId}
			and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
			and inv.inside_container_id=#{insideContainerId} 
	</select>
	
	<select id="findInventorysAllOnHandQtysByUuid" resultType="Double">
		select  sum(on_hand_qty)
			from 
			t_wh_sku_inventory 
			where 
			uuid = #{uuid} 
			and ou_id = #{ouid}
    </select>
	
	<select id="findInventorysByUuid" resultMap="WhSkuInventoryResultExt">
		select  <include refid="whSkuInventoryColumnsExt" />
			from 
			t_wh_sku_inventory 
			where 
			uuid = #{uuid} 
			and ou_id = #{ouid}
    </select>
    
    <select id="findAllocatedContainerInventorysByUuid" resultMap="WhSkuInventoryCommandSnResultExt">
	select 
			inv.id as invId,
			inv.sku_id as skuId,
			inv.location_id as locationId,
			inv.outer_container_id as outerContainerId,
			inv.inside_container_id as insideContainerId,
			inv.customer_id as customerId,
			inv.store_id as storeId,
			inv.occupation_code as invOccupationCode,
			inv.on_hand_qty as onHandQty,
			inv.allocated_qty as allocatedQty,
			inv.to_be_filled_qty as toBeFilledQty,
			inv.frozen_qty as frozenQty,
			inv.inv_status as invStatus,
			inv.inv_type as invType,
			inv.batch_number as batchNumber,
			inv.mfg_date as mfgDate,
			inv.exp_date as expDate,
			inv.country_of_origin as countryOfOrigin,
			inv.inv_attr1 as invAttr1,
			inv.inv_attr2 as invAttr2,
			inv.inv_attr3 as invAttr3,
			inv.inv_attr4 as invAttr4,
			inv.inv_attr5 as invAttr5,
			inv.uuid as invUuid,
			inv.is_locked as isLocked,
			inv.ou_id as invOuId,
			inv.occupation_code_source as occupationCodeSource,
			inv.inbound_time as inboundTime,
       		inv.last_modify_time as lastModifyTime,
       		sn.id as snId,
       		sn.sn as snSn,
       		sn.occupation_code as snOccupationCode,
       		sn.defect_ware_barcode as snDefectWareBarcode,
       		sn.defect_source as snDefectSource,
       		sn.defect_type_id as snDefectTypeId,
       		sn.defect_reasons_id as snDefectReasonsId,
       		sn.status as snStatus,
       		sn.inv_attr as snInvAttr,
       		sn.uuid as snUuid,
       		sn.ou_id as snOuId,
       		sn.sys_uuid as snSysUuid
			from 
			t_wh_asn asn,	
			t_wh_sku_inventory inv
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
			where 
			inv.occupation_code is not null 
			and asn.asn_code = inv.occupation_code
			and (asn.status=5 or asn.status=10)
			and inv.allocated_qty > 0.0
			and inv.location_id is null
			and inv.uuid = #{uuid} 
			and inv.ou_id = #{ouid}
    </select>
	
	<select id="findWhSkuInventoryByLocIdAndOuId" resultMap="WhSkuInventoryCommandResultExt" flushCache="false">
			select 
			      	inv.id as id,
			        inv.sku_id as skuId,
			        inv.location_id as locationId,
			        inv.outer_container_id as outerContainerId,
			        inv.inside_container_id as insideContainerId,
			        inv.customer_id as customerId,
			        inv.store_id as storeId,
			        inv.occupation_code as occupationCode,
			        inv.on_hand_qty as onHandQty,
	                tobefilled.qty as toBeFilledQty,
			        inv.frozen_qty as frozenQty,
			        inv.inv_status as invStatus,
			        inv.inv_type as invType,
			        inv.batch_number as batchNumber,
			        inv.mfg_date as mfgDate,
			        inv.exp_date as expDate,
			        inv.country_of_origin as countryOfOrigin,
			        inv.inv_attr1 as invAttr1,
			        inv.inv_attr2 as invAttr2,
			        inv.inv_attr3 as invAttr3,
			        inv.inv_attr4 as invAttr4,
			        inv.inv_attr5 as invAttr5,
			        inv.uuid as uuid,
			        inv.is_locked as isLocked,
			        inv.ou_id as ouId,
			        inv.occupation_code_source as occupationCodeSource,
			        inv.inbound_time as inboundTime,
	               	inv.last_modify_time as lastModifyTime
		    <![CDATA[
			    from t_wh_sku_inventory inv
			    left join t_wh_sku_inventory_tobefilled tobefilled on inv.location_id = tobefilled.location_id 
		        where 
		        inv.location_id =#{locid}
		        and inv.ou_id = #{ouid}
		    ]]>
	</select>
	
	<select id="findAllInsideContainerByOuterContainerId" resultMap="ContainerCommandResultExt" flushCache="false">
			select
				s.id as id,
	        	s.name as name,
	        	s.code as code,
	        	s.one_level_type as oneLevelType,
	        	s.two_level_type as twoLevelType,
	        	s.is_full as isFull,
	        	s.create_time as createTime,
	        	s.last_modify_time as lastModifyTime,
	        	s.operator_id as operatorId,
	        	s.lifecycle as lifecycle,
	        	s.ou_id as ouId,
				dic.lifecycle as oneLevelTypeLifecycle,
				c2c.lifecycle as twoLevelTypeLifecycle,
				s.status as status
		    <![CDATA[
			    from t_wh_container s
			    left join sys_dictionary dic on dic.dic_value=s.one_level_type AND dic.group_value = 'ONE_LEVEL_TYPE'
			    left join t_wh_container_2nd_category c2c on c2c.id=s.two_level_type AND  dic.group_value = 'TWO_LEVEL_TYPE'
		        where 
		        s.ou_id = #{ouid}
		        and s.id in
		        (
		        select distinct inv.inside_container_id from t_wh_sku_inventory inv,t_wh_asn asn where inv.occupation_code is not null 
			and inv.ou_id=#{ouid}
			and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
			and inv.outer_container_id=#{outerContainerid}
				)		
		    ]]>
	</select>

<select id="findTobefilledAllInsideContainerByOuterContainerId" resultMap="ContainerCommandResultExt" flushCache="false">
			select
				s.id as id,
	        	s.name as name,
	        	s.code as code,
	        	s.one_level_type as oneLevelType,
	        	s.two_level_type as twoLevelType,
	        	s.is_full as isFull,
	        	s.create_time as createTime,
	        	s.last_modify_time as lastModifyTime,
	        	s.operator_id as operatorId,
	        	s.lifecycle as lifecycle,
	        	s.ou_id as ouId,
				dic.lifecycle as oneLevelTypeLifecycle,
				c2c.lifecycle as twoLevelTypeLifecycle,
				s.status as status
		    <![CDATA[
			    from t_wh_container s
			    left join sys_dictionary dic on dic.dic_value=s.one_level_type AND dic.group_value = 'ONE_LEVEL_TYPE'
			    left join t_wh_container_2nd_category c2c on c2c.id=s.two_level_type AND  dic.group_value = 'TWO_LEVEL_TYPE'
		        where 
		        s.ou_id = #{ouid}
		        and s.id in
		        (
		        select distinct inv.inside_container_id from t_wh_sku_inventory_tobefilled inv,t_wh_asn asn where inv.occupation_code is not null 
			and inv.ou_id=#{ouid}
			and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
			and inv.outer_container_id=#{outerContainerid}
				)		
		    ]]>
	</select>


    <select id="findWhSkuInventoryForRuleByInsideContainerId" resultMap="WhSkuInventoryCommandResultExt">
        select
        <include refid="whSkuInventoryColumnsInvExt"/>
        from
        t_wh_sku_inventory as inv
        where
        inv.ou_id = #{ouId}
        and inv.inside_container_id in
        <foreach item="item" index="index" collection="insideContainerIdList" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    
    
       <select id="findWhSkuInventoryByInsideContainerId" resultMap="WhSkuInventoryCommandSnResultExt">
			select 
					inv.id as invId,
					inv.sku_id as skuId,
					inv.location_id as locationId,
					inv.outer_container_id as outerContainerId,
					inv.inside_container_id as insideContainerId,
					inv.customer_id as customerId,
					inv.store_id as storeId,
					inv.occupation_code as invOccupationCode,
					inv.on_hand_qty as onHandQty,
					inv.allocated_qty as allocatedQty,
					inv.to_be_filled_qty as toBeFilledQty,
					inv.frozen_qty as frozenQty,
					inv.inv_status as invStatus,
					inv.inv_type as invType,
					inv.batch_number as batchNumber,
					inv.mfg_date as mfgDate,
					inv.exp_date as expDate,
					inv.country_of_origin as countryOfOrigin,
					inv.inv_attr1 as invAttr1,
					inv.inv_attr2 as invAttr2,
					inv.inv_attr3 as invAttr3,
					inv.inv_attr4 as invAttr4,
					inv.inv_attr5 as invAttr5,
					inv.uuid as invUuid,
					inv.is_locked as isLocked,
					inv.ou_id as invOuId,
					inv.occupation_code_source as occupationCodeSource,
					inv.inbound_time as inboundTime,
	        		inv.last_modify_time as lastModifyTime,
	        		sn.id as snId,
	        		sn.sn as snSn,
	        		sn.occupation_code as snOccupationCode,
	        		sn.defect_ware_barcode as snDefectWareBarcode,
	        		sn.defect_source as snDefectSource,
	        		sn.defect_type_id as snDefectTypeId,
	        		sn.defect_reasons_id as snDefectReasonsId,
	        		sn.status as snStatus,
	        		sn.inv_attr as snInvAttr,
	        		sn.uuid as snUuid,
	        		sn.ou_id as snOuId,
	        		sn.sys_uuid as snSysUuid
					from 
					t_wh_asn asn,	
					t_wh_sku_inventory inv
					left join t_wh_container c on c.id = inv.inside_container_id
					left join t_wh_sku_inventory_sn sn on inv.uuid = sn.uuid
					where 
						inv.occupation_code is not null 
						and asn.asn_code = inv.occupation_code
						and (asn.status=5 or asn.status=10)
					    and inv.ou_id = #{ouid}
					and c.id in 
					<foreach item="item" index="index" collection="containerList" open="(" separator="," close=")">
			            #{item}
			        </foreach>
    </select>




	<!-- -->
	<select id="findContainerInventoryCountsByOuterContainerId" resultMap="WhSkuInventoryResultExt">
		select <include refid="whSkuInventoryColumnsInvExt"/>
		from t_wh_sku_inventory inv,t_wh_asn asn where inv.occupation_code is not null 
		and inv.ou_id=#{ouId}
	    and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
		and inv.outer_container_id = #{outerContainerId}
	</select>


    <!-- lijun.shen-->
	<select id="findContainerInventoryCountsByInsideContainerId"  resultMap="WhSkuInventoryResultExt">
		select <include refid="whSkuInventoryColumnsInvExt"/>
		from t_wh_sku_inventory inv,t_wh_asn asn where inv.occupation_code is not null 
		and inv.ou_id=#{ouId}
		and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
		and inv.inside_container_id = #{insideContainerId}
	</select>


 	<!--  查询容器内的商品种类  lijun.shen-->
	<select id="getSkuInvListByOutContainerID" resultMap="WhSkuInventoryCommandResultExt">
		select <include refid="whSkuInventoryColumnsInvExt"/>
		    from t_wh_sku_inventory inv,t_wh_asn asn where inv.occupation_code is not null 
			and inv.ou_id=#{ouId}
			and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
		    and inv.outer_container_id = #{containerId}
	</select>
    
    <select id="findWhSkuInventoryByContainerIdLocationIsNull" resultMap="WhSkuInventoryResultExt">
			select  <include refid="whSkuInventoryColumnsExt" />
				from 
				t_wh_sku_inventory 
				<where>
					ou_id = #{ouid}
					and location_id is null
					<if test="insideContainerId != null">
						and inside_container_id = #{insideContainerId} 
					</if>
					<if test="outerContainerId != null">
						and outer_container_id = #{outerContainerId} 
					</if>
				</where>
  	</select>


     <select id="findWhSkuInventoryByCId" resultMap="WhSkuInventoryResultExt">
			select  <include refid="whSkuInventoryColumnsInvExt"/>
			from 
			t_wh_sku_inventory inv,t_wh_asn asn
			where
				 inv.occupation_code is not null 
			     and asn.asn_code = inv.occupation_code
		    	 and (asn.status=5 or asn.status=10)
			     and inv.on_hand_qty > 0.0
			     and inv.ou_id = #{ouId}
				 <if test="insideContainerId != null">
					 and inv.inside_container_id = #{insideContainerId} 
				 </if>
				 <if test="outerContainerId != null">
					 and inv.outer_container_id = #{outerContainerId} 
				 </if>
  	</select>
  	
  	    <select id="findWhSkuInventoryCountByInsideContainerId" resultType="Integer">
		select count(1) from t_wh_sku_inventory inv,t_wh_asn asn where inv.occupation_code is not null and inv.location_id is null and inv.on_hand_qty > 0.0 
			and inv.ou_id=#{ouId}
			and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10)
			and inv.inside_container_id=#{insideContainerId}
	</select>

    <select id="findWhSkuInventoryByLocationId" resultMap="WhSkuInventoryResultExt">
				select  <include refid="whSkuInventoryColumnsExt" />
					from 
					t_wh_sku_inventory 
					where 
					location_id = #{locationId} 
					and ou_id = #{ouId}
					and (inside_container_id is not null or (outer_container_id is not null and inside_container_id is null))
    </select>
      <select id="findWhSkuInvCmdByLocation" resultMap="WhSkuInventoryCommandResultExt">
				select  <include refid="whSkuInventoryColumnsExt" />
					from 
					t_wh_sku_inventory 
					where 
					location_id = #{locationId} 
					and ou_id = #{ouId}
    </select>
    
    <select id="findInventoryByInBoundTime" parameterType="com.baozun.scm.primservice.whoperation.command.wave.WhWaveLineCommand" resultMap="WhSkuInventoryCommandResultExt">
		select 
			<include refid="whSkuInventoryColumnsInvExt" /> 
			from t_wh_sku_inventory inv,(
			select *,(@n := @n + 1) rowNo from (
				select 
					sum(inv.on_hand_qty) sumOnHandQty, inv.inbound_time as inboundTime, inv.uuid, (select @n := 0) r
				from 
					t_wh_sku_inventory inv,
					t_wh_location loc,
					t_wh_inventory_status s
				where 
					inv.location_id = loc.id 
					and inv.inv_status = s.id
					and inv.location_id is not null 
					and inv.occupation_code is null 
					and inv.occupation_line_id is null 
					and inv.on_hand_qty > 0.0 
					and IFNULL(is_locked,0) != 1
					and loc.lifecycle = 1
					and s.is_for_sale = 1
					and s.lifecycle = 1
					
					and inv.ou_id = #{ouId}
					and loc.allocate_area_id = #{areaId}
					and inv.sku_id = #{skuId}
					<if test="storeId != null">
						and inv.store_id = #{storeId}
					</if>
					<if test="invStatus != null and invStatus !=''">
						and inv.inv_status = #{invStatus}
					</if>
					<if test="invType != null and invType !=''">
						and inv.inv_type = #{invType}
					</if>
			        <if test="batchNumber != null and batchNumber !=''">
						and inv.batch_number = #{batchNumber}
					</if>
					<if test="mfgDate != null">
						and inv.mfg_date = #{mfgDate}
					</if>
					<if test="expDate != null">
						and inv.exp_date = #{expDate}
					</if>
			        <if test="countryOfOrigin!=null and countryOfOrigin!=''">
						and inv.country_of_origin = #{countryOfOrigin}
					</if>
			        <if test="invAttr1!=null and invAttr1!=''">
						and inv.inv_attr1 = #{invAttr1}
					</if>
			        <if test="invAttr2!=null and invAttr2!=''">
						and inv.inv_attr2 = #{invAttr2}
					</if>
			        <if test="invAttr3!=null and invAttr3!=''">
						and inv.inv_attr3 = #{invAttr3}
					</if>
			        <if test="invAttr4!=null and invAttr4!=''">
						and inv.inv_attr4 = #{invAttr4}
					</if>
			        <if test="invAttr5!=null and invAttr5!=''">
						and inv.inv_attr5 = #{invAttr5}
					</if>
				group by inv.inbound_time,inv.uuid
				order by 
				<if test="priority != null and priority == true">
					inv.inbound_time asc,sumOnHandQty,loc.pick_sort,loc.code
				</if>
				<if test="priority != null and priority == false">
					inv.inbound_time desc,sumOnHandQty,loc.pick_sort,,loc.code
				</if>
			) t
		) inv2 
		where 
			inv.uuid = inv2.uuid 
			and inv.inbound_time = inv2.inboundTime
		order by rowNo,inv.on_hand_qty
	</select>
	
	<select id="findInventoryByExpTime" parameterType="com.baozun.scm.primservice.whoperation.command.wave.WhWaveLineCommand" resultMap="WhSkuInventoryCommandResultExt">
		select 
			<include refid="whSkuInventoryColumnsInvExt" /> 
			from t_wh_sku_inventory inv,(
			select *,(@n := @n + 1) rowNo from (
				select 
					sum(inv.on_hand_qty) sumOnHandQty, inv.exp_date as expDate, inv.uuid, (select @n := 0) r
				from 
					t_wh_sku_inventory inv,
					t_wh_location loc,
					t_wh_inventory_status s
				where 
					inv.location_id = loc.id 
					and inv.inv_status = s.id
					and inv.location_id is not null 
					and inv.occupation_code is null 
					and inv.occupation_line_id is null 
					and inv.on_hand_qty > 0.0 
					and IFNULL(is_locked,0) != 1
					and loc.lifecycle = 1
					and s.is_for_sale = 1
					and s.lifecycle = 1
					
					and inv.ou_id = #{ouId}
					and loc.allocate_area_id = #{areaId}
					and inv.sku_id = #{skuId}
					<if test="storeId != null">
						and inv.store_id = #{storeId}
					</if>
					<if test="invStatus != null and invStatus !=''">
						and inv.inv_status = #{invStatus}
					</if>
					<if test="invType != null and invType !=''">
						and inv.inv_type = #{invType}
					</if>
			        <if test="batchNumber != null and batchNumber !=''">
						and inv.batch_number = #{batchNumber}
					</if>
			        <if test="countryOfOrigin!=null and countryOfOrigin!=''">
						and inv.country_of_origin = #{countryOfOrigin}
					</if>
			        <if test="invAttr1!=null and invAttr1!=''">
						and inv.inv_attr1 = #{invAttr1}
					</if>
			        <if test="invAttr2!=null and invAttr2!=''">
						and inv.inv_attr2 = #{invAttr2}
					</if>
			        <if test="invAttr3!=null and invAttr3!=''">
						and inv.inv_attr3 = #{invAttr3}
					</if>
			        <if test="invAttr4!=null and invAttr4!=''">
						and inv.inv_attr4 = #{invAttr4}
					</if>
			        <if test="invAttr5!=null and invAttr5!=''">
						and inv.inv_attr5 = #{invAttr5}
					</if>
					<if test="mfgDate != null">
						and inv.mfg_date = #{mfgDate}
					</if>
					<if test="expDate != null">
						and inv.exp_date = #{expDate}
					</if>
					<if test="minExpDate != null and maxExpDate != null">
						and inv.exp_date between #{minExpDate} and #{maxExpDate} 
					</if>
				group by inv.exp_date,inv.uuid
				order by 
				<if test="priority != null and priority == true">
					inv.exp_date asc,sumOnHandQty,loc.pick_sort,loc.code
				</if>
				<if test="priority != null and priority == false">
					inv.exp_date desc,sumOnHandQty,loc.pick_sort,loc.code
				</if>
			) t
		) inv2 
		where 
			inv.uuid = inv2.uuid 
			and inv.exp_date = inv2.expDate
		order by rowNo,inv.on_hand_qty
	</select>
	
	<select id="findInventoryByAmount" parameterType="com.baozun.scm.primservice.whoperation.command.wave.WhWaveLineCommand" resultMap="WhSkuInventoryCommandResultExt">
		select 
			<include refid="whSkuInventoryColumnsInvExt" /> 
			from t_wh_sku_inventory inv,(
			select *,(@n := @n + 1) rowNo from (
				select 
					sum(inv.on_hand_qty) sumOnHandQty, inv.uuid, (select @n := 0) r
				from 
					t_wh_sku_inventory inv,
					t_wh_location loc,
					t_wh_inventory_status s
				where 
					inv.location_id = loc.id 
					and inv.inv_status = s.id
					and inv.location_id is not null 
					and inv.occupation_code is null 
					and inv.occupation_line_id is null 
					and inv.on_hand_qty > 0.0 
					and IFNULL(is_locked,0) != 1
					and loc.lifecycle = 1
					and s.is_for_sale = 1
					and s.lifecycle = 1
					
					and inv.ou_id = #{ouId}
					and loc.allocate_area_id = #{areaId}
					and inv.sku_id = #{skuId}
					<if test="storeId != null">
						and inv.store_id = #{storeId}
					</if>
					<if test="invStatus != null and invStatus !=''">
						and inv.inv_status = #{invStatus}
					</if>
					<if test="invType != null and invType !=''">
						and inv.inv_type = #{invType}
					</if>
			        <if test="batchNumber != null and batchNumber !=''">
						and inv.batch_number = #{batchNumber}
					</if>
			        <if test="countryOfOrigin!=null and countryOfOrigin!=''">
						and inv.country_of_origin = #{countryOfOrigin}
					</if>
			        <if test="invAttr1!=null and invAttr1!=''">
						and inv.inv_attr1 = #{invAttr1}
					</if>
			        <if test="invAttr2!=null and invAttr2!=''">
						and inv.inv_attr2 = #{invAttr2}
					</if>
			        <if test="invAttr3!=null and invAttr3!=''">
						and inv.inv_attr3 = #{invAttr3}
					</if>
			        <if test="invAttr4!=null and invAttr4!=''">
						and inv.inv_attr4 = #{invAttr4}
					</if>
			        <if test="invAttr5!=null and invAttr5!=''">
						and inv.inv_attr5 = #{invAttr5}
					</if>
					<if test="mfgDate != null">
						and inv.mfg_date = #{mfgDate}
					</if>
					<if test="expDate != null">
						and inv.exp_date = #{expDate}
					</if>
					<if test="isStatic != null and isStatic == true">
						and loc.is_static = 1
					</if>
					<if test="isMixStacking != null and isMixStacking == true">
						and loc.is_mix_stacking = 1
					</if>
				group by inv.inbound_time,inv.uuid
				order by 
				<if test="priority != null and priority == true">
					sumOnHandQty,loc.pick_sort,loc.code
				</if>
				<if test="priority != null and priority == false">
					sumOnHandQty desc,loc.pick_sort,loc.code
				</if>
			) t
		) inv2 
		where 
			inv.uuid = inv2.uuid 
		order by rowNo,inv.on_hand_qty
	</select>
	
	<select id="findInventoryByUuidAndCondition" parameterType="com.baozun.scm.primservice.whoperation.command.warehouse.inventory.WhSkuInventoryCommand" resultMap="WhSkuInventoryCommandResultExt">
		select  
			<include refid="whSkuInventoryColumnsExt" />
		from 
			t_wh_sku_inventory 
		where 
			uuid = #{uuid} 
			and ou_id = #{ouId}
			<if test="inboundTime != null">
				and inbound_time = #{inboundTime}
			</if>
			<if test="expDate != null">
				and exp_date = #{expDate}
			</if>
		order by on_hand_qty 
	</select>
	
	<select id="findWhSkuInventoryByUuidList" parameterType="map" resultMap="WhSkuInventoryCommandResultExt">
		select  
			<include refid="whSkuInventoryColumnsExt" />
		from 
			t_wh_sku_inventory 
		where 
			ou_id = #{ouId}
			and uuid in 
			<foreach item="item" collection="uuidList" open="(" separator="," close=")">
	            #{item}
	        </foreach>
	    order by on_hand_qty 
    </select>
	
	<select id="findInventoryUuidByInBoundTime" parameterType="com.baozun.scm.primservice.whoperation.command.wave.WhWaveLineCommand" resultMap="WhSkuInventoryCommandResultExt">
		select 
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'PALLET'">
				inv.outer_container_id as outerContainerId, 
				sum(inv.on_hand_qty) sumOnHandQty, 
				min(inv.inbound_time) as inboundTime, 
				GROUP_CONCAT(DISTINCT inv.uuid) uuid
			</if>
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'CONTAINER'">
				inv.inside_container_id as insideContainerId,
				sum(inv.on_hand_qty) sumOnHandQty,
				inv.inbound_time inboundTime, 
				inv.uuid uuid
			</if>
		from 
			t_wh_sku_inventory inv,
			t_wh_location loc,
			t_wh_inventory_status s
		where 
			inv.location_id = loc.id 
			and inv.inv_status = s.id
			and inv.location_id is not null 
			and inv.occupation_code is null 
			and inv.occupation_line_id is null 
			and inv.on_hand_qty > 0.0 
			and IFNULL(is_locked,0) != 1
			and loc.lifecycle = 1
			and s.is_for_sale = 1
			and s.lifecycle = 1
			
			and inv.ou_id = #{ouId}
			and loc.allocate_area_id = #{areaId}
			and inv.sku_id = #{skuId}
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'PALLET'">
				and inv.inside_container_id is not null
			</if>
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'CONTAINER'">
				and inv.outer_container_id is not null
			</if>
			<if test="storeId != null">
				and inv.store_id = #{storeId}
			</if>
			<if test="invStatus != null and invStatus !=''">
				and inv.inv_status = #{invStatus}
			</if>
			<if test="invType != null and invType !=''">
				and inv.inv_type = #{invType}
			</if>
		<if test="allocateUnitCodes != null and allocateUnitCodes == 'PALLET'">
			group by outer_container_id
		</if>
		<if test="allocateUnitCodes != null and allocateUnitCodes == 'CONTAINER'">
			group by inside_container_id,inbound_time,uuid
		</if>
		order by 
		<if test="priority != null and priority == true">
			inv.inbound_time asc,sumOnHandQty,loc.pick_sort,loc.code
		</if>
		<if test="priority != null and priority == false">
			inv.inbound_time desc,sumOnHandQty,loc.pick_sort,loc.code
		</if>
	</select>
	
	<select id="findInventoryUuidByExpTime" parameterType="com.baozun.scm.primservice.whoperation.command.wave.WhWaveLineCommand" resultMap="WhSkuInventoryCommandResultExt">
		select 
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'PALLET'">
				inv.outer_container_id as outerContainerId, 
				sum(inv.on_hand_qty) as sumOnHandQty, 
				min(inv.exp_date) as expDate,
				GROUP_CONCAT(DISTINCT inv.uuid) as uuid
			</if>
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'CONTAINER'">
				inv.inside_container_id as insideContainerId,
				sum(inv.on_hand_qty) as sumOnHandQty,
				inv.exp_date as expDate, 
				inv.uuid as uuid
			</if>
		from 
			t_wh_sku_inventory inv,
			t_wh_location loc,
			t_wh_inventory_status s
		where 
			inv.location_id = loc.id 
			and inv.inv_status = s.id
			and inv.location_id is not null 
			and inv.occupation_code is null 
			and inv.occupation_line_id is null 
			and inv.on_hand_qty > 0.0 
			and IFNULL(is_locked,0) != 1
			and loc.lifecycle = 1
			and s.is_for_sale = 1
			and s.lifecycle = 1
			
			and inv.ou_id = #{ouId}
			and loc.allocate_area_id = #{areaId}
			and inv.sku_id = #{skuId}
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'PALLET'">
				and inv.inside_container_id is not null
			</if>
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'CONTAINER'">
				and inv.outer_container_id is not null
			</if>
			<if test="storeId != null">
				and inv.store_id = #{storeId}
			</if>
			<if test="invStatus != null and invStatus !=''">
				and inv.inv_status = #{invStatus}
			</if>
			<if test="invType != null and invType !=''">
				and inv.inv_type = #{invType}
			</if>
			<if test="mfgDate != null">
				and inv.mfg_date = #{mfgDate}
			</if>
			<if test="expDate != null">
				and inv.exp_date = #{expDate}
			</if>
			<if test="minExpDate != null and maxExpDate != null">
				and inv.exp_date between #{minExpDate} and #{maxExpDate} 
			</if>
		<if test="allocateUnitCodes != null and allocateUnitCodes == 'PALLET'">
			group by outer_container_id
		</if>
		<if test="allocateUnitCodes != null and allocateUnitCodes == 'CONTAINER'">
			group by inside_container_id,exp_date,uuid
		</if>
		order by 
		<if test="priority != null and priority == true">
			inv.exp_date asc,sumOnHandQty,loc.pick_sort,loc.code
		</if>
		<if test="priority != null and priority == false">
			inv.exp_date desc,sumOnHandQty,loc.pick_sort,loc.code
		</if>
	</select>
	
	<select id="findInventoryUuidByAmount" parameterType="com.baozun.scm.primservice.whoperation.command.wave.WhWaveLineCommand" resultMap="WhSkuInventoryCommandResultExt">
		select 
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'PALLET'">
				inv.outer_container_id as outerContainerId, 
				sum(inv.on_hand_qty) as sumOnHandQty, 
				GROUP_CONCAT(DISTINCT inv.uuid) as uuid
			</if>
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'CONTAINER'">
				inv.inside_container_id as insideContainerId,
				sum(inv.on_hand_qty) as sumOnHandQty,
				inv.uuid as uuid
			</if>
		from 
			t_wh_sku_inventory inv,
			t_wh_location loc,
			t_wh_inventory_status s
		where 
			inv.location_id = loc.id 
			and inv.inv_status = s.id
			and inv.location_id is not null 
			and inv.occupation_code is null 
			and inv.occupation_line_id is null 
			and inv.on_hand_qty > 0.0 
			and IFNULL(is_locked,0) != 1
			and loc.lifecycle = 1
			and s.is_for_sale = 1
			and s.lifecycle = 1
			
			and inv.ou_id = #{ouId}
			and loc.allocate_area_id = #{areaId}
			and inv.sku_id = #{skuId}
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'PALLET'">
				and inv.inside_container_id is not null
			</if>
			<if test="allocateUnitCodes != null and allocateUnitCodes == 'CONTAINER'">
				and inv.outer_container_id is not null
			</if>
			<if test="storeId != null">
				and inv.store_id = #{storeId}
			</if>
			<if test="invStatus != null and invStatus !=''">
				and inv.inv_status = #{invStatus}
			</if>
			<if test="invType != null and invType !=''">
				and inv.inv_type = #{invType}
			</if>
			<if test="isStatic != null and isStatic == true">
				and loc.is_static = 1
			</if>
			<if test="isMixStacking != null and isMixStacking == true">
				and loc.is_mix_stacking = 1
			</if>
		<if test="allocateUnitCodes != null and allocateUnitCodes == 'PALLET'">
			group by outer_container_id
		</if>
		<if test="allocateUnitCodes != null and allocateUnitCodes == 'CONTAINER'">
			group by inside_container_id,uuid
		</if>
		order by 
		<if test="priority != null and priority == true">
			sumOnHandQty,loc.pick_sort,loc.code
		</if>
		<if test="priority != null and priority == false">
			sumOnHandQty desc,loc.pick_sort,loc.code
		</if>
	</select>
	
	<select id="findInventoryUuid" parameterType="com.baozun.scm.primservice.whoperation.command.wave.WhWaveLineCommand" resultMap="WhSkuInventoryCommandResultExt">
		select 
			sum(inv.on_hand_qty) as sumOnHandQty, 
			inv.uuid as uuid
		from 
			t_wh_sku_inventory inv,
			t_wh_location loc,
			t_wh_inventory_status s
		where 
			inv.location_id = loc.id 
			and inv.inv_status = s.id
			and inv.location_id is not null 
			and inv.occupation_code is null 
			and inv.occupation_line_id is null 
			and inv.on_hand_qty > 0.0 
			and IFNULL(is_locked,0) != 1
			and loc.lifecycle = 1
			and s.is_for_sale = 1
			and s.lifecycle = 1
			
			and inv.ou_id = #{ouId}
			and loc.allocate_area_id = #{areaId}
			and inv.sku_id = #{skuId}
			<if test="storeId != null">
				and inv.store_id = #{storeId}
			</if>
			<if test="invStatus != null and invStatus !=''">
				and inv.inv_status = #{invStatus}
			</if>
			<if test="invType != null and invType !=''">
				and inv.inv_type = #{invType}
			</if>
			group by uuid
		order by 
		<if test="priority != null and priority == true">
			sumOnHandQty,loc.pick_sort,loc.code
		</if>
		<if test="priority != null and priority == false">
			sumOnHandQty desc,loc.pick_sort,loc.code
		</if>
	</select>
	
	<select id="findOccupyInventory" parameterType="map" resultMap="WhSkuInventoryResultExt">
		select
			<include refid="whSkuInventoryColumnsInvExt"/>
		from 
			t_wh_sku_inventory inv
		where 
			inv.occupation_code = #{occupyCode}
			and inv.ou_id = #{ouId}
	</select>
	
	<update id="releaseInventoryOccupyCode" parameterType="map">
		update 
			t_wh_sku_inventory inv 
		set 
			inv.occupation_code = null,
			inv.occupation_code_source = null,
			inv.occupation_line_id = null 
		where 
			inv.occupation_code = #{occupyCode} 
			and inv.ou_id = #{ouId}
	</update>

    <!-- -->
	<select id="findWhSkuInventoryCountsByContainerId" resultMap="WhSkuInventoryResultExt">
		select <include refid="whSkuInventoryColumnsInvExt"/>
		from t_wh_sku_inventory inv,t_wh_asn asn where inv.occupation_code is not null 
		and inv.ou_id=#{ouId}
	    and inv.occupation_code=asn.asn_code and (asn.status=5 or asn.status=10) and inv.location_id is not null
	    <if test="outerContainerId!=null and outerContainerId!=''">
					 and inv.outer_container_id = #{outerContainerId}
	   </if>
	   <if test="insideContainerId!=null and insideContainerId!=''">
					 and inv.inside_container_id=#{insideContainerId}
	   </if>
	</select>
	
	<select id="getSkuInvListByPramas" resultMap="WhSkuInventoryResultExt">
		select  <include refid="whSkuInventoryColumnsExt" />
		from
		t_wh_sku_inventory
        <include refid="whSkuInventoryDynamicWhereExt"/>
	</select>
	
	    <select id="findWhSkuInvCmdByLocationContainerIdIsNull" resultMap="WhSkuInventoryCommandResultExt">
				select  <include refid="whSkuInventoryColumnsExt" />
					from 
					t_wh_sku_inventory 
					where 
					location_id = #{locationId} 
					and ou_id = #{ouId} and outer_container_id is null and inside_container_id is null
    </select>
    
</mapper>
