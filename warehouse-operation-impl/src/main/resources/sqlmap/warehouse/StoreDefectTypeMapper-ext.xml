<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.StoreDefectTypeDao">
	<resultMap id="StoreDefectTypeResultExt" type="com.baozun.scm.primservice.whoperation.model.warehouse.StoreDefectType">
	</resultMap>
	
	<resultMap id="StoreDefectTypeCommandResultExt" type="com.baozun.scm.primservice.whoperation.command.warehouse.StoreDefectTypeCommand">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="storeDefectTypeColumnsExt">
	    <![CDATA[
	        	s.id as id,
	        	s.store_id as storeId,
	        	s.name as name,
	        	s.code as code,
	        	s.description as description,
	        	s.create_time as createTime,
	        	s.last_modify_time as lastModifyTime,
	        	s.created_id as createdId,
	        	s.modified_id as modifiedId,
	        	s.lifecycle as lifecycle,
	        	store.store_name as storeName
	    ]]>
	</sql>
	
	<sql id="storeDefectTypeDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and s.id = #{id}
				</if>
	       
				<if test="storeId!=null">
					and s.store_id = #{storeId}
				</if>
	       
	       
		       <if test="name!=null and name!=''">
					and s.name = #{name}
				</if>
	       
	       
		       <if test="code!=null and code!=''">
					and s.code = #{code}
				</if>
	       
	       
		       <if test="description!=null and description!=''">
					and s.description = #{description}
				</if>
	       
				<if test="createTime!=null">
					and s.create_time = #{createTime}
				</if>
	       
				<if test="lastModifyTime!=null">
					and s.last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="createdId!=null">
					and s.created_id = #{createdId}
				</if>
	       
				<if test="modifiedId!=null">
					and s.modified_id = #{modifiedId}
				</if>
	       
				<if test="lifecycle!=null">
					and s.lifecycle = #{lifecycle}
				</if>
		</where>
	</sql>
	
	<update id="updateByVersion"  parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.StoreDefectType">
		    <![CDATA[
		        UPDATE t_bi_store_defect_type SET
		        store_id = #{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        name = #{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        code = #{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        description = #{description,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        last_modify_time = #{globalLastModifyTime} ,
		        created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} 
	        WHERE 
		        id = #{id} 
			    and last_modify_time	=  #{lastModifyTime}     
		    ]]>
		</update>
	
	<select id="uniqueCodeOrName" resultType="long">
		select count(*) from t_bi_store_defect_type 
		<where>
				<if test="id!=null">
					and id != #{id}
				</if>
	       
				<if test="storeId!=null">
					and store_id = #{storeId}
				</if>
	       
	       
		       <if test="name!=null and name!=''">
					and name = #{name}
				</if>
	       
	       
		       <if test="code!=null and code!=''">
					and code = #{code}
				</if>
		</where>
	</select>
	
	<sql id="storeDefectTypeDynamicWhereExtSimpty">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
	       
				<if test="storeId!=null">
					and sb.store_id = #{storeId}
				</if>
	       
				<if test="lifecycle!=null">
					and sb.lifecycle = #{lifecycle}
				</if>
				
				<if test="brandName!=null and brandName!=''">
					and brand.name like #{brandName}
				</if>
				
				<if test="storeName!=null and storeName!=''">
					and store.store_name like #{storeName}
				</if>
		</where>
	</sql>
	
	
	<select id="findStoreDefectTypeByParam" resultMap="StoreDefectTypeCommandResultExt">
        select
        <include refid="storeDefectTypeColumnsExt"/>
        from t_bi_store_defect_type s
        left join t_bi_store store on s.store_id = store.id
        <include refid="storeDefectTypeDynamicWhereExt"/>
    </select>
    
	<select id="findStoreDefectTypesByStoreId" resultMap="StoreDefectTypeCommandResultExt">
        select
        <include refid="storeDefectTypeColumnsExt"/>
			from t_bi_store_defect_type s 
				left join t_bi_store store on s.store_id = store.id
				where 
				s.store_id = #{storeid} and s.lifecycle = 1
    </select>
	
	<select id="findStoreDefectTypeIdsByStoreId" resultType="java.lang.Long">
		select id
		from t_bi_store_defect_type 
		where store_id = #{storeId}
	</select>
</mapper>
