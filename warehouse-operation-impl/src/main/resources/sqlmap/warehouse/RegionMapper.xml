<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.RegionDao">
	<resultMap id="RegionResult" type="com.baozun.scm.primservice.whoperation.model.warehouse.Region">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="regionColumns">
	    <![CDATA[
	        	id as id,
	        	region_name as regionName,
	        	region_name_en as regionNameEn,
	        	region_code as regionCode,
	        	parent_id as parentId,
	        	short_name as shortName,
	        	sort_no as sortNo,
	        	level as level,
	        	lifecycle as lifecycle,
	        	create_time as createTime,
	        	last_modify_time as lastModifyTime,
	        	operator_id as operatorId
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.Region" 
			useGeneratedKeys="true" keyProperty="id" 
		 flushCache="true">
	    <![CDATA[
	        INSERT INTO
	        t_bi_region (
	        	region_name ,
	        	region_name_en ,
	        	region_code,
	        	parent_id ,
	        	short_name ,
	        	sort_no ,
	        	level ,
	        	lifecycle ,
	        	create_time ,
	        	last_modify_time ,
	        	operator_id 
	        ) VALUES (
	        	#{regionName,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{regionNameEn,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{regionCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{parentId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{shortName,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{sortNo,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{level,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{operatorId,javaType=java.lang.Long,jdbcType=BIGINT} 
	        )
	    ]]>
		</insert>
	    
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.Region">
	    <![CDATA[
	        UPDATE t_bi_region SET
		        region_name = #{regionName,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        region_name_en = #{regionNameEn,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        region_code = #{regionCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        parent_id = #{parentId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        short_name = #{shortName,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        sort_no = #{sortNo,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        level = #{level,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        operator_id = #{operatorId,javaType=java.lang.Long,jdbcType=BIGINT} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_bi_region where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	        delete from t_bi_region 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="RegionResult" flushCache="false">
			select <include refid="regionColumns" />
		    <![CDATA[
			    from t_bi_region 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="RegionResult" flushCache="false">
			select <include refid="regionColumns" />
			    from t_bi_region 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="regionDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
	       
		       <if test="regionName!=null and regionName!=''">
					and region_name = #{regionName}
				</if>
	              
		       <if test="regionNameEn!=null and regionNameEn!=''">
					and region_name_en = #{regionNameEn}
				</if>
	       
				<if test="parentId!=null">
					and parent_id = #{parentId}
				</if>
	       
		       <if test="shortName!=null and shortName!=''">
					and short_name = #{shortName}
				</if>
	       
				<if test="sortNo!=null">
					and sort_no = #{sortNo}
				</if>
	       
				<if test="level!=null">
					and level = #{level}
				</if>
	       
				<if test="lifecycle!=null">
					and lifecycle = #{lifecycle}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="operatorId!=null">
					and operator_id = #{operatorId}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_bi_region 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_bi_region 
		<include refid="regionDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_bi_region 
		<include refid="regionDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="RegionResult">
    	select <include refid="regionColumns" />
	    from t_bi_region 
		<include refid="regionDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="RegionResult">
    	select <include refid="regionColumns" />
	    from t_bi_region 
		<include refid="regionDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="RegionResult">
    	select <include refid="regionColumns" />
	    from t_bi_region 
		<include refid="regionDynamicWhere"/>
		
    </select>

	
</mapper>
