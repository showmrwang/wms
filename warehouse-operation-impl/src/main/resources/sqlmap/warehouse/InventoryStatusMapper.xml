<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.InventoryStatusDao">
	<resultMap id="InventoryStatusResult" type="com.baozun.scm.primservice.whoperation.model.warehouse.InventoryStatus">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="inventoryStatusColumns">
	    <![CDATA[
	        	id as id,
	        	name as name,
	        	is_for_sale as isForSale,
	        	is_in_cost as isInCost,
	        	description as description,
	        	lifecycle as lifecycle,
	        	is_defective as isDefective
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.InventoryStatus" 
			useGeneratedKeys="true" keyProperty="id" 
		 flushCache="true">
	    <![CDATA[
	        INSERT INTO
	        t_wh_inventory_status (
	        	name ,
	        	is_for_sale ,
	        	is_in_cost ,
	        	description ,
	        	lifecycle ,
	        	is_defective
	        ) VALUES (
	        	#{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{isForSale,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{isInCost,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{description,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{isDefective,javaType=java.lang.Boolean,jdbcType=BIT} 
	        )
	    ]]>

		</insert>
	    
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.InventoryStatus">
	    <![CDATA[
	        UPDATE t_wh_inventory_status SET
		        name = #{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        is_for_sale = #{isForSale,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        is_in_cost = #{isInCost,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        description = #{description,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER}, 
		        is_defective = #{isDefective,javaType=java.lang.Boolean,jdbcType=BIT} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_inventory_status where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_inventory_status 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="InventoryStatusResult" flushCache="false">
			select <include refid="inventoryStatusColumns" />
		    <![CDATA[
			    from t_wh_inventory_status 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="InventoryStatusResult" flushCache="false">
			select <include refid="inventoryStatusColumns" />
			    from t_wh_inventory_status 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="inventoryStatusDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
	       
		       <if test="name!=null and name!=''">
					and name = #{name}
				</if>
	       
				<if test="isForSale!=null">
					and is_for_sale = #{isForSale}
				</if>
	       
				<if test="isInCost!=null">
					and is_in_cost = #{isInCost}
				</if>
	       
	       		<if test="isDefective!=null">
					and is_defective = #{isDefective}
				</if>
				
		       <if test="description!=null and description!=''">
					and description = #{description}
				</if>
	       
				<if test="lifecycle!=null">
					and lifecycle = #{lifecycle}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_wh_inventory_status 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_inventory_status 
		<include refid="inventoryStatusDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_inventory_status 
		<include refid="inventoryStatusDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="InventoryStatusResult">
    	select <include refid="inventoryStatusColumns" />
	    from t_wh_inventory_status 
		<include refid="inventoryStatusDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="InventoryStatusResult">
    	select <include refid="inventoryStatusColumns" />
	    from t_wh_inventory_status 
		<include refid="inventoryStatusDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="InventoryStatusResult">
    	select <include refid="inventoryStatusColumns" />
	    from t_wh_inventory_status 
		<include refid="inventoryStatusDynamicWhere"/>
		
    </select>

	
</mapper>
