<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.WhSeedingCollectionDao">
	<resultMap id="WhSeedingCollectionResult" type="com.baozun.scm.primservice.whoperation.model.warehouse.WhSeedingCollection">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whSeedingCollectionColumns">
	    <![CDATA[
	        	id as id,
	        	facility_id as facilityId,
	        	temporary_location_id as temporaryLocationId,
	        	location_id as locationId,
	        	container_id as containerId,
	        	batch as batch,
	        	collection_status as collectionStatus,
	        	ou_id as ouId,
	        	wave_code as waveCode,
	        	outer_container_id as outerContainerId,
	        	container_lattice_no as containerLatticeNo,
	        	outboundbox_id as outboundboxId,
	        	outboundbox_code as outboundboxCode,
	        	distribution_mode as distributionMode,
	        	picking_mode as pickingMode,
	        	checking_mode as checkingMode
	    ]]>
	</sql>
	
		<!-- 如果有自增字段 -->
		
			<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
			<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.WhSeedingCollection" 
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_wh_seeding_collection (
		        id,
		        	facility_id ,
		        	temporary_location_id ,
		        	location_id ,
		        	container_id ,
		        	batch ,
		        	collection_status ,
		        	ou_id,
		        	wave_code,
		        	outer_container_id,
		        	container_lattice_no,
		        	outboundbox_id,
		        	outboundbox_code,
		        	distribution_mode,
		        	picking_mode,
		        	checking_mode 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{facilityId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{temporaryLocationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{locationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{containerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{batch,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{collectionStatus,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT},
		        	#{waveCode,javaType=java.lang.String,jdbcType=VARCHAR} , 
		        	#{outerContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{containerLatticeNo,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{outboundboxId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{outboundboxCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{distributionMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{pickingMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{checkingMode,javaType=java.lang.String,jdbcType=VARCHAR} 
		        )
		    ]]>

		</insert>
		
		
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.WhSeedingCollection">
	    <![CDATA[
	        UPDATE t_wh_seeding_collection SET
		        facility_id = #{facilityId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        temporary_location_id = #{temporaryLocationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        location_id = #{locationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        container_id = #{containerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        batch = #{batch,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        wave_code = #{waveCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        collection_status = #{collectionStatus,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        outer_container_id = #{outerContainerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        container_lattice_no = #{containerLatticeNo,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        outboundbox_id = #{outboundboxId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        outboundbox_code = #{outboundboxCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        distribution_mode = #{distributionMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        picking_mode = #{pickingMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        checking_mode = #{checkingMode,javaType=java.lang.String,jdbcType=VARCHAR} 
	        WHERE 
		        id = #{id} 
		        and ou_id = #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_seeding_collection where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_seeding_collection 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="WhSeedingCollectionResult" flushCache="false">
			select <include refid="whSeedingCollectionColumns" />
		    <![CDATA[
			    from t_wh_seeding_collection 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="WhSeedingCollectionResult" flushCache="false">
			select <include refid="whSeedingCollectionColumns" />
			    from t_wh_seeding_collection 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="whSeedingCollectionDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="facilityId!=null">
					and facility_id = #{facilityId}
				</if>
	       
				<if test="temporaryLocationId!=null">
					and temporary_location_id = #{temporaryLocationId}
				</if>
	       
				<if test="locationId!=null">
					and location_id = #{locationId}
				</if>
	       
				<if test="containerId!=null">
					and container_id = #{containerId}
				</if>
	       
	       
		       <if test="batch!=null and batch!=''">
					and batch = #{batch}
				</if>
	       
	       
		       <if test="waveCode!=null and waveCode!=''">
					and wave_code = #{waveCode}
				</if>
	       
	       
		       <if test="collectionStatus!=null and collectionStatus!=''">
					and collection_status = #{collectionStatus}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
	       
				<if test="outerContainerId!=null">
					and outer_container_id = #{outerContainerId}
				</if>
	       
				<if test="containerLatticeNo!=null">
					and container_lattice_no = #{containerLatticeNo}
				</if>
	       
				<if test="outboundboxId!=null">
					and outboundbox_id = #{outboundboxId}
				</if>
	       
	       
		       <if test="outboundboxCode!=null and outboundboxCode!=''">
					and outboundbox_code = #{outboundboxCode}
				</if>
	       
	       
		       <if test="distributionMode!=null and distributionMode!=''">
					and distribution_mode = #{distributionMode}
				</if>
	       
	       
		       <if test="pickingMode!=null and pickingMode!=''">
					and picking_mode = #{pickingMode}
				</if>
	       
	       
		       <if test="checkingMode!=null and checkingMode!=''">
					and checking_mode = #{checkingMode}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_wh_seeding_collection 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_seeding_collection 
		<include refid="whSeedingCollectionDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_seeding_collection 
		<include refid="whSeedingCollectionDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="WhSeedingCollectionResult">
    	select <include refid="whSeedingCollectionColumns" />
	    from t_wh_seeding_collection 
		<include refid="whSeedingCollectionDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="WhSeedingCollectionResult">
    	select <include refid="whSeedingCollectionColumns" />
	    from t_wh_seeding_collection 
		<include refid="whSeedingCollectionDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="WhSeedingCollectionResult">
    	select <include refid="whSeedingCollectionColumns" />
	    from t_wh_seeding_collection 
		<include refid="whSeedingCollectionDynamicWhere"/>
		
    </select>

	
</mapper>
