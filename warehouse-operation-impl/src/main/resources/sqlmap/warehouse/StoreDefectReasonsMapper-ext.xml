<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.warehouse.StoreDefectReasonsDao">
	<resultMap id="StoreDefectReasonsResultExt" type="com.baozun.scm.primservice.whoperation.model.warehouse.StoreDefectReasons">
	</resultMap>
	
	<resultMap id="StoreDefectReasonsCommandResultExt" type="com.baozun.scm.primservice.whoperation.command.warehouse.StoreDefectReasonsCommand">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="storeDefectReasonsColumnsExt">
	    <![CDATA[
	        	s.id as id,
	        	s.defect_type_id as defectTypeId,
	        	s.name as name,
	        	s.code as code,
	        	s.description as description,
	        	s.create_time as createTime,
	        	s.last_modify_time as lastModifyTime,
	        	s.created_id as createdId,
	        	s.modified_id as modifiedId,
	        	sdt.name as defectTypeName,
	        	sdt.code as defectTypeCode
	    ]]>
	</sql>
	
	<sql id="storeDefectReasonsExt">
	    <![CDATA[
	        	s.id as id,
	        	s.defect_type_id as defectTypeId,
	        	s.name as name,
	        	s.code as code,
	        	s.description as description,
	        	s.create_time as createTime,
	        	s.last_modify_time as lastModifyTime,
	        	s.created_id as createdId,
	        	s.modified_id as modifiedId
	    ]]>
	</sql>
	
	<sql id="storeDefectReasonsDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and s.id = #{id}
				</if>
	       
				<if test="defectTypeId!=null">
					and s.defect_type_id = #{defectTypeId}
				</if>
	       
		       <if test="name!=null and name!=''">
					and s.name = #{name}
				</if>
	       
	       
		       <if test="code!=null and code!=''">
					and s.code = #{code}
				</if>
	       
	       
		       <if test="description!=null and description!=''">
					and s.description = #{description}
				</if>
	       
				<if test="createTime!=null">
					and s.create_time = #{createTime}
				</if>
	       
				<if test="lastModifyTime!=null">
					and s.last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="createdId!=null">
					and s.created_id = #{createdId}
				</if>
	       
				<if test="modifiedId!=null">
					and s.modified_id = #{modifiedId}
				</if>
		</where>
	</sql>
	
	<update id="updateByVersion"  parameterType="com.baozun.scm.primservice.whoperation.model.warehouse.StoreDefectReasons">
		    <![CDATA[
		        UPDATE t_bi_store_defect_reasons SET
		        defect_type_id = #{defectTypeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        name = #{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        code = #{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        description = #{description,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        last_modify_time = #{globalLastModifyTime} ,
		        created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} 
	        WHERE 
		        id = #{id} 
			    and last_modify_time	=  #{lastModifyTime}     
		    ]]>
	</update>
	
	<select id="uniqueCodeOrName" resultType="long">
		select count(*) from t_bi_store_defect_reasons 
		<where>
				<if test="id!=null">
					and id != #{id}
				</if>
	       
	       		<if test="defectTypeId!=null">
					and defect_type_id = #{defectTypeId}
				</if>
				
		       <if test="name!=null and name!=''">
					and name = #{name}
				</if>
	       
	       
		       <if test="code!=null and code!=''">
					and code = #{code}
				</if>
		</where>
	</select>
	
	<select id="findStoreDefectReasonsByDefectTypeIds" resultMap="StoreDefectReasonsCommandResultExt">
        select
        <include refid="storeDefectReasonsColumnsExt"/>
        from t_bi_store_defect_reasons s
        left join t_bi_store_defect_type sdt on sdt.id = s.defect_type_id
        where s.defect_type_id in
		<foreach item="item" index="index" collection="storeDefectTypeIds" open="(" separator="," close=")">
			#{item}		
        </foreach>	
    </select>
    
	<select id="findStoreDefectReasonsByDefectTypeId" resultMap="StoreDefectReasonsCommandResultExt">
        select
        <include refid="storeDefectReasonsExt"/>
        from t_bi_store_defect_reasons s 
		where s.defect_type_id = #{defectTypeId}
    </select>
	
	
</mapper>
