<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.handover.HandoverDao">
	<resultMap id="HandoverResult" type="com.baozun.scm.primservice.whoperation.model.handover.Handover">
	</resultMap>
	<resultMap id="HandoverPaginationResult" type="lark.common.dao.Pagination">
    	<collection property="items" javaType="ArrayList" resultMap="HandoverResult"/>
	</resultMap>
	 <!-- 用于select查询公用抽取的列 -->
	<sql id="handoverColumns">
	    <![CDATA[
	        	id as id,
	        	handover_station_id as handoverStationId,
	        	handover_station_type as handoverStationType,
	        	handover_batch as handoverBatch,
	        	group_condition as groupCondition,
	        	total_box as totalBox,
	        	customer_code as customerCode,
	        	customer_name as customerName,
	        	store_code as storeCode,
	        	store_name as storeName,
	        	transport_code as transportCode,
	        	transport_name as transportName,
	        	total_calc_weight as totalCalcWeight,
	        	total_actual_weight as totalActualWeight,
	        	ou_id as ouId,
	        	create_id as createId,
	        	create_time as createTime,
	        	last_modify_time as lastModifyTime,
	        	modified_id as modifiedId
	    ]]>
	</sql>
	<sql id="handoverConditionWhereExt">
		<where>
			<if test="likeEqualsMap != null">
				<foreach collection="likeEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} like CONCAT('%',#{value},'%') 
				</foreach> 
			</if> 
			<if test="equalsMap != null"> 
				<foreach collection="equalsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} = #{value} 
				</foreach> 
			</if> 
			<if test="notEqualsMap != null"> 
				<foreach collection="notEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} != #{value} 
				</foreach> 
			</if> 
			<if test="greateMap != null"> 
				<foreach collection="greateMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &gt; #{value} 
				</foreach> 
			</if> 
			<if test="greateEqualsMap != null"> 
				<foreach collection="greateEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &gt;= #{value} 
				</foreach> 
			</if> 
			<if test="lessMap != null"> 
				<foreach collection="lessMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &lt; #{value} 
				</foreach> 
			</if> 
			<if test="lessEqualsMap != null"> 
				<foreach collection="lessEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &lt;= #{value} 
				</foreach> 
			</if> 
			<if test="nullMap != null"> 
				<foreach collection="nullMap" index="key"  item="value" separator="and" open=" and "> 
					${key} is null 
				</foreach> 
			</if> 
			<if test="notNullMap != null"> 
				<foreach collection="notNullMap" index="key"  item="value" separator="and" open=" and "> 
					${key} is not null 
				</foreach> 
			</if> 
			<if test="inMap != null"> 
				<foreach collection="inMap" index="key"  item="value" separator="and" open=" and (" close=")"> 
					<foreach collection="value" item="itemin" index="index" separator="or"> 
						${key} = #{itemin} 
					</foreach> 
				</foreach> 
			</if> 
			<if test="notInMap != null"> 
				<foreach collection="notInMap" index="key"  item="value" separator="and" open=" and (" close=")"> 
					<foreach collection="value" item="itemin" index="index" separator="and"> 
						${key} != #{itemin} 
					</foreach> 
				</foreach> 
			</if> 
		</where>
		<if test="sortBy != null"> 
			<foreach collection="sortBy" item="item" separator=","  open=" order by "> 
				${item.field} ${item.type}
			</foreach> 
		</if>
	</sql>
	
		<!-- 如果有自增字段 -->
		
			<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
			<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.handover.Handover" 
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_wh_handover (
		        id,
		        	handover_station_id ,
		        	handover_station_type ,
		        	handover_batch ,
		        	group_condition ,
		        	total_box ,
		        	customer_code ,
		        	customer_name ,
		        	store_code ,
		        	store_name ,
		        	transport_code ,
		        	transport_name ,
		        	total_calc_weight ,
		        	total_actual_weight ,
		        	ou_id ,
		        	create_id ,
		        	create_time ,
		        	last_modify_time ,
		        	modified_id 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{handoverStationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{handoverStationType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{handoverBatch,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{groupCondition,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{totalBox,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{customerCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{customerName,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{storeCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{storeName,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{transportCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{transportName,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{totalCalcWeight,javaType=Double,jdbcType=DECIMAL} ,
		        	#{totalActualWeight,javaType=Double,jdbcType=DECIMAL} ,
		        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{createId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} 
		        )
		    ]]>

		</insert>
		
		
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.handover.Handover">
	    <![CDATA[
	        UPDATE t_wh_handover SET
		        handover_station_id = #{handoverStationId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        handover_station_type = #{handoverStationType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        handover_batch = #{handoverBatch,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        group_condition = #{groupCondition,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        total_box = #{totalBox,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        customer_code = #{customerCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        customer_name = #{customerName,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        store_code = #{storeCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        store_name = #{storeName,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        transport_code = #{transportCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        transport_name = #{transportName,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        total_calc_weight = #{totalCalcWeight,javaType=Double,jdbcType=DECIMAL} ,
		        total_actual_weight = #{totalActualWeight,javaType=Double,jdbcType=DECIMAL} ,
		        ou_id = #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        create_id = #{createId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
		<update id="batchUpdate">
	        UPDATE t_wh_handover SET
	        	<foreach collection="batchUpdateMap" index="key"  item="value" separator=",">
	        		${key} = #{value}
	        	</foreach>
	        	<include refid="handoverConditionWhereExt"/>
		</update>
		
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_handover where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_handover 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	    <update id="batchDelete">
	        delete from t_wh_handover <include refid="handoverConditionWhereExt"/>
		</update>
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="HandoverResult" flushCache="false">
			select <include refid="handoverColumns" />
		    <![CDATA[
			    from t_wh_handover 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="HandoverResult" flushCache="false">
			select <include refid="handoverColumns" />
			    from t_wh_handover 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="handoverDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="handoverStationId!=null">
					and handover_station_id = #{handoverStationId}
				</if>
	       
				<if test="handoverStationType!=null">
					and handover_station_type = #{handoverStationType}
				</if>
	       
	       
		       <if test="handoverBatch!=null and handoverBatch!=''">
					and handover_batch = #{handoverBatch}
				</if>
	       
	       
		       <if test="groupCondition!=null and groupCondition!=''">
					and group_condition = #{groupCondition}
				</if>
	       
				<if test="totalBox!=null">
					and total_box = #{totalBox}
				</if>
	       
	       
		       <if test="customerCode!=null and customerCode!=''">
					and customer_code = #{customerCode}
				</if>
	       
	       
		       <if test="customerName!=null and customerName!=''">
					and customer_name = #{customerName}
				</if>
	       
	       
		       <if test="storeCode!=null and storeCode!=''">
					and store_code = #{storeCode}
				</if>
	       
	       
		       <if test="storeName!=null and storeName!=''">
					and store_name = #{storeName}
				</if>
	       
	       
		       <if test="transportCode!=null and transportCode!=''">
					and transport_code = #{transportCode}
				</if>
	       
	       
		       <if test="transportName!=null and transportName!=''">
					and transport_name = #{transportName}
				</if>
	       
				<if test="totalCalcWeight!=null">
					and total_calc_weight = #{totalCalcWeight}
				</if>
	       
				<if test="totalActualWeight!=null">
					and total_actual_weight = #{totalActualWeight}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
	       
				<if test="createId!=null">
					and create_id = #{createId}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="modifiedId!=null">
					and modified_id = #{modifiedId}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_wh_handover 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_handover 
		<include refid="handoverDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_handover 
		<include refid="handoverDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="HandoverResult">
    	select <include refid="handoverColumns" />
	    from t_wh_handover 
		<include refid="handoverDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="HandoverResult">
    	select <include refid="handoverColumns" />
	    from t_wh_handover 
		<include refid="handoverDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="HandoverResult">
    	select <include refid="handoverColumns" />
	    from t_wh_handover 
		<include refid="handoverDynamicWhere"/>
		
    </select>
    
    <select id="query" resultMap="HandoverResult">
		select <include refid="handoverColumns" />
	    from t_wh_handover  
		<include refid="handoverConditionWhereExt"/>
    </select>
    
    <select id="queryCount" resultType="long">
		select count(*) from t_wh_handover  
		<include refid="handoverConditionWhereExt"/>
    </select>
	 
	
</mapper>
