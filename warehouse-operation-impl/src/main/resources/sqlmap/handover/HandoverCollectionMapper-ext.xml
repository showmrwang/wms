<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.handover.HandoverCollectionDao">
	<resultMap id="HandoverCollectionResultExt" type="com.baozun.scm.primservice.whoperation.model.handover.HandoverCollection">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="handoverCollectionColumnsExt">
	    <![CDATA[
	       id as id,
	        	outboundbox_id as outboundboxId,
	        	outboundbox_code as outboundboxCode,
	        	handover_station_id as handoverStationId,
	        	HANDOVER_STATION_TYPE as handoverStationType,
	        	handover_batch as handoverBatch,
	        	handover_status as handoverStatus,
	        	group_condition as groupCondition,
	        	ou_id as ouId,
	        	create_id as createId,
	        	create_time as createTime,
	        	last_modify_time as lastModifyTime,
	        	modified_id as modifiedId
	    ]]>
	</sql>
	
	<sql id="handoverCollectionDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="outboundboxId!=null">
					and outboundbox_id = #{outboundboxId}
				</if>
	       
	       
		       <if test="outboundboxCode!=null and outboundboxCode!=''">
					and outboundbox_code = #{outboundboxCode}
				</if>
	       
				<if test="handoverStationId!=null">
					and handover_station_id = #{handoverStationId}
				</if>
	       
	       
		       <if test="handoverStationType!=null and handoverStationType!=''">
					and HANDOVER_STATION_TYPE = #{handoverStationType}
				</if>
	       
	       
		       <if test="handoverBatch!=null and handoverBatch!=''">
					and handover_batch = #{handoverBatch}
				</if>
	       
	       
		       <if test="handoverStatus!=null and handoverStatus!=''">
					and handover_status = #{handoverStatus}
				</if>
	       
	       
		       <if test="groupCondition!=null and groupCondition!=''">
					and group_condition = #{groupCondition}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
				
				<if test="createId!=null">
					and create_id = #{createId}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="modifiedId!=null">
					and modified_id = #{modifiedId}
				</if>
		</where>
	</sql>
		
	<select id="findByCode" resultType="com.baozun.scm.primservice.whoperation.command.warehouse.WhHandoverStationCommand">
	       select id as id,
	        	type as type,
	        	serial_number as serialNumber,
	        	code as code,
	        	facility_group_id as facilityGroupId,
	        	ou_id as ouId,
	        	upper_capacity as upperCapacity,
	        	automatic_warehouse_crossing as automaticWarehouseCrossing,
	        	chr_id as chrId,
	        	lifecycle as lifecycle,
	        	create_id as createId,
	        	create_time as createTime,
	        	last_modify_time as lastModifyTime,
	        	modified_id as modifiedId
	              from t_wh_handover_station  
	              where code=#{code}
	</select>
	
	<select id="findByGroupCondition" resultMap="HandoverCollectionResultExt">
		select <include refid="handoverCollectionColumnsExt" />
	    from t_wh_handover_collection 
		<where>
	       		handover_status = 1
		       <if test="groupCondition!=null and groupCondition!=''">
					and group_condition = #{groupCondition}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
		</where>
    </select>
    
    <select id="findByOutboundboxCode" resultMap="HandoverCollectionResultExt">
		select <include refid="handoverCollectionColumnsExt" />
	    from t_wh_handover_collection 
		<where>
		       <if test="outboundboxCode!=null and outboundboxCode!=''">
					and outboundbox_code = #{outboundboxCode}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
		</where>
    </select>
    
    <select id="findByHandoverStation" resultMap="HandoverCollectionResultExt">
		select <include refid="handoverCollectionColumnsExt" />
	    from t_wh_handover_collection 
		<where>
	       		handover_status = 1 or handover_status = 5
		       <if test="handoverStationId!=null and handoverStationId!=''">
					and handover_station_id = #{handoverStationId}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
		</where>
    </select>
	<select id="findCountByHandoverStationIdAndStatus" resultType="integer">
			       SELECT
			count(1)
			FROM
				t_wh_handover_collection
			WHERE
				handover_station_id = #{HandoverStationCode}
			AND handover_status = #{status}
    </select>
	<select id="findBatchByHandoverStationIdAndStatus" resultType="String">
			     	SELECT
			DISTINCT(handover_batch)
				FROM
					t_wh_handover_collection
				WHERE
					handover_station_id = #{HandoverStationCode}
			AND handover_status = #{status}
			limit 1
			
    </select>
	<select id="findStatusByHandoverStationIdAndStatus" resultType="String">
			     	SELECT
			DISTINCT(handover_status)
				FROM
					t_wh_handover_collection
				WHERE
					handover_station_id = #{HandoverStationCode}
					AND handover_status = #{status}
						limit 1
    </select>
    <select id="findStationByCode" resultType="com.baozun.scm.primservice.whoperation.command.warehouse.WhHandoverStationCommand">
	       select id as id,
	        	type as type,
	        	serial_number as serialNumber,
	        	code as code,
	        	facility_group_id as facilityGroupId,
	        	ou_id as ouId,
	        	upper_capacity as upperCapacity,
	        	automatic_warehouse_crossing as automaticWarehouseCrossing,
	        	chr_id as chrId,
	        	lifecycle as lifecycle,
	        	create_id as createId,
	        	create_time as createTime,
	        	last_modify_time as lastModifyTime,
	        	modified_id as modifiedId
	              from t_wh_handover_station  
	              where code=#{code}
	</select>
	
	<select id="isTheSameCodeAndName" resultType="Integer">
			     select
					count(1)
				from (
						select *
					from  t_wh_outboundbox
						where outboundbox_code IN (
									select outboundbox_code
										from t_wh_handover_collection
										<where>
									       		handover_status = 1 or handover_status = 5
										       <if test="handoverStationId!=null and handoverStationId!=''">
													and handover_station_id = #{handoverStationId}
												</if>
									       
												<if test="ouId!=null">
													and ou_id = #{ouId}
												</if>
										</where>
													)
						GROUP BY customer_code,customer_name,store_name,store_code,transport_name,transport_code
				) as a
    </select>
	
</mapper>
