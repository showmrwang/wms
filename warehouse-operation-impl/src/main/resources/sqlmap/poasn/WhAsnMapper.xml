<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.poasn.WhAsnDao">
	<resultMap id="WhAsnResult" type="com.baozun.scm.primservice.whoperation.model.poasn.WhAsn">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whAsnColumns">
	    <![CDATA[
	        	id as id,
	        	asn_code as asnCode,
	        	po_id as poId,
	        	ou_id as ouId,
	        	customer_id as customerId,
	        	store_id as storeId,
	        	po_date as poDate,
	        	eta as eta,
	        	delivery_time as deliveryTime,
	        	qty_planned as qtyPlanned,
	        	qty_rcvd as qtyRcvd,
	        	ctn_planned as ctnPlanned,
	        	ctn_rcvd as ctnRcvd,
	        	supplier_id as supplierId,
	        	logistics_provider_id as logisticsProviderId,
	        	asn_type as asnType,
	        	status as status,
	        	is_iqc as isIqc,
	        	start_time as startTime,
	        	stop_time as stopTime,
	        	inbound_time as inboundTime,
	        	create_time as createTime,
	        	created_id as createdId,
	        	last_modify_time as lastModifyTime,
	        	modified_id as modifiedId,
	        	asn_ext_code as asnExtCode,
	        	po_ou_id as poOuId,
	        	ext_code as extCode,
	        	urgent_status as urgentStatus,
	        	version as version,
	        	uuid as uuid,
	        	overchage_rate as overChageRate
	    ]]>
	</sql>
		<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
		<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.poasn.WhAsn" 
		 flushCache="true">
	    <![CDATA[
	        INSERT INTO
	        t_wh_asn (
	        	id,
	        	asn_code ,
	        	asn_ext_code ,
	        	po_id ,
	        	ou_id ,
	        	customer_id ,
	        	store_id ,
	        	po_date ,
	        	eta ,
	        	delivery_time ,
	        	qty_planned ,
	        	qty_rcvd ,
	        	ctn_planned ,
	        	ctn_rcvd ,
	        	supplier_id ,
	        	logistics_provider_id ,
	        	asn_type ,
	        	status ,
	        	is_iqc ,
	        	start_time ,
	        	stop_time ,
	        	inbound_time ,
	        	create_time ,
	        	created_id ,
	        	last_modify_time ,
	        	modified_id,
	        	po_ou_id ,
	        	ext_code,
	        	urgent_status,
	        	uuid,
	        	overchage_rate
	        ) VALUES (
	        	#{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{asnCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{asnExtCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{poId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{customerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{poDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{eta,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{deliveryTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        #{qtyPlanned,javaType=java.lang.Double,jdbcType=DECIMAL} ,
		        #{qtyRcvd,javaType=java.lang.Double,jdbcType=DECIMAL} ,
	        	#{ctnPlanned,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{ctnRcvd,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{supplierId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{logisticsProviderId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{asnType,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	        	#{isIqc,javaType=java.lang.Boolean,jdbcType=BIT} ,
	        	#{startTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{stopTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{inboundTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
	        	#{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{poOuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	        	#{extCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{urgentStatus,javaType=java.lang.String,jdbcType=VARCHAR},
	        	#{uuid,javaType=java.lang.String,jdbcType=VARCHAR} ,
	        	#{overChageRate,javaType=java.lang.Double,jdbcType=DECIMAL} 
	        )
	    ]]>

		</insert>
	    
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.poasn.WhAsn">
	    <![CDATA[
	        UPDATE t_wh_asn SET
		        asn_code = #{asnCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        asn_ext_code = #{asnExtCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        po_id = #{poId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        ou_id = #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        customer_id = #{customerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        store_id = #{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        po_date = #{poDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        eta = #{eta,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        delivery_time = #{deliveryTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        qty_planned = #{qtyPlanned,javaType=java.lang.Double,jdbcType=DECIMAL} ,
		        qty_rcvd = #{qtyRcvd,javaType=java.lang.Double,jdbcType=DECIMAL} ,
		        ctn_planned = #{ctnPlanned,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        ctn_rcvd = #{ctnRcvd,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        supplier_id = #{supplierId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        logistics_provider_id = #{logisticsProviderId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        asn_type = #{asnType,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        status = #{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        is_iqc = #{isIqc,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        start_time = #{startTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        stop_time = #{stopTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        inbound_time = #{inboundTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        po_ou_id = #{poOuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        ext_code = #{extCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        urgent_status = #{urgentStatus,javaType=java.lang.String,jdbcType=VARCHAR},
		        uuid= #{uuid,javaType=java.lang.String,jdbcType=VARCHAR},
		        overchage_rate=#{overChageRate,javaType=java.lang.Double,jdbcType=DECIMAL} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_asn where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_asn 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="WhAsnResult" flushCache="false">
			select <include refid="whAsnColumns" />
		    <![CDATA[
			    from t_wh_asn 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="WhAsnResult" flushCache="false">
			select <include refid="whAsnColumns" />
			    from t_wh_asn 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="whAsnDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
	       
		       <if test="asnCode!=null and asnCode!=''">
					and asn_code = #{asnCode}
				</if>
				
		       <if test="asnExtCode!=null and asnExtCode!=''">
					and asn_ext_code = #{asnExtCode}
				</if>
	       
				<if test="poId!=null">
					and po_id = #{poId}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
	       
				<if test="customerId!=null">
					and customer_id = #{customerId}
				</if>
	       
				<if test="storeId!=null">
					and store_id = #{storeId}
				</if>
	       
				<if test="poDate!=null">
					and po_date = #{poDate}
				</if>
	       
				<if test="eta!=null">
					and eta = #{eta}
				</if>
	       
				<if test="deliveryTime!=null">
					and delivery_time = #{deliveryTime}
				</if>
	       
				<if test="qtyPlanned!=null">
					and qty_planned = #{qtyPlanned}
				</if>
	       
				<if test="qtyRcvd!=null">
					and qty_rcvd = #{qtyRcvd}
				</if>
	       
				<if test="ctnPlanned!=null">
					and ctn_planned = #{ctnPlanned}
				</if>
	       
				<if test="ctnRcvd!=null">
					and ctn_rcvd = #{ctnRcvd}
				</if>
	       
				<if test="supplierId!=null">
					and supplier_id = #{supplierId}
				</if>
	       
				<if test="logisticsProviderId!=null">
					and logistics_provider_id = #{logisticsProviderId}
				</if>
	       
				<if test="asnType!=null">
					and asn_type = #{asnType}
				</if>
	       
				<if test="status!=null">
					and status = #{status}
				</if>
	       
				<if test="isIqc!=null">
					and is_iqc = #{isIqc}
				</if>
	       
				<if test="startTime!=null">
					and start_time = #{startTime}
				</if>
	       
				<if test="stopTime!=null">
					and stop_time = #{stopTime}
				</if>
	       
				<if test="inboundTime!=null">
					and inbound_time = #{inboundTime}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="createdId!=null">
					and created_id = #{createdId}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="modifiedId!=null">
					and modified_id = #{modifiedId}
				</if>
				<if test="extCode!=null and extCode!=''">
					and ext_code = #{extCode}
				</if>
				<if test="urgentStatus!=null and urgentStatus!=''">
					and urgent_status = #{urgentStatus}
				</if>
				 <if test="uuid!=null and uuid!=''">
					and uuid = #{uuid}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_wh_asn 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_asn 
		<include refid="whAsnDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_asn 
		<include refid="whAsnDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="WhAsnResult">
    	select <include refid="whAsnColumns" />
	    from t_wh_asn 
		<include refid="whAsnDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="WhAsnResult">
    	select <include refid="whAsnColumns" />
	    from t_wh_asn 
		<include refid="whAsnDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="WhAsnResult">
    	select <include refid="whAsnColumns" />
	    from t_wh_asn 
		<include refid="whAsnDynamicWhere"/>
		
    </select>

    <select id="getByAsnCode" resultMap="WhAsnResult" parameterType="java.lang.String">
	    select <include refid="whAsnColumns"/>
	    <![CDATA[
	        from t_wh_asn where asn_code = #{asnCode}
	    ]]>
    </select>
    
	
</mapper>
