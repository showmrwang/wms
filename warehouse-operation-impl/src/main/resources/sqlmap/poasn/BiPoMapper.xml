<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.poasn.BiPoDao">
	<resultMap id="BiPoResult" type="com.baozun.scm.primservice.whoperation.model.poasn.BiPo">
	</resultMap>
	<resultMap id="BiPoPaginationResult" type="lark.common.dao.Pagination">
    	<collection property="items" javaType="ArrayList" resultMap="BiPoResult"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="biPoColumns">
	    <![CDATA[
	        	id as id,
	        	po_code as poCode,
	        	ext_code as extCode,
	        	customer_id as customerId,
	        	store_id as storeId,
	        	supplier_id as supplierId,
	        	logistics_provider_id as logisticsProviderId,
	        	po_type as poType,
	        	status as status,
	        	is_iqc as isIqc,
	        	po_date as poDate,
	        	eta as eta,
	        	delivery_time as deliveryTime,
	        	qty_planned as qtyPlanned,
	        	qty_rcvd as qtyRcvd,
	        	ctn_planned as ctnPlanned,
	        	ctn_rcvd as ctnRcvd,
	        	start_time as startTime,
	        	stop_time as stopTime,
	        	inbound_time as inboundTime,
	        	is_wms as isWms,
	        	is_vmi as isVmi,
	        	create_time as createTime,
	        	created_id as createdId,
	        	last_modify_time as lastModifyTime,
	        	modified_id as modifiedId,
	        	ou_id as ouId
	    ]]>
	</sql>
	<sql id="biPoConditionWhereExt">
		<where>
			<if test="likeEqualsMap != null">
				<foreach collection="likeEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} like CONCAT('%',#{value},'%') 
				</foreach> 
			</if> 
			<if test="equalsMap != null"> 
				<foreach collection="equalsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} = #{value} 
				</foreach> 
			</if> 
			<if test="notEqualsMap != null"> 
				<foreach collection="notEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} != #{value} 
				</foreach> 
			</if> 
			<if test="greateMap != null"> 
				<foreach collection="greateMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &gt; #{value} 
				</foreach> 
			</if> 
			<if test="greateEqualsMap != null"> 
				<foreach collection="greateEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &gt;= #{value} 
				</foreach> 
			</if> 
			<if test="lessMap != null"> 
				<foreach collection="lessMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &lt; #{value} 
				</foreach> 
			</if> 
			<if test="lessEqualsMap != null"> 
				<foreach collection="lessEqualsMap" index="key"  item="value" separator="and" open=" and "> 
					${key} &lt;= #{value} 
				</foreach> 
			</if> 
			<if test="nullMap != null"> 
				<foreach collection="nullMap" index="key"  item="value" separator="and" open=" and "> 
					${key} is null 
				</foreach> 
			</if> 
			<if test="notNullMap != null"> 
				<foreach collection="notNullMap" index="key"  item="value" separator="and" open=" and "> 
					${key} is not null 
				</foreach> 
			</if> 
			<if test="inMap != null"> 
				<foreach collection="inMap" index="key"  item="value" separator="and" open=" and (" close=")"> 
					<foreach collection="value" item="itemin" index="index" separator="or"> 
						${key} = #{itemin} 
					</foreach> 
				</foreach> 
			</if> 
			<if test="notInMap != null"> 
				<foreach collection="notInMap" index="key"  item="value" separator="and" open=" and (" close=")"> 
					<foreach collection="value" item="itemin" index="index" separator="and"> 
						${key} != #{itemin} 
					</foreach> 
				</foreach> 
			</if> 
		</where>
		<if test="sortBy != null"> 
			<foreach collection="sortBy" item="item" separator=","  open=" order by "> 
				${item.field} ${item.type}
			</foreach> 
		</if>
	</sql>
	
		<!-- 如果有自增字段 -->
		
			<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
			<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.poasn.BiPo" 
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_bi_po (
		        id,
		        	po_code ,
		        	ext_code ,
		        	customer_id ,
		        	store_id ,
		        	supplier_id ,
		        	logistics_provider_id ,
		        	po_type ,
		        	status ,
		        	is_iqc ,
		        	po_date ,
		        	eta ,
		        	delivery_time ,
		        	qty_planned ,
		        	qty_rcvd ,
		        	ctn_planned ,
		        	ctn_rcvd ,
		        	start_time ,
		        	stop_time ,
		        	inbound_time ,
		        	is_wms ,
		        	is_vmi ,
		        	create_time ,
		        	created_id ,
		        	last_modify_time ,
		        	modified_id ,
		        	ou_id
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{poCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{extCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{customerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{supplierId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{logisticsProviderId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{poType,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{isIqc,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        	#{poDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{eta,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{deliveryTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{qtyPlanned,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{qtyRcvd,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{ctnPlanned,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{ctnRcvd,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{startTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{stopTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{inboundTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{isWms,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        	#{isVmi,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT} 
		        )
		    ]]>

		</insert>
		
		
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.poasn.BiPo">
	    <![CDATA[
	        UPDATE t_bi_po SET
		        po_code = #{poCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        ext_code = #{extCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        customer_id = #{customerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        store_id = #{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        supplier_id = #{supplierId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        logistics_provider_id = #{logisticsProviderId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        po_type = #{poType,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        status = #{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        is_iqc = #{isIqc,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        po_date = #{poDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        eta = #{eta,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        delivery_time = #{deliveryTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        qty_planned = #{qtyPlanned,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        qty_rcvd = #{qtyRcvd,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        ctn_planned = #{ctnPlanned,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        ctn_rcvd = #{ctnRcvd,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        start_time = #{startTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        stop_time = #{stopTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        inbound_time = #{inboundTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        is_wms = #{isWms,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        is_vmi = #{isVmi,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
		<update id="batchUpdate">
	        UPDATE t_bi_po SET
	        	<foreach collection="batchUpdateMap" index="key"  item="value" separator=",">
	        		${key} = #{value}
	        	</foreach>
	        	<include refid="biPoConditionWhereExt"/>
		</update>
		
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_bi_po where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_bi_po 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	    <update id="batchDelete">
	        delete from t_bi_po <include refid="biPoConditionWhereExt"/>
		</update>
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="BiPoResult" flushCache="false">
			select <include refid="biPoColumns" />
		    <![CDATA[
			    from t_bi_po 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="BiPoResult" flushCache="false">
			select <include refid="biPoColumns" />
			    from t_bi_po 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="biPoDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
	       
		       <if test="poCode!=null and poCode!=''">
					and po_code = #{poCode}
				</if>
	       
	       
		       <if test="extCode!=null and extCode!=''">
					and ext_code = #{extCode}
				</if>
	       
				<if test="customerId!=null">
					and customer_id = #{customerId}
				</if>
	       
				<if test="storeId!=null">
					and store_id = #{storeId}
				</if>
	       
				<if test="supplierId!=null">
					and supplier_id = #{supplierId}
				</if>
	       
				<if test="logisticsProviderId!=null">
					and logistics_provider_id = #{logisticsProviderId}
				</if>
	       
				<if test="poType!=null">
					and po_type = #{poType}
				</if>
	       
				<if test="status!=null">
					and status = #{status}
				</if>
	       
				<if test="isIqc!=null">
					and is_iqc = #{isIqc}
				</if>
	       
				<if test="poDate!=null">
					and po_date = #{poDate}
				</if>
	       
				<if test="eta!=null">
					and eta = #{eta}
				</if>
	       
				<if test="deliveryTime!=null">
					and delivery_time = #{deliveryTime}
				</if>
	       
				<if test="qtyPlanned!=null">
					and qty_planned = #{qtyPlanned}
				</if>
	       
				<if test="qtyRcvd!=null">
					and qty_rcvd = #{qtyRcvd}
				</if>
	       
				<if test="ctnPlanned!=null">
					and ctn_planned = #{ctnPlanned}
				</if>
	       
				<if test="ctnRcvd!=null">
					and ctn_rcvd = #{ctnRcvd}
				</if>
	       
				<if test="startTime!=null">
					and start_time = #{startTime}
				</if>
	       
				<if test="stopTime!=null">
					and stop_time = #{stopTime}
				</if>
	       
				<if test="inboundTime!=null">
					and inbound_time = #{inboundTime}
				</if>
	       
				<if test="isWms!=null">
					and is_wms = #{isWms}
				</if>
	       
				<if test="isVmi!=null">
					and is_vmi = #{isVmi}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="createdId!=null">
					and created_id = #{createdId}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="modifiedId!=null">
					and modified_id = #{modifiedId}
				</if>
				
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_bi_po 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_bi_po 
		<include refid="biPoDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_bi_po 
		<include refid="biPoDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="BiPoResult">
    	select <include refid="biPoColumns" />
	    from t_bi_po 
		<include refid="biPoDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="BiPoResult">
    	select <include refid="biPoColumns" />
	    from t_bi_po 
		<include refid="biPoDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="BiPoResult">
    	select <include refid="biPoColumns" />
	    from t_bi_po 
		<include refid="biPoDynamicWhere"/>
		
    </select>
    
    <select id="query" resultMap="BiPoResult">
		select <include refid="biPoColumns" />
	    from t_bi_po  
		<include refid="biPoConditionWhereExt"/>
    </select>
    
    <select id="queryCount" resultType="long">
		select count(*) from t_bi_po  
		<include refid="biPoConditionWhereExt"/>
    </select>

	
</mapper>
