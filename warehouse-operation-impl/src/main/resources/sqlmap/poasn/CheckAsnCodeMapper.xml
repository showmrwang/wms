<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.poasn.CheckAsnCodeDao">
	<resultMap id="CheckAsnCodeResult" type="com.baozun.scm.primservice.whoperation.model.poasn.CheckAsnCode">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="checkAsnCodeColumns">
	    <![CDATA[
	        	id as id,
	        	asn_code as asnCode,
	        	asn_ext_code as asnExtCode,
	        	store_id as storeId,
	        	ou_id as ouId
	    ]]>
	</sql>
	
		<!-- 如果有自增字段 -->
	
			<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
			<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.poasn.CheckAsnCode" 
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_wh_check_asncode (
		        id,
		        	asn_code ,
		        	asn_ext_code ,
		        	store_id ,
		        	ou_id 
		        ) VALUES (
		        	#{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{asnCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{asnExtCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT} 
		        )
		    ]]>
	
			</insert>
		
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.poasn.CheckAsnCode">
	    <![CDATA[
	        UPDATE t_wh_check_asncode SET
		        asn_code = #{asnCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        asn_ext_code = #{asnExtCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        store_id = #{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        ou_id = #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_check_asncode where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_check_asncode 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="CheckAsnCodeResult" flushCache="false">
			select <include refid="checkAsnCodeColumns" />
		    <![CDATA[
			    from t_wh_check_asncode 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="CheckAsnCodeResult" flushCache="false">
			select <include refid="checkAsnCodeColumns" />
			    from t_wh_check_asncode 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="checkAsnCodeDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
	       
		       <if test="asnCode!=null and asnCode!=''">
					and asn_code = #{asnCode}
				</if>
	       
	       
		       <if test="asnExtCode!=null and asnExtCode!=''">
					and asn_ext_code = #{asnExtCode}
				</if>
	       
				<if test="storeId!=null">
					and store_id = #{storeId}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_wh_check_asncode 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_check_asncode 
		<include refid="checkAsnCodeDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_check_asncode 
		<include refid="checkAsnCodeDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="CheckAsnCodeResult">
    	select <include refid="checkAsnCodeColumns" />
	    from t_wh_check_asncode 
		<include refid="checkAsnCodeDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="CheckAsnCodeResult">
    	select <include refid="checkAsnCodeColumns" />
	    from t_wh_check_asncode 
		<include refid="checkAsnCodeDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="CheckAsnCodeResult">
    	select <include refid="checkAsnCodeColumns" />
	    from t_wh_check_asncode 
		<include refid="checkAsnCodeDynamicWhere"/>
		
    </select>

	
</mapper>
