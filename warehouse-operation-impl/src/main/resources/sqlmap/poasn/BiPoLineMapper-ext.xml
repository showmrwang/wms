<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.poasn.BiPoLineDao">
	<resultMap id="BiPoLineResultExt" type="com.baozun.scm.primservice.whoperation.command.poasn.BiPoLineCommand">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="biPoLineColumnsExt">
	    <![CDATA[
	        	id as id,
	        	po_id as poId,
	        	linenum as linenum,
	        	sku_id as skuId,
	        	qty_planned as qtyPlanned,
	        	overshipped as overshipped,
	        	available_qty as availableQty,
	        	ctn_planned as ctnPlanned,
	        	qty_rcvd as qtyRcvd,
	        	ctn_rcvd as ctnRcvd,
	        	status as status,
	        	is_iqc as isIqc,
	        	mfg_date as mfgDate,
	        	exp_date as expDate,
	        	valid_date as validDate,
	        	batch_no as batchNo,
	        	country_of_origin as countryOfOrigin,
	        	inv_status as invStatus,
	        	inv_attr1 as invAttr1,
	        	inv_attr2 as invAttr2,
	        	inv_attr3 as invAttr3,
	        	inv_attr4 as invAttr4,
	        	inv_attr5 as invAttr5,
	        	create_time as createTime,
	        	created_id as createdId,
	        	last_modify_time as lastModifyTime,
	        	modified_id as modifiedId,
	        	uuid as uuid,
	        	po_line_id as poLineId,
	        	inv_type as invType,
	        	valid_date_uom as validDateUom
	    ]]>
	</sql>
	
	<sql id="biPoLineDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="poId!=null">
					and po_id = #{poId}
				</if>
	       
				<if test="linenum!=null">
					and linenum = #{linenum}
				</if>
	       
				<if test="skuId!=null">
					and sku_id = #{skuId}
				</if>
	       
				<if test="qtyPlanned!=null">
					and qty_planned = #{qtyPlanned}
				</if>
	       
				<if test="overshipped!=null">
					and overshipped = #{overshipped}
				</if>
	       
				<if test="availableQty!=null">
					and available_qty = #{availableQty}
				</if>
	       
				<if test="ctnPlanned!=null">
					and ctn_planned = #{ctnPlanned}
				</if>
	       
				<if test="qtyRcvd!=null">
					and qty_rcvd = #{qtyRcvd}
				</if>
	       
				<if test="ctnRcvd!=null">
					and ctn_rcvd = #{ctnRcvd}
				</if>
	       
				<if test="status!=null">
					and status = #{status}
				</if>
	       
				<if test="isIqc!=null">
					and is_iqc = #{isIqc}
				</if>
	       
				<if test="mfgDate!=null">
					and mfg_date = #{mfgDate}
				</if>
	       
				<if test="expDate!=null">
					and exp_date = #{expDate}
				</if>
	       
				<if test="validDate!=null">
					and valid_date = #{validDate}
				</if>
	       
	       
		       <if test="batchNo!=null and batchNo!=''">
					and batch_no = #{batchNo}
				</if>
	       
	       
		       <if test="countryOfOrigin!=null and countryOfOrigin!=''">
					and country_of_origin = #{countryOfOrigin}
				</if>
	       
				<if test="invStatus!=null">
					and inv_status = #{invStatus}
				</if>
	       
	       
		       <if test="invAttr1!=null and invAttr1!=''">
					and inv_attr1 = #{invAttr1}
				</if>
	       
	       
		       <if test="invAttr2!=null and invAttr2!=''">
					and inv_attr2 = #{invAttr2}
				</if>
	       
	       
		       <if test="invAttr3!=null and invAttr3!=''">
					and inv_attr3 = #{invAttr3}
				</if>
	       
	       
		       <if test="invAttr4!=null and invAttr4!=''">
					and inv_attr4 = #{invAttr4}
				</if>
	       
	       
		       <if test="invAttr5!=null and invAttr5!=''">
					and inv_attr5 = #{invAttr5}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="createdId!=null">
					and created_id = #{createdId}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="modifiedId!=null">
					and modified_id = #{modifiedId}
				</if>
	       
	       
		       <if test="uuid!=null and uuid!=''">
					and uuid = #{uuid}
				</if>
	       
				<if test="poLineId!=null">
					and po_line_id = #{poLineId}
				</if>
	       
	       
		       <if test="invType!=null and invType!=''">
					and inv_type = #{invType}
				</if>
	       
	       
		       <if test="validDateUom!=null and validDateUom!=''">
					and valid_date_uom = #{validDateUom}
				</if>
		</where>
	</sql>
	
	<select id="findPoLineByAddPoLineParam" resultMap="BiPoLineResult">
    	select <include refid="biPoLineColumnsExt" />
	    from 
	    t_bi_po_line 
	    <where>
	    	po_id = #{poid} 
	    	and sku_id = #{skuid}
	    	and is_iqc = #{isIqc} 
	    	and inv_status = #{invStatus} 
	    	and status in 
	    	<foreach collection="status" item="id" open="(" separator=","
				close=")">
				#{id}
			</foreach>
	    	<if test="mfgDate != null">
	    		and mfg_date = #{mfgDate}
	    	</if>
	    	<if test="expDate != null">
	    		and exp_date = #{expDate}
	    	</if>
	    	<if test="validDate != null">
	    		and valid_date = #{validDate}
	    	</if>
	    	<if test="batchNo != null and batchNo != ''">
	    		and batch_no = #{batchNo}
	    	</if>
	    	<if test="coo != null and coo != ''">
	    		and country_of_origin = #{coo}
	    	</if>
	    	<if test="invStatus != null">
	    		and inv_status = #{invStatus}
	    	</if>
	    	<if test="uuid != null">
	    		and uuid = #{uuid}
	    	</if>
	    </where>
    </select>
    
    <update id="updateByVersion" parameterType="com.baozun.scm.primservice.whoperation.model.poasn.BiPoLine">
		    <![CDATA[
		        UPDATE t_bi_po_line SET
			        po_id = #{poId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        linenum = #{linenum,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        sku_id = #{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,        
			        qty_planned = #{qtyPlanned,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			        overshipped = #{overshipped,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			        available_qty = #{availableQty,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			        ctn_planned = #{ctnPlanned,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        qty_rcvd = #{qtyRcvd,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			        ctn_rcvd = #{ctnRcvd,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        status = #{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        is_iqc = #{isIqc,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        mfg_date = #{mfgDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        exp_date = #{expDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        valid_date = #{validDate,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        batch_no = #{batchNo,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        country_of_origin = #{countryOfOrigin,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_status = #{invStatus,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        inv_type = #{invType,javaType=java.lang.String,jdbcType=VARCHAR},
			        inv_attr1 = #{invAttr1,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr2 = #{invAttr2,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr3 = #{invAttr3,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr4 = #{invAttr4,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr5 = #{invAttr5,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        last_modify_time = now(), 
			        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        uuid = #{uuid,javaType=java.lang.String,jdbcType=VARCHAR} , 
			        po_line_id = #{poLineId,javaType=java.lang.Long,jdbcType=BIGINT}  ,
			        valid_date_uom = #{validDateUom,javaType=java.lang.String,jdbcType=VARCHAR}
		    ]]>
		    <where>
		    		id = #{id} 
			        and last_modify_time	=  #{lastModifyTime}    
		    </where>
		</update>
		
		<sql id="biPoLineDynamicPageWhereExt">
			<where>
					(line.uuid = '' or line.uuid is null or line.uuid = #{uuid}) 
					<if test="poId!=null">
						and line.po_id = #{poId}
					</if>
			</where>
		</sql>
		
		<sql id="BiPoLineRelatedColumnsMapExt">
	    <![CDATA[
				line.id as id,
				line.po_id as poId,
				line.linenum as linenum,     	
				line.sku_id as skuId,
				line.qty_planned as qtyPlanned,
				line.overshipped as overshipped,
				line.available_qty as availableQty,
				line.ctn_planned as ctnPlanned,
				line.qty_rcvd as qtyRcvd,
				line.ctn_rcvd as ctnRcvd,
				line.status as status,
				line.is_iqc as isIqc,
				date_format(line.mfg_date,'%Y-%m-%d') as mfgDateStr,
				date_format(line.exp_date,'%Y-%m-%d') as expDateStr,
				line.valid_date as validDate,
				line.batch_no as batchNo,
				line.country_of_origin as countryOfOrigin,
				line.inv_status as invStatus,
				line.inv_type as invType,
				line.inv_attr1 as invAttr1,
				line.inv_attr2 as invAttr2,
				line.inv_attr3 as invAttr3,
				line.inv_attr4 as invAttr4,
				line.inv_attr5 as invAttr5,
				line.create_time as createTime,
				line.created_id as createdId,
				line.last_modify_time as lastModifyTime,
				line.modified_id as modifiedId,
				line.uuid as uuid,
				line.po_line_id as poLineId,
				line.valid_date_uom  as validDateUom,
				sys.dic_label as statusName,
				inv.name as invName,
				po.po_code as poCode,
				po.ext_code as extCode,
				sku.code as skuCode,
				sku.ext_code as skuExtCode,
				sku.bar_code as skuBarCode,
				sku.name as skuName,
				uom.uom_name as validDateUomName,
				mgmt.is_inv_type as isInvType,
				extattr.inv_attr1 as isInvAttr1,
				extattr.inv_attr2 as isInvAttr2,
				extattr.inv_attr3 as isInvAttr3,
				extattr.inv_attr4 as isInvAttr4,
				extattr.inv_attr5 as isInvAttr5
	    ]]>
	</sql>	
	
		<select id="findListByQueryMapWithPageExt" resultMap="BiPoLineResultExt">
    	select <include refid="BiPoLineRelatedColumnsMapExt" />
	    from 
	    t_bi_po_line line 
	    inner join t_bi_po po on po.id = line.po_id 
		left join sys_dictionary sys on sys.dic_value = line.status and sys.group_value = 'BIPOLINE_STATUS'
		left join t_wh_inventory_status inv on inv.id = line.inv_status 
		left join t_wh_sku sku on line.sku_id = sku.id
		left join t_wh_sku_mgmt mgmt on mgmt.sku_id=sku.id
		left join t_wh_sku_extattr extattr on extattr.sku_id=sku.id
		left join t_wh_uom uom on uom.uom_code=line.valid_date_uom
		<include refid="biPoLineDynamicPageWhereExt"/>
    </select>
    
		<select id="findListByQueryMapWithPageExtForCreateSubPo" resultMap="BiPoLineResultExt">
		select * from (
    	select <include refid="BiPoLineRelatedColumnsMapExt" />,
    	line.available_qty-IFNULL((select SUM(IFNULL(pline.qty_planned,0) ) from t_wh_po_line pline where pline.po_line_id=line.id and pline.uuid is not null),0) as availableSub
	    from 
	    t_bi_po_line line 
	    inner join t_bi_po po on po.id = line.po_id 
		left join sys_dictionary sys on sys.dic_value = line.status and sys.group_value = 'BIPOLINE_STATUS'
		left join t_wh_inventory_status inv on inv.id = line.inv_status 
		left join t_wh_sku sku on line.sku_id = sku.id
		left join t_wh_sku_mgmt mgmt on mgmt.sku_id=sku.id
		left join t_wh_sku_extattr extattr on extattr.sku_id=sku.id
		left join t_wh_uom uom on uom.uom_code=line.valid_date_uom
		<where>
			line.uuid is  null
			and line.po_id = #{poId}
			and line.available_qty>0
			<if test="skuName!=null and skuName!=''">
				and sku.name like #{skuName}
			</if>
			<if test="skuCode!=null and skuCode!=''">
				and sku.code = #{skuCode}
			</if>
			</where>
			) relatedLine where relatedLine.availableSub>0
    </select>
    		
		
	<select id="findListCountByQueryMapExtForCreateSubPo" resultType="long">
        select count(*) from (
    	select <include refid="BiPoLineRelatedColumnsMapExt" />,
    	line.available_qty-IFNULL((select SUM(IFNULL(pline.qty_planned,0) ) from t_wh_po_line pline where pline.po_line_id=line.id and pline.uuid is not null),0) as availableSub
	    from 
	    t_bi_po_line line 
	    inner join t_bi_po po on po.id = line.po_id 
		left join sys_dictionary sys on sys.dic_value = line.status and sys.group_value = 'BIPOLINE_STATUS'
		left join t_wh_inventory_status inv on inv.id = line.inv_status 
		left join t_wh_sku sku on line.sku_id = sku.id
		left join t_wh_sku_mgmt mgmt on mgmt.sku_id=sku.id
		left join t_wh_sku_extattr extattr on extattr.sku_id=sku.id
		left join t_wh_uom uom on uom.uom_code=line.valid_date_uom
		<where>
			line.uuid is  null
			and line.po_id = #{poId}
			and line.available_qty>0
			<if test="skuName!=null and skuName!=''">
				and sku.name like #{skuName}
			</if>
			<if test="skuCode!=null and skuCode!=''">
				and sku.code = #{skuCode}
			</if>
			</where>
			) relatedLine where relatedLine.availableSub>0
		</select>
		
	<select id="findListCountByQueryMapExt" resultType="long">
        select count(*) 
        from 
	    t_bi_po_line line 
	    inner join t_bi_po po on po.id = line.po_id 
		left join sys_dictionary sys on sys.dic_value = line.status and sys.group_value = 'BIPOLINE_STATUS'
		left join t_wh_inventory_status inv on inv.id = line.inv_status 
		left join t_wh_sku sku on line.sku_id = sku.id
		left join t_wh_sku_mgmt mgmt on mgmt.sku_id=sku.id
		left join t_wh_sku_extattr extattr on extattr.sku_id=sku.id
		left join t_wh_uom uom on uom.uom_code=line.valid_date_uom
		<include refid="biPoLineDynamicPageWhereExt"/>
    </select>
	
	<select id="findBiPoLineByPoIdAndUuid" parameterType="map" resultMap="BiPoLineResult" flushCache="false">
			select <include refid="biPoLineColumns" />
			    from t_bi_po_line 
		        where 
		        po_id = #{poId}  
		        <if test="uuid!=null and uuid!=''">
					 and uuid=#{uuid}
				</if>
		</select>
				
		 <delete id="deleteBiPoLineByPoIdAndNotUuid">
			delete  from t_bi_po_line where po_id=#{poId} 
				and uuid !=#{uuid}
		</delete>
		
		
		<select id="findCommandbyId" resultMap="BiPoLineResultExt">
    	select <include refid="BiPoLineRelatedColumnsMapExt" />
	    from 
	    t_bi_po_line line 
	    inner join t_bi_po po on po.id = line.po_id 
		left join sys_dictionary sys on sys.dic_value = line.status and sys.group_value = 'BIPOLINE_STATUS'
		left join t_wh_inventory_status inv on inv.id = line.inv_status 
		left join t_wh_sku sku on line.sku_id = sku.id
		left join t_wh_sku_mgmt mgmt on mgmt.sku_id=sku.id
		left join t_wh_sku_extattr extattr on extattr.sku_id=sku.id
		left join t_wh_uom uom on uom.uom_code=line.valid_date_uom
		where line.id=#{id}
    </select>
		
</mapper>
