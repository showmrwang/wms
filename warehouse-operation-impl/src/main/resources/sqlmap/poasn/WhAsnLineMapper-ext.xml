<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.poasn.WhAsnLineDao">
	<resultMap id="WhAsnLineResultExt" type="com.baozun.scm.primservice.whoperation.model.poasn.WhAsnLine">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whAsnLineColumnsExt">
	    <![CDATA[
	        	id as id,
	        	asn_id as asnId,
	        	po_line_id as poLineId,
	        	ou_id as ouId,
	        	po_linenum as poLinenum,
	        	sku_id as skuId,
	        	qty_planned as qtyPlanned,
	        	ctn_planned as ctnPlanned,
	        	qty_rcvd as qtyRcvd,
	        	ctn_rcvd as ctnRcvd,
	        	status as status,
	        	is_iqc as isIqc,
	        	mfg_date as mfgDate,
	        	exp_date as expDate,
	        	valid_date as validDate,
	        	batch_no as batchNo,
	        	country_of_origin as countryOfOrigin,
	        	inv_status as invStatus,
	        	inv_type as invType,
	        	inv_attr1 as invAttr1,
	        	inv_attr2 as invAttr2,
	        	inv_attr3 as invAttr3,
	        	inv_attr4 as invAttr4,
	        	inv_attr5 as invAttr5,
	        	create_time as createTime,
	        	created_id as createdId,
	        	last_modify_time as lastModifyTime,
	        	modified_id as modifiedId,
	        	valid_date_uom as validDateUom,
	        	uuid as uuid
	    ]]>
	</sql>
	
	<sql id="whAsnLineDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="asnId!=null">
					and asn_id = #{asnId}
				</if>
	       
				<if test="poLineId!=null">
					and po_line_id = #{poLineId}
				</if>
	       
				<if test="linenum!=null">
					and linenum = #{linenum}
				</if>
	       
				<if test="skuId!=null">
					and sku_id = #{skuId}
				</if>
	       
				<if test="qtyPlanned!=null">
					and qty_planned = #{qtyPlanned}
				</if>
	       
				<if test="ctnPlanned!=null">
					and ctn_planned = #{ctnPlanned}
				</if>
	       
				<if test="qtyRcvd!=null">
					and qty_rcvd = #{qtyRcvd}
				</if>
	       
				<if test="ctnRcvd!=null">
					and ctn_rcvd = #{ctnRcvd}
				</if>
	       
				<if test="status!=null">
					and status = #{status}
				</if>
	       
				<if test="isIqc!=null">
					and is_iqc = #{isIqc}
				</if>
	       
				<if test="mfgDate!=null">
					and mfg_date = #{mfgDate}
				</if>
	       
				<if test="expDate!=null">
					and exp_date = #{expDate}
				</if>
	       
				<if test="validDate!=null">
					and valid_date = #{validDate}
				</if>
	       
	       
		       <if test="batchNo!=null and batchNo!=''">
					and batch_no = #{batchNo}
				</if>
	       
	       
		       <if test="countryOfOrigin!=null and countryOfOrigin!=''">
					and country_of_origin = #{countryOfOrigin}
				</if>
	       
				<if test="invStatus!=null">
					and inv_status = #{invStatus}
				</if>
	       
	       
		       <if test="invType!=null and invType!=''">
					and inv_type = #{invType}
				</if>
	       
		       <if test="invAttr1!=null and invAttr1!=''">
					and inv_attr1 = #{invAttr1}
				</if>
	       
	       
		       <if test="invAttr2!=null and invAttr2!=''">
					and inv_attr2 = #{invAttr2}
				</if>
	       
	       
		       <if test="invAttr3!=null and invAttr3!=''">
					and inv_attr3 = #{invAttr3}
				</if>
	       
	       
		       <if test="invAttr4!=null and invAttr4!=''">
					and inv_attr4 = #{invAttr4}
				</if>
	       
	       
		       <if test="invAttr5!=null and invAttr5!=''">
					and inv_attr5 = #{invAttr5}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="createdId!=null">
					and created_id = #{createdId}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="modifiedId!=null">
					and modified_id = #{modifiedId}
				</if>
				
				<if test="validDateUom!=null and validDateUom!=''">
					and valid_date_uom = #{validDateUom}
				</if>
				
				 <if test="uuid!=null and uuid!=''">
					and uuid = #{uuid}
				</if>
		</where>
	</sql>
	

		<update id="updateByVersion" parameterType="com.baozun.scm.primservice.whoperation.model.poasn.WhAsnLine">
		    <![CDATA[
		        UPDATE t_wh_asn_line SET
			        asn_id = #{asnId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        po_line_id = #{poLineId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        po_linenum = #{poLinenum,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        sku_id = #{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
	       			qty_planned = #{qtyPlanned,javaType=java.lang.Double,jdbcType=DECIMAL} ,
	       			ctn_planned = #{ctnPlanned,javaType=java.lang.Integer,jdbcType=INTEGER} ,
	       			qty_rcvd = #{qtyRcvd,javaType=java.lang.Double,jdbcType=DECIMAL} ,
	       			ctn_rcvd = #{ctnRcvd,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        status = #{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        is_iqc = #{isIqc,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        mfg_date = #{mfgDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        exp_date = #{expDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        valid_date = #{validDate,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        batch_no = #{batchNo,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        country_of_origin = #{countryOfOrigin,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_status = #{invStatus,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        inv_type = #{invType,javaType=java.lang.String,jdbcType=VARCHAR},
			        inv_attr1 = #{invAttr1,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr2 = #{invAttr2,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr3 = #{invAttr3,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr4 = #{invAttr4,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        inv_attr5 = #{invAttr5,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        valid_date_uom=#{validDateUom,javaType=java.lang.String,jdbcType=VARCHAR},
			        uuid= #{uuid,javaType=java.lang.String,jdbcType=VARCHAR}
		        WHERE 
			        id = #{id} and ou_id=#{ouId}
			        and last_modify_time	=  #{lastModifyTime}    
		    ]]>
		</update>
		
	<resultMap id="whAsnLineCommand" type="com.baozun.scm.primservice.whoperation.command.poasn.WhAsnLineCommand">
	</resultMap>
		
		<sql id="whAsnLineColumnsMapExt">
	    <![CDATA[
				al.id as id,
				al.asn_id as asnId,
				al.po_line_id as poLineId,
				al.ou_id as ouId,
				al.po_linenum as poLinenum,
				al.sku_id as skuId,
				al.qty_planned as qtyPlanned,
				al.ctn_planned as ctnPlanned,
				al.qty_rcvd as qtyRcvd,
				al.ctn_rcvd as ctnRcvd,
				al.status as status,
				al.is_iqc as isIqc,
				date_format(al.mfg_date,'%Y-%m-%d') as mfgDateStr,
				date_format(al.exp_date,'%Y-%m-%d') as expDateStr,
				al.valid_date as validDate,
				al.batch_no as batchNo,
				al.country_of_origin as countryOfOrigin,
				al.inv_status as invStatus,
				al.inv_type as invType,
				al.inv_attr1 as invAttr1,
				al.inv_attr2 as invAttr2,
				al.inv_attr3 as invAttr3,
				al.inv_attr4 as invAttr4,
				al.inv_attr5 as invAttr5,
				al.valid_date_uom as validDateUom,
				al.create_time as createTime,
				al.created_id as createdId,
				al.last_modify_time as lastModifyTime,
				al.modified_id as modifiedId,
				asn.asn_code as asnCode,
				asn.asn_ext_code as asnExtCode,
				sys.dic_label as statusName,
				sku.code as skuCode,
				sku.ext_code as skuExtCode,
				sku.bar_code as skuBarCode,
				sku.name as skuName,
				inv.name as invName,
				al.uuid as uuid
	    ]]>
	</sql>	
		
		
	<select id="findListByQueryMapWithPageExt" resultMap="whAsnLineCommand">
    	select <include refid="whAsnLineColumnsMapExt" />
		    from 
		    t_wh_asn_line al
		    left join t_wh_asn asn on asn.id = al.asn_id
			left join sys_dictionary sys on sys.dic_value = al.status and sys.group_value = 'ASNLINESTATUS'
			left join t_wh_inventory_status inv on inv.id = al.inv_status
			left join t_wh_sku sku on al.sku_id = sku.id 
			where 
			al.asn_id = #{asnId}
    </select>
    		
		
	<select id="findListCountByQueryMapExt" resultType="long">
        select count(*) from 
		    t_wh_asn_line al
		   	left join t_wh_asn asn on asn.id = al.asn_id
			left join sys_dictionary sys on sys.dic_value = al.status and sys.group_value = 'ASNLINESTATUS'
			left join t_wh_inventory_status inv on inv.id = al.inv_status
			left join t_wh_sku sku on al.sku_id = sku.id 
			where 
			al.asn_id = #{asnId}
    </select>
	
	 <delete id="deleteByAsnIdOuId" parameterType="map">
	    <![CDATA[
	        delete from t_wh_asn_line where
		        asn_id = #{asnid} and ou_id=#{ouid} 
	    ]]>
	 </delete>
	 
	 <delete id="deleteByIdOuId" parameterType="map">
	    <![CDATA[
	        delete from t_wh_asn_line where
		        id = #{id} and ou_id=#{ouid} 
	    ]]>
	 </delete>
	 
	 <select id="findWhAsnLineByIdCommand" parameterType="map" resultMap="whAsnLineCommand">
	 select <include refid="whAsnLineColumnsMapExt" />
	 from 
		    t_wh_asn_line al
		    left join t_wh_asn asn on asn.id = al.asn_id
			left join sys_dictionary sys on sys.dic_value = al.status and sys.group_value = 'ASNLINESTATUS'
			left join t_wh_inventory_status inv on inv.id = al.inv_status
			left join t_wh_sku sku on al.sku_id = sku.id 
			where 
			al.id=#{id}  and al.ou_id = #{ouid}
	 </select>
	 
	 <select id="findWhAsnLineById"  resultMap="WhAsnLineResultExt">
	 select <include refid="whAsnLineColumnsExt" />
	 from 
		    t_wh_asn_line 
			where 
			id=#{id}  and ou_id = #{ouid}
	 </select>
	 
	<select id="findWhAsnLineCommandDevanningList" resultMap="whAsnLineCommand">
				select 
						line.id as id,
						line.asn_id as asnId,
						line.po_line_id as poLineId,
						line.ou_id as ouId,
						line.po_linenum as poLinenum,
						line.sku_id as skuId,
						line.qty_planned as qtyPlanned,
						line.ctn_planned as ctnPlanned,
						line.qty_rcvd as qtyRcvd,
						line.ctn_rcvd as ctnRcvd,
						line.qty_planned-c.qty as usableDevanningQty,
						c.qty as devanningQty,
						line.status as status,
						line.is_iqc as isIqc,
						date_format(line.mfg_date,'%Y-%m-%d') as mfgDateStr,
						date_format(line.exp_date,'%Y-%m-%d') as expDateStr,
						line.mfg_date as mfgDate,
						line.exp_date as expDate,
						line.valid_date as validDate,
						line.batch_no as batchNo,
						line.country_of_origin as countryOfOrigin,
						line.inv_status as invStatus,
						line.inv_type as invType,
						line.inv_attr1 as invAttr1,
						line.inv_attr2 as invAttr2,
						line.inv_attr3 as invAttr3,
						line.inv_attr4 as invAttr4,
						line.inv_attr5 as invAttr5,
						line.create_time as createTime,
						line.created_id as createdId,
						line.last_modify_time as lastModifyTime,
						line.modified_id as modifiedId,
						line.valid_date_uom as validDateUom,
						sku.id as skuid,
						sku.code as skuCode,
						sku.name as skuName,
						inv.name as invName,
						type.dic_label as invTypeLabel,
						inv1.dic_label as inv1Str,
						inv2.dic_label as inv2Str,
						inv3.dic_label as inv3Str,
						inv4.dic_label as inv4Str,
						inv5.dic_label as inv5Str
						from t_wh_asn_line line 
						left join t_wh_sku sku on line.sku_id = sku.id
						left join t_wh_inventory_status inv on inv.id = line.inv_status
						left join sys_dictionary type on type.dic_value = line.inv_type and type.group_value = 'INVENTORY_TYPE' 
						left join sys_dictionary inv1 on inv1.dic_value = line.inv_attr1 and inv1.group_value = 'INVENTORY_ATTR_1' 
						left join sys_dictionary inv2 on inv2.dic_value = line.inv_attr2 and inv2.group_value = 'INVENTORY_ATTR_2' 
						left join sys_dictionary inv3 on inv3.dic_value = line.inv_attr3 and inv3.group_value = 'INVENTORY_ATTR_3' 
						left join sys_dictionary inv4 on inv4.dic_value = line.inv_attr4 and inv4.group_value = 'INVENTORY_ATTR_4' 
						left join sys_dictionary inv5 on inv5.dic_value = line.inv_attr5 and inv5.group_value = 'INVENTORY_ATTR_5',
						(
							select ifnull(sum(c.quantity),0) as qty 
								from t_wh_carton c 
								where
									c.asn_id = #{asnid}  
									and c.asn_line_id = #{id}
									and c.ou_id = #{ouid} 
									and c.sku_id = #{skuid} 		
						) c  
						where 
							line.id = #{id}
							and line.asn_id = #{asnid} 
							and line.ou_id = #{ouid} 
							and line.sku_id = #{skuid} 
							and line.qty_planned &gt; c.qty
							and line.status = 1
    </select>
	 
	 	<select id="findWhAsnLineCommandEditDevanning" resultMap="whAsnLineCommand">
						select 
							line.id as id,
							line.asn_id as asnId,
							line.po_line_id as poLineId,
							line.ou_id as ouId,
							line.po_linenum as poLinenum,
							line.sku_id as skuId,
							line.qty_planned as qtyPlanned,
							line.ctn_planned as ctnPlanned,
							line.qty_rcvd as qtyRcvd,
							line.ctn_rcvd as ctnRcvd,
							c.qty as devanningQty,
							line.qty_planned-c.qty as usableDevanningQty,
							line.status as status,
							line.is_iqc as isIqc,
							date_format(line.mfg_date,'%Y-%m-%d') as mfgDateStr,
							date_format(line.exp_date,'%Y-%m-%d') as expDateStr,
							line.mfg_date as mfgDate,
							line.exp_date as expDate,
							line.valid_date as validDate,
							line.batch_no as batchNo,
							line.country_of_origin as countryOfOrigin,
							line.inv_status as invStatus,
							line.inv_type as invType,
							line.inv_attr1 as invAttr1,
							line.inv_attr2 as invAttr2,
							line.inv_attr3 as invAttr3,
							line.inv_attr4 as invAttr4,
							line.inv_attr5 as invAttr5,
							line.create_time as createTime,
							line.created_id as createdId,
							line.last_modify_time as lastModifyTime,
							line.modified_id as modifiedId,
							line.valid_date_uom as validDateUom,
							sku.id as skuid,
							sku.code as skuCode,
							sku.name as skuName,
							uom.uom_code as uomCode,
							uom.uom_name as uomName,
							uom.conversion_rate as conversionRate,
							mgmt.is_valid as isValid,
							mgmt.is_batch_no as isBatchNo,
							mgmt.is_country_of_origin as isCountryOfOrigin,
							mgmt.is_inv_type as isInvType,
							ext.inv_attr1 as invAttr1Boolean,
							ext.inv_attr2 as invAttr2Boolean,
							ext.inv_attr3 as invAttr3Boolean,
							ext.inv_attr4 as invAttr4Boolean,
							ext.inv_attr5 as invAttr5Boolean
						from 
						t_wh_asn_line line 
						left join t_wh_sku sku
						left join t_wh_sku_extattr ext on ext.sku_id = sku.id
						left join t_wh_sku_mgmt mgmt on mgmt.sku_id = sku.id 
						on sku.id = line.sku_id 
						left join t_wh_uom uom on uom.uom_code = line.valid_date_uom,
						(
							select ifnull(sum(c.quantity),0) as qty 
								from t_wh_carton c 
								where
									c.asn_id = #{asnid}  
									and c.asn_line_id = #{id}
									and c.ou_id = #{ouid} 
									and c.sku_id = #{skuid} 		
						) c 
						where 
							line.id = #{id}
							and line.asn_id = #{asnid} 
							and line.ou_id = #{ouid} 
							and line.sku_id = #{skuid} 
    </select>
	 
	 <select id="findListByQueryMapWithPageExtForCreateAsn" resultMap="whAsnLineCommand">
    	select <include refid="whAsnLineColumnsMapExt" />
		    from 
		    t_wh_asn_line al
		   	inner join t_wh_asn asn on asn.id = al.asn_id
			left join sys_dictionary sys on sys.dic_value = al.status and sys.group_value = 'ASNLINESTATUS'
			left join t_wh_inventory_status inv on inv.id = al.inv_status
			left join t_wh_sku sku on al.sku_id = sku.id
			where asn.uuid=#{uuid} and al.uuid=#{uuid} and asn.ou_id=#{ouId} and asn.id=#{id}
    </select>
    		
		
	<select id="findListCountByQueryMapExtForCreateAsn" resultType="long">
        select count(*) from 
		    t_wh_asn_line al
		   	inner join t_wh_asn asn on asn.id = al.asn_id
			left join sys_dictionary sys on sys.dic_value = al.status and sys.group_value = 'ASNLINESTATUS'
			left join t_wh_inventory_status inv on inv.id = al.inv_status
			left join t_wh_sku sku on al.sku_id = sku.id
			where asn.uuid=#{uuid} and al.uuid=#{uuid} and asn.ou_id=#{ouId} and asn.id=#{id}
    </select>
	<select id="findWhAsnLineByPoLineIdAndUuidAndOuId"  resultMap="WhAsnLineResultExt">
	 select <include refid="whAsnLineColumnsExt" />
	 from
		    t_wh_asn_line
			where
			po_line_id=#{poLineId}  and ou_id = #{ouid} and uuid=#{uuid}
	 </select>
	 
</mapper>
