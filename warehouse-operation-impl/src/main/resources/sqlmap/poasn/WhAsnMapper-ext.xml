<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.poasn.WhAsnDao">
	<resultMap id="WhAsnResultExt" type="com.baozun.scm.primservice.whoperation.model.poasn.WhAsn">
	</resultMap>
	<sql id="whAsnDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
				asn.status &lt;&gt; 0 
				<if test="ouId!=null">
					and asn.ou_id = #{ouId}
				</if>
				<if test="asnCode!=null and asnCode!=''">
					and asn.asn_code like #{asnCode}
				</if>
				<if test="asnExtCode!=null and ansExtCode!=''">
					and asn.asn_ext_code like #{asnExtCode}
				</if>
				<if test="customerId!=null">
					and asn.customer_id = #{customerId}
				</if>
				<if test="storeId!=null">
					and asn.store_id = #{storeId}
				</if>
				<if test="supplierId!=null">
					and asn.supplier_id = #{supplierId}
				</if>
				<if test="logisticsProvider!=null and logisticsProvider!=''">
					and asn.logistics_provider = #{logisticsProvider}
				</if>
				<if test="isIqc!=null">
					and asn.is_iqc = #{isIqc}
				</if>
				<if test="asnType!=null">
					and asn.asn_type = #{asnType}
				</if>
				<if test="status!=null">
					and asn.status = #{status}
				</if>
				<if test="qtyPlanned!=null">
					and asn.qty_planned = #{qtyPlanned}
				</if>
				<if test="qtyRcvd!=null">
					and asn.qty_rcvd = #{qtyRcvd}
				</if>
				<if test="ctnRcvd!=null">
					and asn.ctn_rcvd = #{ctnRcvd}
				</if>
				<if test="extCode!=null and extCode!=''">
					and asn.ext_code = #{extCode}
				</if>
				<if test="urgentStatus!=null and urgentStatus!=''">
					and asn.urgent_status = #{urgentStatus}
				</if>
				<if test="uuid!=null and uuid!=''">
					and asn.uuid = #{uuid}
				</if>
				<if test="customerList!=null">
		           and asn.customer_id in
				 <foreach collection="customerList" item="cid" open="("
			      separator="," close=")">
			       #{cid}
		         </foreach>
			    </if>
             
                <if test="customerList==null">
                   and  asn.customer_id in (null)
			    </if>
			    <if test="storeList!=null">
		           and asn.store_id in
				 <foreach collection="storeList" item="sid" open="("
			      separator="," close=")">
			       #{sid}
		         </foreach>
			    </if>
             
                <if test="storeList==null">
                   and  asn.store_id in (null)
			    </if>
		</where>
	</sql>

	<sql id="whAsnSearchWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
				asn.status &lt;&gt; 0 
				<if test="ouId!=null">
					and asn.ou_id = #{ouId}
				</if>
				<if test="asnCode!=null and asnCode!=''">
					and asn.asn_code like #{asnCode}
				</if>
				<if test="extCode!=null and extCode!=''">
					and asn.ext_code like #{extCode}
				</if>
				<if test="asnExtCode!=null and asnExtCode!=''">
					and asn.asn_ext_code like #{asnExtCode}
				</if>
				<if test="isIqc!=null and isIqc!=''">
					and asn.is_iqc = #{isIqc}
				</if>
				
				<if test="asnType!=null">
					and asn.asn_type in
					<foreach collection="asnType" item="s" open="(" separator="," close=")">
						#{s}
					</foreach>
				</if>
				<if test="customerId!=null">
					and asn.customer_id in 
					<foreach collection="customerId" item="s" open="(" separator="," close=")">
						#{s}
					</foreach>
				</if>
				<if test="storeId!=null">
					and asn.store_id in 
					<foreach collection="storeId" item="s" open="(" separator="," close=")">
						#{s}
					</foreach>
				</if>
				<if test="supplierId!=null">
					and asn.supplier_id in 
					<foreach collection="supplierId" item="s" open="(" separator="," close=")">
						#{s}
					</foreach>
				</if>
				<if test="logisticsProvider!=null and logisticsProvider!=''">
					and asn.logistics_provider like #{logisticsProvider}
				</if>
				<if test="asnStatus!=null">
					and asn.status in 
					<foreach collection="asnStatus" item="s" open="(" separator="," close=")">
						#{s}
					</foreach>
				</if>
				<if test="poDateStart!=null and poDateStart!=''">
					and DATE_FORMAT(asn.po_date,'%Y-%m-%d')&gt;=#{poDateStart}
				</if>
				<if test="poDateEnd!=null and poDateEnd!=''">
					and DATE_FORMAT(asn.po_date,'%Y-%m-%d')&lt;=#{poDateEnd}
				</if>
				<if test="etaStart!=null and etaStart!=''">
					and DATE_FORMAT(asn.eta,'%Y-%m-%d')&gt;=#{etaStart}
				</if>
				<if test="etaEnd!=null and etaEnd!=''">
					and DATE_FORMAT(asn.eta,'%Y-%m-%d')&lt;=#{etaEnd}
				</if>
				<if test="deliveryTimeStart!=null and deliveryTimeStart!=''">
					and DATE_FORMAT(asn.delivery_time,'%Y-%m-%d')&gt;=#{deliveryTimeStart}
				</if>
				<if test="deliveryTimeEnd!=null and deliveryTimeEnd!=''">
					and DATE_FORMAT(asn.delivery_time,'%Y-%m-%d')&lt;=#{deliveryTimeEnd}
				</if>
				<if test="startTimeStart!=null and startTimeStart!=''">
					and DATE_FORMAT(asn.start_time,'%Y-%m-%d')&gt;=#{startTimeStart}
				</if>
				<if test="startTimeEnd!=null and startTimeEnd!=''">
					and DATE_FORMAT(asn.start_time,'%Y-%m-%d')&lt;=#{startTimeEnd}
				</if>
				<if test="stopTimeStart!=null and stopTimeStart!=''">
					and DATE_FORMAT(asn.stop_time,'%Y-%m-%d')&gt;=#{stopTimeStart}
				</if>
				<if test="stopTimeEnd!=null and stopTimeEnd!=''">
					and DATE_FORMAT(asn.stop_time,'%Y-%m-%d')&lt;=#{stopTimeEnd}
				</if>
				<if test="inboundTimeStart!=null and inboundTimeStart!=''">
					and DATE_FORMAT(asn.inbound_time,'%Y-%m-%d')&gt;=#{inboundTimeStart}
				</if>
				<if test="inboundTimeEnd!=null and inboundTimeEnd!=''">
					and DATE_FORMAT(asn.inbound_time,'%Y-%m-%d')&lt;=#{inboundTimeEnd}
				</if>
				<if test="customerList!=null">
		        	and asn.customer_id in
					<foreach collection="customerList" item="cid" open="(" separator="," close=")">
				       #{cid}
			        </foreach>
			    </if>
                <if test="customerList==null">
                	and  asn.customer_id in (null)
			    </if>
			    <if test="storeList!=null">
			        and asn.store_id in
					<foreach collection="storeList" item="sid" open="(" separator="," close=")">
				       #{sid}
			        </foreach>
			    </if>
                <if test="storeList==null">
                   and asn.store_id in (null)
			    </if>
			    
			    <if test="(poLinenum!=null and poLinenum!='') ||
			 			(skuCode!=null and skuCode!='') ||
			 			(skuName!=null and skuName!='') ||
			 			(skuBarCode!=null and skuBarCode!='')||
			 			(lineStatus!=null)||
			 			(lineIsIqc!=null and lineIsIqc!='')||
			 			(mfgDateStart!=null and mfgDateStart!='')||
			 			(mfgDateEnd!=null and mfgDateEnd!='')||
			 			(expDateStart!=null and expDateStart!='')||
			 			(expDateEnd!=null and expDateEnd!='')||
			 			(batchNo!=null and batchNo!='')||
			 			(countryOfOrigin!=null and countryOfOrigin!='')||
			 			(invStatus!=null)||
			 			(invType!=null)||
			 			(invAttr1!=null)||
			 			(invAttr2!=null)||
			 			(invAttr3!=null)||
			 			(invAttr4!=null)||
			 			(invAttr5!=null)||
			 			(mixAttr!=null and mixAttr!='')">
					and EXISTS(select 1 from t_wh_asn_line asnline
									inner join t_wh_sku sku on sku.id=asnline.sku_id
									where asnline.asn_id=asn.id
									<if test="poLinenum!=null and poLinenum!=''">
										and asnline.po_linenum like #{poLinenum}
									</if>
									<if test="skuCode!=null and skuCode!=''">
										and ( sku.code like #{skuCode} or sku.ext_code like #{skuCode} )
									</if>
									 <if test="skuName!=null and skuName!=''">
										and sku.name like #{skuName}
									 </if>
									 <if test="skuBarCode!=null and skuBarCode!=''">
										and sku.bar_code like #{skuBarCode}
									 </if>
									 <if test="lineStatus!=null">
									    and asnline.status IN
										<foreach collection="lineStatus" item="s" open="(" separator="," close=")">
										       #{s}
									  	</foreach>
									 </if>
									 <if test="lineIsIqc!=null and lineIsIqc!=''">
									 	and asnline.is_iqc=#{lineIsIqc}
									 </if>
									 <if test="mfgDateStart!=null and mfgDateStart!=''">
										and DATE_FORMAT(asnline.mfg_date,'%Y-%m-%d')&gt;=#{mfgDateStart}
									 </if>
									 <if test="mfgDateEnd!=null and mfgDateEnd!=''">
										and DATE_FORMAT(asnline.mfg_date,'%Y-%m-%d')&lt;=#{mfgDateEnd}
									 </if>
									 <if test="expDateStart!=null and expDateStart!=''">
										and DATE_FORMAT(asnline.exp_date,'%Y-%m-%d')&gt;=#{expDateStart}
									 </if>
									 <if test="expDateEnd!=null and expDateEnd!=''">
										and DATE_FORMAT(asnline.exp_date,'%Y-%m-%d')&lt;=#{expDateEnd}
									 </if>
									 <if test="batchNo!=null and batchNo!=''">
										and asnline.batch_no like #{batchNo}
									 </if>
									 <if test="countryOfOrigin!=null and countryOfOrigin!=''">
										and asnline.country_of_origin like #{countryOfOrigin}
									 </if>
									 <if test="invStatus!=null">
									    and asnline.inv_status IN
										<foreach collection="invStatus" item="s" open="(" separator="," close=")">
										       #{s}
									  	</foreach>
									 </if>
									 <if test="invType!=null">
									    and asnline.inv_type IN
										<foreach collection="invType" item="s" open="(" separator="," close=")">
										       #{s}
									  	</foreach>
									 </if>
									 <if test="invAttr1!=null">
									    and asnline.inv_attr1 IN
										<foreach collection="invAttr1" item="s" open="(" separator="," close=")">
										       #{s}
									  	</foreach>
									 </if>
									 <if test="invAttr2!=null">
									    and asnline.inv_attr2 IN
										<foreach collection="invAttr2" item="s" open="(" separator="," close=")">
										       #{s}
									  	</foreach>
									 </if>
									 <if test="invAttr3!=null">
									    and asnline.inv_attr3 IN
										<foreach collection="invAttr3" item="s" open="(" separator="," close=")">
										       #{s}
									  	</foreach>
									 </if>
									 <if test="invAttr4!=null">
									    and asnline.inv_attr4 IN
										<foreach collection="invAttr4" item="s" open="(" separator="," close=")">
										       #{s}
									  	</foreach>
									 </if>
									 <if test="invAttr5!=null">
									    and asnline.inv_attr5 IN
										<foreach collection="invAttr5" item="s" open="(" separator="," close=")">
										       #{s}
									  	</foreach>
									 </if>
									 <if test="mixAttr!=null and mixAttr!=''">
										and exists(select 1 from t_wh_sku_mgmt mgmt 
																where mgmt.sku_id=sku.id 
																<if test="mixAttr!=null and mixAttr!=''">
																  	and mgmt.mix_attr like #{mixAttr}
																 </if>
												   )
									  </if>
						   )
			</if>
			<if test="(sn!=null and sn!='') ||(defectWareBarcode!=null and defectWareBarcode!='') ||(defectType!=null and defectType!='')||(defectReasons!=null and defectReasons!='')">						 
				and EXISTS(select 1 from t_wh_asn_rcvd_sn_log sn
										left join t_wh_asn_rcvd_log rcvd ON sn.asn_rcvd_id = rcvd.id
										where rcvd.asn_id = asn.id
						   				<if test="sn!=null and sn!=''">
											and sn.sn like #{sn}
										</if>
										<if test="defectWareBarcode!=null and defectWareBarcode!=''">
											and sn.defect_ware_barcode like #{defectWareBarcode}
										</if>
										<if test="defectType!=null and defectType!=''">
											and sn.defect_type like #{defectType}
										</if>
										<if test="defectReasons!=null and defectReasons!=''">
											and sn.defect_reasons like #{defectReasons}
										</if>
						   )			
			</if>
		</where>
	</sql>

	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whAsnColumnsExt">
	    <![CDATA[
	        	asn.id as id,
	        	asn.asn_code as asnCode,
	        	asn.po_id as poId,
	        	asn.original_ext_odo_code as originalExtOdoCode,
	        	asn.original_ec_order_code as originalEcOrderCode,
	        	asn.ou_id as ouId,
	        	asn.customer_id as customerId,
	        	asn.store_id as storeId,
	        	asn.po_date as poDate,
	        	asn.eta as eta,
	        	asn.delivery_time as deliveryTime,
	        	asn.qty_planned as qtyPlanned,
	        	asn.qty_rcvd as qtyRcvd,
	        	asn.ctn_planned as ctnPlanned,
	        	asn.ctn_rcvd as ctnRcvd,
	        	asn.supplier_id as supplierId,
	        	asn.logistics_provider as logisticsProvider,
	        	asn.asn_type as asnType,
	        	asn.status as status,
	        	asn.is_iqc as isIqc,
	        	asn.start_time as startTime,
	        	date_format(asn.start_time,'%Y-%m-%d') as startTimeStr,
	        	asn.stop_time as stopTime,
	        	date_format(asn.stop_time,'%Y-%m-%d') as stopTimeStr,
	        	asn.inbound_time as inboundTime,
	        	date_format(asn.inbound_time,'%Y-%m-%d') as inboundTimeStr,
	        	asn.create_time as createTime,
	        	asn.created_id as createdId,
	        	asn.last_modify_time as lastModifyTime,
	        	asn.modified_id as modifiedId,
	        	asn.asn_ext_code as asnExtCode,
	        	date_format(asn.po_date,'%Y-%m-%d') as poDateStr,
	        	date_format(asn.eta,'%Y-%m-%d %T') as etaStr,
	        	asn.po_ou_id as poOuId,
	        	asn.ext_code as extCode,
	        	asn.urgent_status as urgentStatus,
	        	s.store_name as storeName,
	        	asn.version as version,
	        	asn.uuid as uuid,
	        	asn.is_auto_close as isAutoClose,
	        	asn.overchage_rate as overChageRate,
	        	asn.original_ext_odo_code as orginalExtOdoCode,
				asn.original_ec_order_code as originalEcOrderCode
	    ]]>
	</sql>
	
		<update id="updateByVersion" parameterType="com.baozun.scm.primservice.whoperation.model.poasn.WhAsn">
		    <![CDATA[
		        UPDATE t_wh_asn SET
			        asn_code = #{asnCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        asn_ext_code = #{asnExtCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        po_id = #{poId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        original_ext_odo_code = #{originalExtOdoCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	original_ec_order_code = #{originalEcOrderCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        customer_id = #{customerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        store_id = #{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        po_date = #{poDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        eta = #{eta,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        delivery_time = #{deliveryTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        qty_planned = #{qtyPlanned,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			        qty_rcvd = #{qtyRcvd,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			        ctn_planned = #{ctnPlanned,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        ctn_rcvd = #{ctnRcvd,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        supplier_id = #{supplierId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        logistics_provider = #{logisticsProvider,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        asn_type = #{asnType,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        status = #{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        is_iqc = #{isIqc,javaType=java.lang.Boolean,jdbcType=BIT} ,
			        start_time = #{startTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        stop_time = #{stopTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        inbound_time = #{inboundTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        last_modify_time = now() ,
			        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			       	po_ou_id = #{poOuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			       	ext_code = #{extCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       	urgent_status = #{urgentStatus,javaType=java.lang.String,jdbcType=VARCHAR} ,
			       	uuid= #{uuid,javaType=java.lang.String,jdbcType=VARCHAR},
			        is_auto_close = #{isAutoClose,javaType=java.lang.Boolean,jdbcType=BIT} ,
			       	overchage_rate=#{overChageRate,javaType=java.lang.Double,jdbcType=DECIMAL} ,
			       	original_ext_odo_code= #{originalExtOdoCode,javaType=java.lang.String,jdbcType=VARCHAR},
                	original_ec_order_code= #{originalEcOrderCode,javaType=java.lang.String,jdbcType=VARCHAR}
		    ]]>
		     <where>
		    		id = #{id} 
			        and last_modify_time	=  #{lastModifyTime}    
			        <if test="ouId != null">
			        	and ou_id = #{ouId}
			        </if>
		    </where>
		</update>
	
	<resultMap id="whAsnCommand" type="com.baozun.scm.primservice.whoperation.command.poasn.WhAsnCommand">
	</resultMap>
	
	
	<sql id="whAsnColumnsMapExt">
	    <![CDATA[
				asn.id as id,
				asn.asn_code as asnCode,
				asn.asn_ext_code as asnExtCode,
				asn.po_id as poId,
				asn.ou_id as ouId,
				asn.customer_id as customerId,
				asn.store_id as storeId,
				asn.po_date as poDate,
				asn.eta as eta,
				asn.delivery_time as deliveryTime,
				asn.qty_planned as qtyPlanned,
				asn.qty_rcvd as qtyRcvd,
				asn.ctn_planned as ctnPlanned,
				asn.ctn_rcvd as ctnRcvd,
				asn.supplier_id as supplierId,
				asn.logistics_provider as logisticsProvider,
				asn.asn_type as asnType,
				asn.status as status,
				asn.is_iqc as isIqc,
				asn.start_time as startTime,
				asn.stop_time as stopTime,
				asn.inbound_time as inboundTime,
				asn.create_time as createTime,
				asn.created_id as createdId,
				asn.last_modify_time as lastModifyTime,
				asn.modified_id as modifiedId,
				asn.po_ou_id as poOuId,
				asn.ext_code as extCode,
				asn.is_auto_close as isAutoClose,
				asn.urgent_status as urgentStatus,
				c.customer_name as customerName,
				s.store_name as storeName,
				sys.dic_label as statusName,
				asn.uuid as uuid,
				asn.overchage_rate as overChageRate,
				asn.original_ext_odo_code as orginalExtOdoCode,
				asn.original_ec_order_code as originalEcOrderCode
	    ]]>
	</sql>
	
	<sql id="whAsnSearchMapExt">
	    <![CDATA[
				asn.id as id,
				asn.asn_code as asnCode,
				asn.asn_ext_code as asnExtCode,
				asn.po_id as poId,
				asn.ou_id as ouId,
				asn.customer_id as customerId,
				asn.store_id as storeId,
				asn.po_date as poDate,
				asn.eta as eta,
				asn.delivery_time as deliveryTime,
				asn.qty_planned as qtyPlanned,
				asn.qty_rcvd as qtyRcvd,
				asn.ctn_planned as ctnPlanned,
				asn.ctn_rcvd as ctnRcvd,
				asn.supplier_id as supplierId,
				asn.logistics_provider as logisticsProvider,
				asn.asn_type as asnType,
				asn.status as status,
				asn.is_iqc as isIqc,
				asn.start_time as startTime,
				asn.stop_time as stopTime,
				asn.inbound_time as inboundTime,
				asn.create_time as createTime,
				asn.created_id as createdId,
				asn.last_modify_time as lastModifyTime,
				asn.modified_id as modifiedId,
				asn.po_ou_id as poOuId,
				asn.ext_code as extCode,
				asn.urgent_status as urgentStatus,
				asn.uuid as uuid,
				asn.overchage_rate as overChageRate,
				asn.is_auto_close as isAutoClose,
				supplier.name as supplierName,
				asn.original_ext_odo_code as orginalExtOdoCode,
				asn.original_ec_order_code as originalEcOrderCode
	    ]]>
	</sql>
	
	<select id="findListByQueryMapWithPageExt" resultMap="whAsnCommand">
    	select <include refid="whAsnSearchMapExt" />
		    from 
		    t_wh_asn asn
			left join t_wh_supplier supplier on supplier.id=asn.supplier_id
			<include refid="whAsnSearchWhereExt"/>
    </select>
    		
		
	<select id="findListCountByQueryMapExt" resultType="long">
        select count(*) from 
		    t_wh_asn asn
			<include refid="whAsnSearchWhereExt"/>
    </select>
	
	
	 <select id="findWhAsnListByAsnExtCode" resultMap="whAsnCommand">
	    	select <include refid="whAsnColumnsExt" />
		    from t_wh_asn asn
		    left join t_bi_store s on s.id = asn.store_id
		   <where>
			    asn.asn_ext_code like #{asnExtCode} 
			    and asn.ou_id = #{ouid}
			   <if test="statusList!=null">
						and asn.status in
						<foreach collection="statusList" item="sta" open="("
									separator="," close=")">
									#{sta}
								</foreach>
				</if>
			</where>
    </select>
    
	<select id="findWhAsnCommandById" resultMap="whAsnCommand">
    	select <include refid="whAsnColumnsExt" />
		    from 
		    t_wh_asn asn
		    left join t_bi_store s on s.id = asn.store_id
		    <where>
		    	asn.id = #{id}
				<if test="ouid!=null">
		   			 and asn.ou_id = #{ouid}
				</if>
			</where>
    </select>
    
	<select id="findWhAsnById" resultMap="WhAsnResultExt">
    	select 
    		     <include refid="whAsnColumns" />
		    from 
		    t_wh_asn 
		    <where>
		    	id = #{id}
				<if test="ouid!=null">
		   			 and ou_id = #{ouid}
				</if>
			</where>
    </select>
    
    <select id="findAsnByCodeAndStore" resultType="long">
        select count(*) from 
        t_wh_asn
		<where>
			<if test="ouId!=null">
				and ou_id = #{ouId}
			</if>
			<if test="asnExtCode!=null and asnExtCode!=''">
				and asn_ext_code = #{asnExtCode}
			</if>
			<if test="storeId!=null">
				and store_id = #{storeId}
			</if>
		</where>
    </select>
    
    <delete id="deleteByIdOuId" parameterType="map">
	    <![CDATA[
	        delete from t_wh_asn where
		        id = #{id} and ou_id=#{ouid} 
	    ]]>
	 </delete>
	 
	 <update id="updateByVersionForLock">
	 	 <![CDATA[
	        update t_wh_asn set version='1' and last_modify_time=now()  where
		        id = #{id} and ou_id=#{ouid} and last_modify_time=#{lastModifyTime} and version='0'
	    ]]>
	 </update>
	 <update id="updateByVersionForUnLock">
	 	 <![CDATA[
	        update t_wh_asn set version=0 and last_modify_time=now() where
		        id = #{id} and ou_id=#{ouid} and version='1'
	    ]]>
	 </update>
	 
	  <select id="findAsnByCodeAndOuId" resultMap="WhAsnResultExt">
        select <include refid="whAsnColumnsExt" />
        from 
            t_wh_asn asn
		    left join t_bi_store s on s.id = asn.store_id
		<where>
			and ou_id = #{ouId}
			and asn_code = #{asnCode}
		</where>
    </select>
     <select id="findListByParamExt" resultMap="whAsnCommand">
    	select <include refid="whAsnColumns" />
	    from t_wh_asn 
		<include refid="whAsnDynamicWhere"/>
    </select>
    
     <select id="findListCountByParamExt" resultType="long">
    	select count(*)
	    from t_wh_asn 
		<include refid="whAsnDynamicWhere"/>
    </select>
    
    <select id="getWhAsnCommandByCustomerId" resultType="long">
        select id
	    from t_wh_asn 
	    where customer_id in 
	    <if test="customerList!=null and customerList.size() != 0">
				 <foreach collection="customerList" item="cid" open="("
			  separator="," close=")">
			       #{cid}
		      </foreach>
		</if>
             
        <if test="customerList==null or customerList.size() == 0">
               (null)
		</if>
		and store_id in
		<if test="storeList!=null and storeList.size() != 0">
				 <foreach collection="storeList" item="ids" open="("
			  separator="," close=")">
			       #{ids}
		      </foreach>
	    </if>
        <if test="storeList==null or storeList.size() == 0">
              (null)
	    </if>
    </select>
    
     <select id="findTempAsnByPoIdOuIdAndLineNotUuid" parameterType="map" resultMap="WhAsnResult" flushCache="false">
			select <include refid="whAsnColumns" />
			    from t_wh_asn  a
		        where 
		        po_id = #{poId} and ou_id=#{ouId} and
		        exists(select 1 from t_wh_asn_line l where l.asn_id=a.id and uuid is not null and uuid !=''
		        <if test="uuid!=null and uuid!=''">
		        and uuid!=#{uuid} 
		        </if>
		        )
		</select>	
		
     <select id="findTempAsnByPoIdOuIdUuid" parameterType="map" resultMap="WhAsnResult" flushCache="false">
			select <include refid="whAsnColumns" />
		    <![CDATA[
			    from t_wh_asn 
		        where 
		        po_id = #{poId} and ou_id=#{ouId}   and uuid is not null and uuid !=''
		        
		    ]]>
		        <if test="uuid!=null and uuid!=''">
		        and  uuid=#{uuid} 
		        </if>
		</select>	
		
     <select id="findWhAsnByPoIdOuId" parameterType="map" resultMap="WhAsnResult" flushCache="false">
			select <include refid="whAsnColumns" />
		    <![CDATA[
			    from t_wh_asn 
		        where 
		        po_id = #{poId} and ou_id=#{ouId}   
		        
		    ]]>
		</select>	
		

    <select id="findAsnListByStatus" resultMap="whAsnCommand">
        select
            <include refid="whAsnColumnsMapExt" />
        from
            t_wh_asn asn
            left join t_bi_customer c on asn.customer_id = c.id
            left join t_bi_store s on asn.store_id = s.id
            left join sys_dictionary sys on sys.dic_value = asn.status and sys.group_value = 'ASNSTATUS'
        where asn.status = #{status}
        and asn.ou_id = #{ouId}
         and asn.customer_id in
         <if test="customerList!=null and customerList.size() != 0">
                 <foreach collection="customerList" item="cid" open="("
              separator="," close=")">
                   #{cid}
              </foreach>
        </if>
             
        <if test="customerList==null or customerList.size() == 0">
               (null)
        </if>
        and asn.store_id in
        <if test="storeList!=null and storeList.size() != 0">
                 <foreach collection="storeList" item="ids" open="("
              separator="," close=")">
                   #{ids}
              </foreach>
        </if>
        <if test="storeList==null or storeList.size() == 0">
              (null)
        </if>
    </select>
	<select id="checkIsRcvdFinished" resultType="boolean">
		SELECT
		count(1)
		from t_wh_asn a
		where  a.id=#{asnId} and a.ou_id=#{ouId}  
		and exists (select 1 from t_wh_asn_line l where l.asn_id=a.id and l.ou_id=a.ou_id and l.status in('1','2','10') )  
		and not exists (select 1 from t_wh_asn_line l where l.asn_id=a.id and l.ou_id=a.ou_id and l.status in('1','2') )   
	</select>
	
	
	<select id="findReturns" resultMap="whAsnCommand">
		SELECT
 			asn.id as id,
	        	asn.asn_code as asnCode,
	        	asn.po_id as poId,
	        	asn.original_ext_odo_code as originalExtOdoCode,
	        	asn.original_ec_order_code as originalEcOrderCode,
	        	asn.ou_id as ouId,
	        	asn.customer_id as customerId,
	        	asn.store_id as storeId,
	        	asn.po_date as poDate,
	        	asn.eta as eta,
	        	asn.delivery_time as deliveryTime,
	        	asn.qty_planned as qtyPlanned,
	        	asn.qty_rcvd as qtyRcvd,
	        	asn.ctn_planned as ctnPlanned,
	        	asn.ctn_rcvd as ctnRcvd,
	        	asn.supplier_id as supplierId,
	        	asn.logistics_provider as logisticsProvider,
	        	asn.asn_type as asnType,
	        	asn.status as status,
	        	asn.is_iqc as isIqc,
	        	asn.start_time as startTime,
	        	date_format(asn.start_time,'%Y-%m-%d') as startTimeStr,
	        	asn.stop_time as stopTime,
	        	date_format(asn.stop_time,'%Y-%m-%d') as stopTimeStr,
	        	asn.inbound_time as inboundTime,
	        	date_format(asn.inbound_time,'%Y-%m-%d') as inboundTimeStr,
	        	asn.create_time as createTime,
	        	asn.created_id as createdId,
	        	asn.last_modify_time as lastModifyTime,
	        	asn.modified_id as modifiedId,
	        	asn.asn_ext_code as asnExtCode,
	        	date_format(asn.po_date,'%Y-%m-%d') as poDateStr,
	        	date_format(asn.eta,'%Y-%m-%d %T') as etaStr,
	        	asn.po_ou_id as poOuId,
	        	asn.ext_code as extCode,
	        	asn.urgent_status as urgentStatus,
	        	asn.version as version,
	        	asn.uuid as uuid,
	        	asn.is_auto_close as isAutoClose,
	        	asn.overchage_rate as overChageRate,
	        	asn.original_ext_odo_code as orginalExtOdoCode,
				asn.original_ec_order_code as originalEcOrderCode
 		
 		
		from t_wh_asn asn
		
		inner join t_wh_po  po on po.id=asn.po_id
		
		LEFT join t_wh_asn_transport_mgmt trans on trans.asn_id=asn.id
		
		where 
		
		asn.ou_id=#{ouId} and asn.asn_type=#{asnType}
		
		<if test="status!=null">
   			 and asn.status = #{status}
		</if>
		 		
 		<if test="originalEcOrderCode!=null and originalEcOrderCode!=''">
			and asn.original_ec_order_code like #{originalEcOrderCode}
		</if>
		
 		<if test="trackingNumber!=null and trackingNumber!=''">
			and trans.tracking_number  like #{trackingNumber}
		</if>
		
 		<if test="originalExtOdoCode!=null and originalExtOdoCode!=''">
			and asn.original_ext_odo_code  like #{originalExtOdoCode}
		</if>
		
 		<if test="extCode!=null and extCode!=''">
			and asn.ext_code  like #{extCode}
		</if>
		
 		<if test="senderTargetName!=null and senderTargetName!=''">
			and trans.sender_target_name  like #{senderTargetName}
		</if>
		
 		<if test="phoneNumber!=null and phoneNumber!=''">
			and (trans.sender_target_mobile_phone like  #{phoneNumber} or trans.sender_target_telephone like  #{phoneNumber})
		</if>
		
		<if test="senderTargetAddress!=null and senderTargetAddress!=''">
			and trans.sender_target_address like  #{senderTargetAddress}
		</if>
		
		<if test="customerId!=null">
   			and asn.customer_id = #{customerId}
		</if>
		
		<if test="storeId!=null">
   			and asn.store_id = #{storeId}
		</if>
		
		<if test="createTimeStart!=null and createTimeStart!=''">
			and DATE_FORMAT(po.create_time,'%Y-%m-%d')&gt;=#{createTimeStart}
		</if>
		<if test="createTimeEnd!=null and createTimeEnd!=''">
			and DATE_FORMAT(po.create_time,'%Y-%m-%d')&lt;=#{createTimeEnd}
		</if>
	</select>
	
	
</mapper>
