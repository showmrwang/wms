<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.poasn.WhAsnDao">
	<resultMap id="WhAsnResultExt" type="com.baozun.scm.primservice.whoperation.model.poasn.WhAsn">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whAsnColumnsExt">
	    <![CDATA[
	        	id as id,
	        	asn_code as asnCode,
	        	po_id as poId,
	        	ou_id as ouId,
	        	customer_id as customerId,
	        	store_id as storeId,
	        	po_date as poDate,
	        	eta as eta,
	        	delivery_time as deliveryTime,
	        	qty_planned as qtyPlanned,
	        	qty_rcvd as qtyRcvd,
	        	ctn_planned as ctnPlanned,
	        	ctn_rcvd as ctnRcvd,
	        	supplier_id as supplierId,
	        	logistics_provider_id as logisticsProviderId,
	        	asn_type as asnType,
	        	status as status,
	        	is_iqc as isIqc,
	        	start_time as startTime,
	        	stop_time as stopTime,
	        	inbound_time as inboundTime,
	        	create_time as createTime,
	        	created_id as createdId,
	        	last_modify_time as lastModifyTime,
	        	modified_id as modifiedId,
	        	asn_ext_code as asnExtCode
	    ]]>
	</sql>
	
	<sql id="whAsnDynamicWhereExt">
	
	</sql>
	

		<update id="updateByVersion" parameterType="com.baozun.scm.primservice.whoperation.model.poasn.WhAsn">
		    <![CDATA[
		        UPDATE t_wh_asn SET
			        asn_code = #{asnCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        asn_ext_code = #{asnExtCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
			        po_id = #{poId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        customer_id = #{customerId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        store_id = #{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        po_date = #{poDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        eta = #{eta,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        delivery_time = #{deliveryTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        qty_planned = #{qtyPlanned,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        qty_rcvd = #{qtyRcvd,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        ctn_planned = #{ctnPlanned,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        ctn_rcvd = #{ctnRcvd,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        supplier_id = #{supplierId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        logistics_provider_id = #{logisticsProviderId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        asn_type = #{asnType,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        status = #{status,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        is_iqc = #{isIqc,javaType=java.lang.Integer,jdbcType=INTEGER} ,
			        start_time = #{startTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        stop_time = #{stopTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        inbound_time = #{inboundTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
			        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
			        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} 
		        WHERE 
			        id = #{id} 
			        and last_modify_time	<=  #{lastModifyTime}    
		    ]]>
		</update>
	
	<resultMap id="whAsnCommand" type="com.baozun.scm.primservice.whoperation.command.poasn.WhAsnCommand">
	</resultMap>
	
	
	<sql id="whAsnColumnsMapExt">
	    <![CDATA[
				asn.id as id,
				asn.asn_code as asnCode,
				asn.asn_ext_code as asnExtCode,
				asn.po_id as poId,
				asn.ou_id as ouId,
				asn.customer_id as customerId,
				asn.store_id as storeId,
				asn.po_date as poDate,
				asn.eta as eta,
				asn.delivery_time as deliveryTime,
				asn.qty_planned as qtyPlanned,
				asn.qty_rcvd as qtyRcvd,
				asn.ctn_planned as ctnPlanned,
				asn.ctn_rcvd as ctnRcvd,
				asn.supplier_id as supplierId,
				asn.logistics_provider_id as logisticsProviderId,
				asn.asn_type as asnType,
				asn.status as status,
				asn.is_iqc as isIqc,
				asn.start_time as startTime,
				asn.stop_time as stopTime,
				asn.inbound_time as inboundTime,
				asn.create_time as createTime,
				asn.created_id as createdId,
				asn.last_modify_time as lastModifyTime,
				asn.modified_id as modifiedId,
				c.customer_name as customerName,
				s.store_name as storeName,
				sys.dic_label as statusName
	    ]]>
	</sql>
	
	<select id="findListByQueryMapWithPageExt" resultMap="whAsnCommand">
    	select <include refid="whAsnColumnsMapExt" />
		    from 
		    t_wh_asn asn 
		    left join t_bi_customer c on asn.customer_id = c.id
			left join t_bi_store s on asn.store_id = s.id 
			left join sys_dictionary sys on sys.dic_value = asn.status and sys.group_value = 'ASNSTATUS'
    </select>
    		
		
	<select id="findListCountByQueryMapExt" resultType="long">
        select count(*) from 
		    t_wh_asn asn 
		    left join t_bi_customer c on asn.customer_id = c.id
			left join t_bi_store s on asn.store_id = s.id 
			left join sys_dictionary sys on sys.dic_value = asn.status and sys.group_value = 'ASNSTATUS'
    </select>
	
	
	 <select id="findWhAsnListByAsnCode" resultMap="whAsnCommand">
	    	select <include refid="whAsnColumnsExt" />
		    from t_wh_asn 
		   <where>
			    asn_code like #{asnCode} 
			    and ou_id = #{ouid}
			   <if test="status!=null">
						and status = #{status}
				</if>
			</where>
    </select>
    
    <update id="editAsnStatus" parameterType="com.baozun.scm.primservice.whoperation.model.poasn.WhAsn">
		UPDATE t_wh_asn SET status = #{status},modified_id = #{userid},last_modify_time = now() 
		<where>
			id in
			<foreach collection="ids" item="id" open="(" separator=","
				close=")">
				#{id}
			</foreach>
		   <if test="ouid!=null">
					and ou_id = #{ouid}
			</if>
		</where>
	</update>
	
</mapper>
