<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.sku.SkuBarcodeDao">
    <resultMap id="SkuBarcodeResult" type="com.baozun.scm.primservice.whoperation.model.sku.SkuBarcode">
    </resultMap>
    
    <!-- 用于select查询公用抽取的列 -->
    <sql id="skuBarcodeColumns">
        <![CDATA[
                id as id,
                bar_code as barCode,
                sku_id as skuId,
                quantity as quantity,
                create_time as createTime,
                created_id as createdId,
                last_modify_time as lastModifyTime,
                modified_id as modifiedId,
                lifecycle as lifecycle
        ]]>
    </sql>
    
    <!-- 如果有自增字段 -->
    
    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.sku.SkuBarcode"
            useGeneratedKeys="true" keyProperty="id"
            flushCache="true">
        <![CDATA[
                INSERT INTO
                t_wh_sku_barcode (
                    bar_code ,
                    sku_id ,
                    quantity,
                    create_time ,
                    created_id ,
                    last_modify_time ,
                    modified_id,
                    lifecycle
                ) VALUES (
                    #{barCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
                    #{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                    #{quantity,javaType=java.lang.Long,jdbcType=BIGINT} ,
                    #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                    #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                    #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                    #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT},
                    #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER}
                )
            ]]>
    
    </insert>
    
    <update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.sku.SkuBarcode">
        <![CDATA[
            UPDATE t_wh_sku_barcode SET
                bar_code = #{barCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
                sku_id = #{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                quantity = #{quantity,javaType=java.lang.Integer,jdbcType=INTEGER} ,
                create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT},
                lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} 
            WHERE 
                id = #{id} 
        ]]>
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        <![CDATA[
            delete from t_wh_sku_barcode where
                id = #{id} 
        ]]>
    </delete>
    
    <delete id="deleteByIds" parameterType="list">
        
        delete from t_wh_sku_barcode
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    
    </delete>
    
    <select id="findById" parameterType="java.lang.Long" resultMap="SkuBarcodeResult" flushCache="false">
        select
        <include refid="skuBarcodeColumns"/>
        <![CDATA[
                from t_wh_sku_barcode 
                where 
                id = #{id} 
            ]]>
    </select>

    <select id="getByIds" parameterType="list" resultMap="SkuBarcodeResult" flushCache="false">
        select
        <include refid="skuBarcodeColumns"/>
        from t_wh_sku_barcode
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <sql id="skuBarcodeDynamicWhere">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>
            
            <if test="id!=null">
                and id = #{id}
            </if>
            
            
            <if test="barCode!=null and barCode!=''">
                and bar_code = #{barCode}
            </if>
            
            <if test="skuId!=null">
                and sku_id = #{skuId}
            </if>
            
             <if test="quantity!=null">
                and quantity = #{quantity}
            </if>
            
            <if test="createTime!=null">
                and create_time = #{createTime}
            </if>
            
            <if test="createdId!=null">
                and created_id = #{createdId}
            </if>
            
            <if test="lastModifyTime!=null">
                and last_modify_time = #{lastModifyTime}
            </if>
            
            <if test="modifiedId!=null">
                and modified_id = #{modifiedId}
            </if>
            
            <if test="lifecycle!=null">
					and lifecycle = #{lifecycle}
			</if>
        </where>
    </sql>
    
    
    <select id="getCount" resultType="long">
        select count(*) from t_wh_sku_barcode
    </select>

    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_sku_barcode
        <include refid="skuBarcodeDynamicWhere"/>
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_sku_barcode
        <include refid="skuBarcodeDynamicWhere"/>
    </select>
    
    <!--
        分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
        因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="SkuBarcodeResult">
        select
        <include refid="skuBarcodeColumns"/>
        from t_wh_sku_barcode
        <include refid="skuBarcodeDynamicWhere"/>
    
    </select>
    
    <select id="findListByQueryMap" resultMap="SkuBarcodeResult">
        select
        <include refid="skuBarcodeColumns"/>
        from t_wh_sku_barcode
        <include refid="skuBarcodeDynamicWhere"/>
    
    </select>
    
    <select id="findListByParam" resultMap="SkuBarcodeResult">
        select
        <include refid="skuBarcodeColumns"/>
        from t_wh_sku_barcode
        <include refid="skuBarcodeDynamicWhere"/>
    
    </select>

</mapper>
