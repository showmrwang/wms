<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.baozun.scm.primservice.whoperation.dao.odo.WhOdoTransportMgmtDao">

    <resultMap id="WhOdoTransportMgmtResult" type="com.baozun.scm.primservice.whoperation.model.odo.WhOdoTransportMgmt">
    </resultMap>

    <resultMap id="WhOdoTransportMgmtPaginationResult" type="lark.common.dao.Pagination">
        <collection property="items" javaType="ArrayList" resultMap="WhOdoTransportMgmtResult"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="whOdoTransportMgmtColumns">
        <![CDATA[
                id as id,
                odo_id as odoId,
                transport_service_provider as transportServiceProvider,
                mode_of_transport as modeOfTransport,
                courier_service_type as courierServiceType,
                outbound_target_type as outboundTargetType,
                outbound_target as outboundTarget,
                deliver_goods_time_mode as deliverGoodsTimeMode,
                deliver_goods_time as deliverGoodsTime,
                plan_deliver_goods_time as planDeliverGoodsTime,
                actual_deliver_goods_time as actualDeliverGoodsTime,
                ou_id as ouId
        ]]>
    </sql>

    <sql id="whOdoTransportMgmtConditionWhereExt">
        <where>
            <if test="likeEqualsMap != null">
                <foreach collection="likeEqualsMap" index="key" item="value" separator="and" open=" and ">
                    ${key} like CONCAT('%',#{value},'%')
                </foreach>
            </if>

            <if test="equalsMap != null">
                <foreach collection="equalsMap" index="key" item="value" separator="and" open=" and ">
                    ${key} = #{value}
                </foreach>
            </if>

            <if test="notEqualsMap != null">
                <foreach collection="notEqualsMap" index="key" item="value" separator="and" open=" and ">
                    ${key} != #{value}
                </foreach>
            </if>

            <if test="greateMap != null">
                <foreach collection="greateMap" index="key" item="value" separator="and" open=" and ">
                    ${key} &gt; #{value}
                </foreach>
            </if>

            <if test="greateEqualsMap != null">
                <foreach collection="greateEqualsMap" index="key" item="value" separator="and" open=" and ">
                    ${key} &gt;= #{value}
                </foreach>
            </if>

            <if test="lessMap != null">
                <foreach collection="lessMap" index="key" item="value" separator="and" open=" and ">
                    ${key} &lt; #{value}
                </foreach>
            </if>

            <if test="lessEqualsMap != null">
                <foreach collection="lessEqualsMap" index="key" item="value" separator="and" open=" and ">
                    ${key} &lt;= #{value}
                </foreach>
            </if>

            <if test="nullMap != null">
                <foreach collection="nullMap" index="key" item="value" separator="and" open=" and ">
                    ${key} is null
                </foreach>
            </if>

            <if test="notNullMap != null">
                <foreach collection="notNullMap" index="key" item="value" separator="and" open=" and ">
                    ${key} is not null
                </foreach>
            </if>

            <if test="inMap != null">
                <foreach collection="inMap" index="key" item="value" separator="and" open=" and (" close=")">
                    <foreach collection="value" item="itemin" index="index" separator="or">
                        ${key} = #{itemin}
                    </foreach>
                </foreach>
            </if>

            <if test="notInMap != null">
                <foreach collection="notInMap" index="key" item="value" separator="and" open=" and (" close=")">
                    <foreach collection="value" item="itemin" index="index" separator="and">
                        ${key} != #{itemin}
                    </foreach>
                </foreach>
            </if>
        </where>

        <if test="sortBy != null">
            <foreach collection="sortBy" item="item" separator="," open=" order by ">
                ${item.field} ${item.type}
            </foreach>
        </if>
    </sql>

    <!-- 如果有自增字段 -->

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.odo.WhOdoTransportMgmt" flushCache="true">
        <![CDATA[
                INSERT INTO
                t_wh_odo_transport_mgmt (
                id,
                    odo_id ,
                    transport_service_provider ,
                    mode_of_transport ,
                    courier_service_type ,
                    outbound_target_type ,
                    outbound_target ,
                    deliver_goods_time_mode ,
                    deliver_goods_time ,
                    plan_deliver_goods_time ,
                    actual_deliver_goods_time ,
                    ou_id 
                ) VALUES (
                #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
                    #{odoId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                    #{transportServiceProvider,javaType=java.lang.String,jdbcType=VARCHAR} ,
                    #{modeOfTransport,javaType=java.lang.String,jdbcType=VARCHAR} ,
                    #{courierServiceType,javaType=java.lang.String,jdbcType=VARCHAR} ,
                    #{outboundTargetType,javaType=java.lang.String,jdbcType=VARCHAR} ,
                    #{outboundTarget,javaType=java.lang.String,jdbcType=VARCHAR} ,
                    #{deliverGoodsTimeMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
                    #{deliverGoodsTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                    #{planDeliverGoodsTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                    #{actualDeliverGoodsTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                    #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} 
                )
            ]]>

    </insert>

    <update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.odo.WhOdoTransportMgmt">
        <![CDATA[
            UPDATE t_wh_odo_transport_mgmt SET
                odo_id = #{odoId,javaType=java.lang.Long,jdbcType=BIGINT} ,
                transport_service_provider = #{transportServiceProvider,javaType=java.lang.String,jdbcType=VARCHAR} ,
                mode_of_transport = #{modeOfTransport,javaType=java.lang.String,jdbcType=VARCHAR} ,
                courier_service_type = #{courierServiceType,javaType=java.lang.String,jdbcType=VARCHAR} ,
                outbound_target_type = #{outboundTargetType,javaType=java.lang.String,jdbcType=VARCHAR} ,
                outbound_target = #{outboundTarget,javaType=java.lang.String,jdbcType=VARCHAR} ,
                deliver_goods_time_mode = #{deliverGoodsTimeMode,javaType=java.lang.String,jdbcType=VARCHAR} ,
                deliver_goods_time = #{deliverGoodsTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                plan_deliver_goods_time = #{planDeliverGoodsTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
                actual_deliver_goods_time = #{actualDeliverGoodsTime,javaType=java.util.Date,jdbcType=TIMESTAMP}
            WHERE 
                id = #{id} and ou_id=#{ouId}
        ]]>
    </update>

    <update id="batchUpdate">
        UPDATE t_wh_odo_transport_mgmt SET
        <foreach collection="batchUpdateMap" index="key" item="value" separator=",">
            ${key} = #{value}
        </foreach>
        <include refid="whOdoTransportMgmtConditionWhereExt"/>
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        <![CDATA[
            delete from t_wh_odo_transport_mgmt where
                id = #{id} 
        ]]>
    </delete>

    <delete id="deleteByIds" parameterType="list">
        delete from t_wh_odo_transport_mgmt
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="batchDelete">
        delete from t_wh_odo_transport_mgmt
        <include refid="whOdoTransportMgmtConditionWhereExt"/>
    </update>

    <select id="findById" parameterType="java.lang.Long" resultMap="WhOdoTransportMgmtResult" flushCache="false">
        select
        <include refid="whOdoTransportMgmtColumns"/>
        <![CDATA[
                from t_wh_odo_transport_mgmt 
                where 
                id = #{id} 
            ]]>
    </select>

    <select id="getByIds" parameterType="list" resultMap="WhOdoTransportMgmtResult" flushCache="false">
        select
        <include refid="whOdoTransportMgmtColumns"/>
        from t_wh_odo_transport_mgmt
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <sql id="whOdoTransportMgmtDynamicWhere">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>

            <if test="id!=null">
                and id = #{id}
            </if>

            <if test="odoId!=null">
                and odo_id = #{odoId}
            </if>

            <if test="transportServiceProvider!=null and transportServiceProvider!=''">
                and transport_service_provider = #{transportServiceProvider}
            </if>

            <if test="modeOfTransport!=null and modeOfTransport!=''">
                and mode_of_transport = #{modeOfTransport}
            </if>

            <if test="courierServiceType!=null and courierServiceType!=''">
                and courier_service_type = #{courierServiceType}
            </if>

            <if test="outboundTargetType!=null and outboundTargetType!=''">
                and outbound_target_type = #{outboundTargetType}
            </if>

            <if test="outboundTarget!=null and outboundTarget!=''">
                and outbound_target = #{outboundTarget}
            </if>

            <if test="deliverGoodsTimeMode!=null and deliverGoodsTimeMode!=''">
                and deliver_goods_time_mode = #{deliverGoodsTimeMode}
            </if>

            <if test="deliverGoodsTime!=null">
                and deliver_goods_time = #{deliverGoodsTime}
            </if>

            <if test="planDeliverGoodsTime!=null">
                and plan_deliver_goods_time = #{planDeliverGoodsTime}
            </if>

            <if test="actualDeliverGoodsTime!=null">
                and actual_deliver_goods_time = #{actualDeliverGoodsTime}
            </if>

            <if test="ouId!=null">
                and ou_id = #{ouId}
            </if>
        </where>
    </sql>

    <select id="getCount" resultType="long">
        select count(*) from t_wh_odo_transport_mgmt
    </select>

    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_odo_transport_mgmt
        <include refid="whOdoTransportMgmtDynamicWhere"/>
    </select>

    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_odo_transport_mgmt
        <include refid="whOdoTransportMgmtDynamicWhere"/>
    </select>

    <!--
        分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
        因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="WhOdoTransportMgmtResult">
        select
        <include refid="whOdoTransportMgmtColumns"/>
        from t_wh_odo_transport_mgmt
        <include refid="whOdoTransportMgmtDynamicWhere"/>
    </select>

    <select id="findListByQueryMap" resultMap="WhOdoTransportMgmtResult">
        select
        <include refid="whOdoTransportMgmtColumns"/>
        from t_wh_odo_transport_mgmt
        <include refid="whOdoTransportMgmtDynamicWhere"/>
    </select>

    <select id="findListByParam" resultMap="WhOdoTransportMgmtResult">
        select
        <include refid="whOdoTransportMgmtColumns"/>
        from t_wh_odo_transport_mgmt
        <include refid="whOdoTransportMgmtDynamicWhere"/>
    </select>

    <select id="query" resultMap="WhOdoTransportMgmtResult">
        select
        <include refid="whOdoTransportMgmtColumns"/>
        from t_wh_odo_transport_mgmt
        <include refid="whOdoTransportMgmtConditionWhereExt"/>
    </select>

    <select id="queryCount" resultType="long">
        select count(*) from t_wh_odo_transport_mgmt
        <include refid="whOdoTransportMgmtConditionWhereExt"/>
    </select>

</mapper>
