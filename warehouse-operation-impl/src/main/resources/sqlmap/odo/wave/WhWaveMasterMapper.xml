<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.odo.wave.WhWaveMasterDao">
	<resultMap id="WhWaveMasterResult" type="com.baozun.scm.primservice.whoperation.model.odo.wave.WhWaveMaster">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whWaveMasterColumns">
	    <![CDATA[
	        	id as id,
	        	name as name,
	        	code as code,
	        	ou_id as ouId,
	        	wave_condition_rule_id as waveConditionRuleId,
	        	wave_template_id as waveTemplateId,
	        	description as description,
	        	max_odo_qty as maxOdoQty,
	        	max_odo_line_qty as maxOdoLineQty,
	        	max_sku_qty as maxSkuQty,
	        	max_sku_category_qty as maxSkuCategoryQty,
	        	max_volume as maxVolume,
	        	max_weight as maxWeight,
	        	is_whole_order_outbound as isWholeOrderOutbound,
	        	create_time as createTime,
	        	last_modify_time as lastModifyTime,
	        	created_id as createdId,
	        	modified_id as modifiedId,
	        	lifecycle as lifecycle,
	        	 rcvd_work_priority as rcvdWorkPriority,
		        putaway_work_priority as putawayWorkPriority,
		        picking_work_priority as pickingWorkPriority,
		        picking_ext_priority as pickingExtPriority,
		        replenishment_work_priority as replenishmentWorkPriority,
		        stock_count_work_priority as stockCountWorkPriority,
		        in_warehouse_move_work_priority as inWarehouseMoveWorkPriority,
		        in_warehouse_process_work_priority as inWarehouseProcessWorkPriority,
		        is_auto_release_work as isAutoReleaseWork
	    ]]>
	</sql>
	
		<!-- 如果有自增字段 -->
		
			<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
			<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.odo.wave.WhWaveMaster" 
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_wh_wave_master (
		        id,
		        	name ,
		        	code ,
		        	ou_id ,
		        	wave_condition_rule_id ,
		        	wave_template_id ,
		        	description ,
		        	max_odo_qty ,
		        	max_odo_line_qty ,
		        	max_sku_qty ,
		        	max_sku_category_qty ,
		        	max_volume ,
		        	max_weight ,
		        	is_whole_order_outbound ,
		        	create_time ,
		        	last_modify_time ,
		        	created_id ,
		        	modified_id ,
		        	lifecycle,
		        	min_odo_qty,
		        	rcvd_work_priority,
		        	putaway_work_priority,
		        	picking_work_priority,
		        	replenishment_work_priority,
		        	stock_count_work_priority,
		        	in_warehouse_move_work_priority,
		        	in_warehouse_process_work_priority,
		        	is_auto_release_work,
		        	picking_ext_priority 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{waveConditionRuleId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{waveTemplateId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{description,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{maxOdoQty,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{maxOdoLineQty,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{maxSkuQty,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{maxSkuCategoryQty,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        	#{maxVolume,javaType=Double,jdbcType=DECIMAL} ,
		        	#{maxWeight,javaType=Double,jdbcType=DECIMAL} ,
		        	#{isWholeOrderOutbound,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        	#{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER},
		        	#{minOdoQty,javaType=java.lang.Integer,jdbcType=INTEGER},
		        	#{rcvdWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		            #{putawayWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		            #{pickingWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		            #{replenishmentWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		            #{stockCountWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		            #{inWarehouseMoveWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		            #{inWarehouseProcessWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		            #{isAutoReleaseWork,javaType=java.lang.Boolean,jdbcType=BIT},
		            #{pickingExtPriority,javaType=java.lang.Integer,jdbcType=INTEGER} 
		        )
		    ]]>

		</insert>
		
		
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.odo.wave.WhWaveMaster">
	    <![CDATA[
	        UPDATE t_wh_wave_master SET
		        name = #{name,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        code = #{code,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        ou_id = #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        wave_condition_rule_id = #{waveConditionRuleId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        wave_template_id = #{waveTemplateId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        description = #{description,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        max_odo_qty = #{maxOdoQty,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        max_odo_line_qty = #{maxOdoLineQty,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        max_sku_qty = #{maxSkuQty,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        max_sku_category_qty = #{maxSkuCategoryQty,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        max_volume = #{maxVolume,javaType=Long,jdbcType=DECIMAL} ,
		        max_weight = #{maxWeight,javaType=Long,jdbcType=DECIMAL} ,
		        is_whole_order_outbound = #{isWholeOrderOutbound,javaType=java.lang.Boolean,jdbcType=BIT} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        last_modify_time = #{lastModifyTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER},
		        min_odo_qty = #{minOdoQty,javaType=java.lang.Integer,jdbcType=INTEGER},
		        rcvd_work_priority = #{rcvdWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		        putaway_work_priority = #{putawayWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		        picking_work_priority = #{pickingWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		        replenishment_work_priority = #{replenishmentWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		        stock_count_work_priority = #{stockCountWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		        in_warehouse_move_work_priority = #{inWarehouseMoveWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		        in_warehouse_process_work_priority = #{inWarehouseProcessWorkPriority,javaType=java.lang.Integer,jdbcType=INTEGER},
		        is_auto_release_work = #{isAutoReleaseWork,javaType=java.lang.Boolean,jdbcType=BIT},
		        picking_ext_priority = #{pickingExtPriority,javaType=java.lang.Integer,jdbcType=INTEGER}  
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_wave_master where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_wave_master 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="WhWaveMasterResult" flushCache="false">
			select <include refid="whWaveMasterColumns" />
		    <![CDATA[
			    from t_wh_wave_master 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="WhWaveMasterResult" flushCache="false">
			select <include refid="whWaveMasterColumns" />
			    from t_wh_wave_master 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="whWaveMasterDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
	       
		       <if test="name!=null and name!=''">
					and name = #{name}
				</if>
	       
	       
		       <if test="code!=null and code!=''">
					and code = #{code}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
	       
				<if test="waveConditionRuleId!=null">
					and wave_condition_rule_id = #{waveConditionRuleId}
				</if>
	       
				<if test="waveTemplateId!=null">
					and wave_template_id = #{waveTemplateId}
				</if>
	       
	       
		       <if test="description!=null and description!=''">
					and description = #{description}
				</if>
	       
				<if test="maxOdoQty!=null">
					and max_odo_qty = #{maxOdoQty}
				</if>
	       
				<if test="maxOdoLineQty!=null">
					and max_odo_line_qty = #{maxOdoLineQty}
				</if>
	       
				<if test="maxSkuQty!=null">
					and max_sku_qty = #{maxSkuQty}
				</if>
	       
				<if test="maxSkuCategoryQty!=null">
					and max_sku_category_qty = #{maxSkuCategoryQty}
				</if>
	       
				<if test="maxVolume!=null">
					and max_volume = #{maxVolume}
				</if>
	       
				<if test="maxWeight!=null">
					and max_weight = #{maxWeight}
				</if>
	       
				<if test="isWholeOrderOutbound!=null">
					and is_whole_order_outbound = #{isWholeOrderOutbound}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="createdId!=null">
					and created_id = #{createdId}
				</if>
	       
				<if test="modifiedId!=null">
					and modified_id = #{modifiedId}
				</if>
	       
				<if test="lifecycle!=null">
					and lifecycle = #{lifecycle}
				</if>
				
				  <if test=" minOdoQty!=null">
					and min_odo_qty = #{ minOdoQty}
				</if>
				<if test="rcvdWorkPriority!=null">
					and rcvd_work_priority = #{rcvdWorkPriority}
				</if>
				<if test="putawayWorkPriority!=null">
					and putaway_work_priority = #{putawayWorkPriority}
				</if>
				<if test="pickingWorkPriority!=null">
					and picking_work_priority = #{pickingWorkPriority}
				</if>
				<if test="replenishmentWorkPriority!=null">
					and replenishment_work_priority = #{replenishmentWorkPriority}
				</if>
				<if test="stockCountWorkPriority!=null">
					and stock_count_work_priority = #{stockCountWorkPriority}
				</if>
				<if test="inWarehouseMoveWorkPriority!=null">
					and in_warehouse_move_work_priority = #{inWarehouseMoveWorkPriority}
				</if>
				<if test="inWarehouseProcessWorkPriority!=null">
					and  in_warehouse_process_work_priority = #{inWarehouseProcessWorkPriority}
				</if>
				<if test="isAutoReleaseWork!=null">
					and is_auto_release_work = #{isAutoReleaseWork}
				</if>
				<if test="pickingExtPriority!=null">
					and picking_ext_priority = #{pickingExtPriority}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_wh_wave_master 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_wave_master 
		<include refid="whWaveMasterDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_wave_master 
		<include refid="whWaveMasterDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="WhWaveMasterResult">
    	select <include refid="whWaveMasterColumns" />
	    from t_wh_wave_master 
		<include refid="whWaveMasterDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="WhWaveMasterResult">
    	select <include refid="whWaveMasterColumns" />
	    from t_wh_wave_master 
		<include refid="whWaveMasterDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="WhWaveMasterResult">
    	select <include refid="whWaveMasterColumns" />
	    from t_wh_wave_master 
		<include refid="whWaveMasterDynamicWhere"/>
		
    </select>

	
</mapper>
