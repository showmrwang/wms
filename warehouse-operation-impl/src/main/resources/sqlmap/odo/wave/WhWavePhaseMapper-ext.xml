<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.odo.wave.WhWavePhaseDao">
	<resultMap id="WhWavePhaseResultExt" type="com.baozun.scm.primservice.whoperation.model.odo.wave.WhWavePhase">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whWavePhaseColumnsExt">
	    <![CDATA[
	        	id as id,
	        	phase_order as phaseOrder,
	        	phase_code as phaseCode,
	        	wave_template_id as waveTemplateId,
	        	ou_id as ouId,
	        	create_time as createTime,
	        	last_modify_time as lastModifyTime,
	        	created_id as createdId,
	        	modified_id as modifiedId,
	        	lifecycle as lifecycle
	    ]]>
	</sql>
	
	<sql id="whWavePhaseDynamicWhereExt">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="phaseOrder!=null">
					and phase_order = #{phaseOrder}
				</if>
	       
	       
		       <if test="phaseCode!=null and phaseCode!=''">
					and phase_code = #{phaseCode}
				</if>
	       
				<if test="waveTemplateId!=null">
					and wave_template_id = #{waveTemplateId}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
	       
				<if test="createTime!=null">
					and create_time = #{createTime}
				</if>
	       
				<if test="lastModifyTime!=null">
					and last_modify_time = #{lastModifyTime}
				</if>
	       
				<if test="createdId!=null">
					and created_id = #{createdId}
				</if>
	       
				<if test="modifiedId!=null">
					and modified_id = #{modifiedId}
				</if>
	       
				<if test="lifecycle!=null">
					and lifecycle = #{lifecycle}
				</if>
		</where>
	</sql>
	<select id="findWaveByWaveTemplateId" resultMap="WhWavePhaseResultExt">
	          select <include refid="whWavePhaseColumnsExt"/>
	          from t_wh_wave_phase
	          where wave_template_id=#{whWaveTemplateId} 
	                and ou_id =#{ouId}
	                order by phase_order
	</select>
	
<select id="getWavePhaseCode" resultType="string">
	select phase_code from t_wh_wave_phase 
		<where>
			wave_template_id = #{whWaveTemplateId} 
			<if test="phaseCode!=null and phaseCode!=''">
				and phase_code &lt;&gt; #{phaseCode}
			</if>
				and lifecycle = 1 
		</where>
		order by phase_order asc limit 0,1
	</select>

	<delete id="deleWavePhase">
	         delete from t_wh_wave_phase where id=#{id} and ou_id=#{ouId}
	</delete>
	
	
	<update id="updateByVersion" parameterType="com.baozun.scm.primservice.whoperation.model.odo.wave.WhWavePhase">
	    <![CDATA[
	        UPDATE t_wh_wave_phase SET
		        phase_order = #{phaseOrder,javaType=java.lang.Integer,jdbcType=INTEGER} ,
		        phase_code = #{phaseCode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        wave_template_id = #{waveTemplateId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        create_time = #{createTime,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        last_modify_time = now(),
		        created_id = #{createdId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        modified_id = #{modifiedId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        lifecycle = #{lifecycle,javaType=java.lang.Integer,jdbcType=INTEGER} 
	        WHERE 
		        id = #{id} and ou_id = #{ouId} and last_modify_time = #{lastModifyTime}
	    ]]>
	</update>
	
</mapper>
