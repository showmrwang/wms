<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whoperation.dao.collect.WhOdoArchivLineIndexDao">
	<resultMap id="WhOdoArchivLineIndexResult" type="com.baozun.scm.primservice.whoperation.model.collect.WhOdoArchivLineIndex">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whOdoArchivLineIndexColumns">
	    <![CDATA[
	        	id as id,
	        	asn_id as asnId,
	        	collect_table_name as collectTableName,
	        	collect_odo_archiv_line_id as collectOdoArchivLineId,
	        	ou_id as ouId,
	        	sku_id as skuId,
	        	store_id as storeId,
	        	returned_purchase_qty as returnedPurchaseQty,
	        	mfg_date as mfgDate,
	        	exp_date as expDate,
	        	batch_number as batchNumber,
	        	country_of_origin as countryOfOrigin,
	        	inv_status as invStatus,
	        	inv_type as invType,
	        	inv_attr1 as invAttr1,
	        	inv_attr2 as invAttr2,
	        	inv_attr3 as invAttr3,
	        	inv_attr4 as invAttr4,
	        	inv_attr5 as invAttr5,
	        	color as color,
	        	style as style,
	        	size as size,
	        	sn as sn,
	        	uuid as uuid
	    ]]>
	</sql>
	
		<!-- 如果有自增字段 -->
		
			<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
			<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.collect.WhOdoArchivLineIndex" 
				
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_wh_odo_archiv_line_index (
		        id,
		        	asn_id ,
		        	collect_table_name ,
		        	collect_odo_archiv_line_id ,
		        	ou_id ,
		        	sku_id ,
		        	store_id ,
		        	returned_purchase_qty ,
		        	mfg_date ,
		        	exp_date ,
		        	batch_number ,
		        	country_of_origin ,
		        	inv_status ,
		        	inv_type ,
		        	inv_attr1 ,
		        	inv_attr2 ,
		        	inv_attr3 ,
		        	inv_attr4 ,
		        	inv_attr5 ,
		        	color ,
		        	style ,
		        	size ,
		        	sn ,
		        	uuid 
		        ) VALUES (
		        #{id,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{asnId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{collectTableName,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{collectOdoArchivLineId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{returnedPurchaseQty,javaType=java.lang.Double,jdbcType=DECIMAL} ,
		        	#{mfgDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{expDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        	#{batchNumber,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{countryOfOrigin,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invStatus,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{invType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invAttr1,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invAttr2,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invAttr3,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invAttr4,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{invAttr5,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{color,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{style,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{size,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{sn,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{uuid,javaType=java.lang.String,jdbcType=VARCHAR} 
		        )
		    ]]>

		</insert>
		
		
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.collect.WhOdoArchivLineIndex">
	    <![CDATA[
	        UPDATE t_wh_odo_archiv_line_index SET
		        asn_id = #{asnId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        collect_table_name = #{collectTableName,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        collect_odo_archiv_line_id = #{collectOdoArchivLineId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        ou_id = #{ouId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        sku_id = #{skuId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        store_id = #{storeId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        returned_purchase_qty = #{returnedPurchaseQty,javaType=java.lang.Double,jdbcType=DECIMAL} ,
		        mfg_date = #{mfgDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        exp_date = #{expDate,javaType=java.util.Date,jdbcType=TIMESTAMP} ,
		        batch_number = #{batchNumber,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        country_of_origin = #{countryOfOrigin,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_status = #{invStatus,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        inv_type = #{invType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr1 = #{invAttr1,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr2 = #{invAttr2,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr3 = #{invAttr3,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr4 = #{invAttr4,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        inv_attr5 = #{invAttr5,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        color = #{color,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        style = #{style,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        size = #{size,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        sn = #{sn,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        uuid = #{uuid,javaType=java.lang.String,jdbcType=VARCHAR} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_odo_archiv_line_index where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_odo_archiv_line_index 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="WhOdoArchivLineIndexResult" flushCache="false">
			select <include refid="whOdoArchivLineIndexColumns" />
		    <![CDATA[
			    from t_wh_odo_archiv_line_index 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="WhOdoArchivLineIndexResult" flushCache="false">
			select <include refid="whOdoArchivLineIndexColumns" />
			    from t_wh_odo_archiv_line_index 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="whOdoArchivLineIndexDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="asnId!=null">
					and asn_id = #{asnId}
				</if>
	       
	       
		       <if test="collectTableName!=null and collectTableName!=''">
					and collect_table_name = #{collectTableName}
				</if>
	       
				<if test="collectOdoArchivLineId!=null">
					and collect_odo_archiv_line_id = #{collectOdoArchivLineId}
				</if>
	       
				<if test="ouId!=null">
					and ou_id = #{ouId}
				</if>
	       
				<if test="skuId!=null">
					and sku_id = #{skuId}
				</if>
	       
				<if test="storeId!=null">
					and store_id = #{storeId}
				</if>
	       
				<if test="returnedPurchaseQty!=null">
					and returned_purchase_qty = #{returnedPurchaseQty}
				</if>
	       
				<if test="mfgDate!=null">
					and mfg_date = #{mfgDate}
				</if>
	       
				<if test="expDate!=null">
					and exp_date = #{expDate}
				</if>
	       
	       
		       <if test="batchNumber!=null and batchNumber!=''">
					and batch_number = #{batchNumber}
				</if>
	       
	       
		       <if test="countryOfOrigin!=null and countryOfOrigin!=''">
					and country_of_origin = #{countryOfOrigin}
				</if>
	       
				<if test="invStatus!=null">
					and inv_status = #{invStatus}
				</if>
	       
	       
		       <if test="invType!=null and invType!=''">
					and inv_type = #{invType}
				</if>
	       
	       
		       <if test="invAttr1!=null and invAttr1!=''">
					and inv_attr1 = #{invAttr1}
				</if>
	       
	       
		       <if test="invAttr2!=null and invAttr2!=''">
					and inv_attr2 = #{invAttr2}
				</if>
	       
	       
		       <if test="invAttr3!=null and invAttr3!=''">
					and inv_attr3 = #{invAttr3}
				</if>
	       
	       
		       <if test="invAttr4!=null and invAttr4!=''">
					and inv_attr4 = #{invAttr4}
				</if>
	       
	       
		       <if test="invAttr5!=null and invAttr5!=''">
					and inv_attr5 = #{invAttr5}
				</if>
	       
	       
		       <if test="color!=null and color!=''">
					and color = #{color}
				</if>
	       
	       
		       <if test="style!=null and style!=''">
					and style = #{style}
				</if>
	       
	       
		       <if test="size!=null and size!=''">
					and size = #{size}
				</if>
	       
	       
		       <if test="sn!=null and sn!=''">
					and sn = #{sn}
				</if>
	       
	       
		       <if test="uuid!=null and uuid!=''">
					and uuid = #{uuid}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_wh_odo_archiv_line_index 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_odo_archiv_line_index 
		<include refid="whOdoArchivLineIndexDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_odo_archiv_line_index 
		<include refid="whOdoArchivLineIndexDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="WhOdoArchivLineIndexResult">
    	select <include refid="whOdoArchivLineIndexColumns" />
	    from t_wh_odo_archiv_line_index 
		<include refid="whOdoArchivLineIndexDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="WhOdoArchivLineIndexResult">
    	select <include refid="whOdoArchivLineIndexColumns" />
	    from t_wh_odo_archiv_line_index 
		<include refid="whOdoArchivLineIndexDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="WhOdoArchivLineIndexResult">
    	select <include refid="whOdoArchivLineIndexColumns" />
	    from t_wh_odo_archiv_line_index 
		<include refid="whOdoArchivLineIndexDynamicWhere"/>
		
    </select>

	
</mapper>
