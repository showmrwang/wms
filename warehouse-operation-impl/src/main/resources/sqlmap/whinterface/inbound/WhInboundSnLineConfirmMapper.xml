<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="com.baozun.scm.primservice.whinterface.dao.inbound.WhInboundSnLineConfirmDao">
	<resultMap id="WhInboundSnLineConfirmResult" type="com.baozun.scm.primservice.whoperation.model.whinterface.inbound.WhInboundSnLineConfirm">
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="whInboundSnLineConfirmColumns">
	    <![CDATA[
	        	id as id,
	        	inbound_inv_line_confirm_id as inboundInvLineConfirmId,
	        	sn as sn,
	        	defect_ware_barcode as defectWareBarcode,
	        	defect_source as defectSource,
	        	defect_type as defectType,
	        	defect_reasons as defectReasons
	    ]]>
	</sql>
	
		<!-- 如果有自增字段 -->
	
			<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
			<insert id="insert" parameterType="com.baozun.scm.primservice.whoperation.model.whinterface.inbound.WhInboundSnLineConfirm" 
				useGeneratedKeys="true" keyProperty="id" 
			 flushCache="true">
		    <![CDATA[
		        INSERT INTO
		        t_wh_inbound_sn_line_confirm (
		        	inbound_inv_line_confirm_id ,
		        	sn ,
		        	defect_ware_barcode ,
		        	defect_source ,
		        	defect_type ,
		        	defect_reasons 
		        ) VALUES (
		        	#{inboundInvLineConfirmId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        	#{sn,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{defectWareBarcode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{defectSource,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{defectType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        	#{defectReasons,javaType=java.lang.String,jdbcType=VARCHAR} 
		        )
		    ]]>
	
			</insert>
		
		<update id="update" parameterType="com.baozun.scm.primservice.whoperation.model.whinterface.inbound.WhInboundSnLineConfirm">
	    <![CDATA[
	        UPDATE t_wh_inbound_sn_line_confirm SET
		        inbound_inv_line_confirm_id = #{inboundInvLineConfirmId,javaType=java.lang.Long,jdbcType=BIGINT} ,
		        sn = #{sn,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        defect_ware_barcode = #{defectWareBarcode,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        defect_source = #{defectSource,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        defect_type = #{defectType,javaType=java.lang.String,jdbcType=VARCHAR} ,
		        defect_reasons = #{defectReasons,javaType=java.lang.String,jdbcType=VARCHAR} 
	        WHERE 
		        id = #{id} 
	    ]]>
		</update>
	   <delete id="delete" parameterType="java.lang.Long">
	    <![CDATA[
	        delete from t_wh_inbound_sn_line_confirm where
		        id = #{id} 
	    ]]>
	    </delete> 
	    
	     <delete id="deleteByIds" parameterType="list">
	    
	        delete from t_wh_inbound_sn_line_confirm 
	        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>	
	  
	    </delete>  
	         
	    <select id="findById" parameterType="java.lang.Long" resultMap="WhInboundSnLineConfirmResult" flushCache="false">
			select <include refid="whInboundSnLineConfirmColumns" />
		    <![CDATA[
			    from t_wh_inbound_sn_line_confirm 
		        where 
		        id = #{id} 
		    ]]>
		</select>	
		<select id="getByIds" parameterType="list"  resultMap="WhInboundSnLineConfirmResult" flushCache="false">
			select <include refid="whInboundSnLineConfirmColumns" />
			    from t_wh_inbound_sn_line_confirm 
		        where id in
				<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
#{item}				</foreach>					
		</select>	
	<sql id="whInboundSnLineConfirmDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       
				<if test="id!=null">
					and id = #{id}
				</if>
	       
				<if test="inboundInvLineConfirmId!=null">
					and inbound_inv_line_confirm_id = #{inboundInvLineConfirmId}
				</if>
	       
	       
		       <if test="sn!=null and sn!=''">
					and sn = #{sn}
				</if>
	       
	       
		       <if test="defectWareBarcode!=null and defectWareBarcode!=''">
					and defect_ware_barcode = #{defectWareBarcode}
				</if>
	       
	       
		       <if test="defectSource!=null and defectSource!=''">
					and defect_source = #{defectSource}
				</if>
	       
	       
		       <if test="defectType!=null and defectType!=''">
					and defect_type = #{defectType}
				</if>
	       
	       
		       <if test="defectReasons!=null and defectReasons!=''">
					and defect_reasons = #{defectReasons}
				</if>
		</where>
	</sql>
	

	<select id="getCount" resultType="long">
        select count(*) from t_wh_inbound_sn_line_confirm 
    </select>
    <select id="findListCountByQueryMap" resultType="long">
        select count(*) from t_wh_inbound_sn_line_confirm 
		<include refid="whInboundSnLineConfirmDynamicWhere"/>    
    </select>
    
    <select id="findListCountByParam" resultType="long">
        select count(*) from t_wh_inbound_sn_line_confirm 
		<include refid="whInboundSnLineConfirmDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findListByQueryMapWithPage" resultMap="WhInboundSnLineConfirmResult">
    	select <include refid="whInboundSnLineConfirmColumns" />
	    from t_wh_inbound_sn_line_confirm 
		<include refid="whInboundSnLineConfirmDynamicWhere"/>
		
    </select>
    
    <select id="findListByQueryMap" resultMap="WhInboundSnLineConfirmResult">
    	select <include refid="whInboundSnLineConfirmColumns" />
	    from t_wh_inbound_sn_line_confirm 
		<include refid="whInboundSnLineConfirmDynamicWhere"/>
		
    </select>
    
    <select id="findListByParam" resultMap="WhInboundSnLineConfirmResult">
    	select <include refid="whInboundSnLineConfirmColumns" />
	    from t_wh_inbound_sn_line_confirm 
		<include refid="whInboundSnLineConfirmDynamicWhere"/>
		
    </select>

	
</mapper>
